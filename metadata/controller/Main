{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "Main",
        "id": "Main"
    },
    "designerId": "b0031603-6392-4726-b5dc-e5ff02ae1abc",
    "cn": [
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "MainView",
                "selector": "#MainView"
            },
            "designerId": "b34a5ed4-1d55-47d2-8ede-9d14e0efe0a6"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "textfield#aufnr",
                "designer|targetType": "Ext.form.field.Text",
                "fn": "onAufnrKeypress",
                "implHandler": [
                    "var me = this;\r",
                    "if (e.getCharCode() === e.ENTER) {\r",
                    "    // enter pressed\r",
                    "    me.loadTaskStore(textfield.value);\r",
                    "}"
                ],
                "name": "keypress",
                "scope": "me"
            },
            "designerId": "4a0c8dff-e776-446a-b7fa-db374fa195bb"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "textfield#aufnr",
                "designer|targetType": "Ext.form.field.Text",
                "fn": "onAufnrChange",
                "implHandler": [
                    "var me = this;\r",
                    "if (field.searchGo) {\r",
                    "    field.searchGo = false;\r",
                    "    me.loadTaskStore(newValue);\r",
                    "}"
                ],
                "name": "change",
                "scope": "me"
            },
            "designerId": "7252ac51-b93c-4735-9277-a9e202c41d7e"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "myPanel",
                "selector": "#myPanel"
            },
            "designerId": "e0987bf9-0b2d-4f4e-8807-cde371ccd601"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "mainViewport",
                "selector": "#myviewport"
            },
            "designerId": "d4d6af2b-3549-4947-a59a-8c6a6b29c0f4"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "mainViewport2",
                "selector": "#myviewport"
            },
            "designerId": "b122d2ac-56be-453d-8551-9fc532dffd3d"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "mytreepanel",
                "selector": "#mytreepanel"
            },
            "designerId": "4bd3438b-cd2d-44a9-a5a5-c3cce206005f"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "version",
                "selector": "#version"
            },
            "designerId": "c7c7930d-451d-49f1-a16b-e67d047b6142"
        },
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onLaunch",
                "implHandler": [
                    "var me = this;\r",
                    "// get users\r",
                    "me.getStore('UserStoreXml').load({\r",
                    "    action: 'read',\r",
                    "    scope: me\r",
                    "});\r",
                    "// get Selection Variants\r",
                    "me.getStore('SelectionVariantStoreXml').load({\r",
                    "    action: 'read',\r",
                    "    scope: me\r",
                    "});\r",
                    "// get Column Variants\r",
                    "me.getStore('ColumnStoreXml').load({\r",
                    "    action: 'read',\r",
                    "    scope: me\r",
                    "});\r",
                    "// get Materials\r",
                    "me.getStore('PartNumberStoreXml').load({\r",
                    "    action: 'read',\r",
                    "    scope: me\r",
                    "});\r",
                    "//get Column Variants\r",
                    "var ColumnVariantStoreXml = me.getStore('ColumnStoreXml').load({\r",
                    "    action: 'read',\r",
                    "    scope: me\r",
                    "});\r",
                    "//get Versions\r",
                    "var VersionStoreXml = me.getStore('VersionStoreXml').load({\r",
                    "    action: 'read',\r",
                    "    scope: me\r",
                    "});\r",
                    "//get Params\r",
                    "var ParamStoreXml = me.getStore('ParamStoreXml').load({\r",
                    "    action: 'read',\r",
                    "    scope: me\r",
                    "});\r",
                    "//get Tasks\r",
                    "var taskStoreXml = me.getStore('taskStore').load({\r",
                    "    action: 'read',\r",
                    "    scope: me\r",
                    "});\r",
                    "//get Gantt Config\r",
                    "var GanttConfigStoreXml = me.getStore('GanttConfigStoreXml').load({\r",
                    "    action: 'read',\r",
                    "    scope: me,\r",
                    "    callback: function (){\r",
                    "        var myPanel = Ext.widget('mypanel');\r",
                    "        var mainView = Ext.widget('mainview');\r",
                    "        mainView.insert(0,myPanel);\r",
                    "    }\r",
                    "});\r",
                    "var SelectionVariantStoreXml = me.getStore('SelectionVariantStoreXml').load({\r",
                    "    action: 'read',\r",
                    "    scope: me\r",
                    "});\r",
                    "var SelectedObjectStoreXml = me.getStore('SelectedObjectStoreXml').load({\r",
                    "    action: 'read',\r",
                    "    scope: me\r",
                    "});\r",
                    "var ParamStoreXml = me.getStore('PassedObjectsStoreXml').load({\r",
                    "    action: 'read',\r",
                    "    scope: me,\r",
                    "    callback: function () {\r",
                    "        ParamStoreXml.each(\r",
                    "        function (record) {\r",
                    "            var name = record.get('name');\r",
                    "            var value = record.get('value');\r",
                    "            var selectedStore = Ext.getStore('SelectedObjectStoreXml');\r",
                    "            switch (name) {\r",
                    "                case 'network' :\r",
                    "                    var networkParentNode = SelectedObjectStoreXml.getNodeById(\"networkParentNode\");\r",
                    "                    var networkChildNode = networkParentNode.appendChild({\r",
                    "                        type: name,\r",
                    "                        number: value,\r",
                    "                        leaf: true\r",
                    "                    });\r",
                    "                    break;\r",
                    "                case 'material' :\r",
                    "                    var materialParentNode = SelectedObjectStoreXml.getNodeById(\"materialParentNode\");\r",
                    "                    var materialkChildNode = materialParentNode.appendChild({\r",
                    "                        type: name,\r",
                    "                        number: value,\r",
                    "                        leaf: true\r",
                    "                    });\r",
                    "                    break;\r",
                    "                case 'effectivity' :\r",
                    "                    var effectivityParentNode = SelectedObjectStoreXml.getNodeById(\"effectivityParentNode\");\r",
                    "                    var effectivitykChildNode = effectivityParentNode.appendChild({\r",
                    "                        type: name,\r",
                    "                        number: value,\r",
                    "                        leaf: true\r",
                    "                    });\r",
                    "                    break;\r",
                    "                case 'program' :\r",
                    "                    var programParentNode = SelectedObjectStoreXml.getNodeById(\"programParentNode\");\r",
                    "                    var programkChildNode = programParentNode.appendChild({\r",
                    "                        type: name,\r",
                    "                        number: value,\r",
                    "                        leaf: true\r",
                    "                    });\r",
                    "                    break;\r",
                    "                case 'primaryMission' :\r",
                    "                    var primaryMissionParentNode = SelectedObjectStoreXml.getNodeById(\"primaryMissionParentNode\");\r",
                    "                    var primaryMissionkChildNode = primaryMissionParentNode.appendChild({\r",
                    "                        type: name,\r",
                    "                        number: value,\r",
                    "                        leaf: true\r",
                    "                    });\r",
                    "                    break;\r",
                    "                case 'buildItem' :\r",
                    "                    var buildItemParentNode = SelectedObjectStoreXml.getNodeById(\"buildItemParentNode\");\r",
                    "                    var buildItemkChildNode = buildItemParentNode.appendChild({\r",
                    "                        type: name,\r",
                    "                        number: value,\r",
                    "                        leaf: true\r",
                    "                    });\r",
                    "                    break;\r",
                    "                case 'tailNumber' :\r",
                    "                    var tailNumberParentNode = SelectedObjectStoreXml.getNodeById(\"tailNumberParentNode\");\r",
                    "                    var tailNumberkChildNode = tailNumberParentNode.appendChild({\r",
                    "                        type: name,\r",
                    "                        number: value,\r",
                    "                        leaf: true\r",
                    "                    });\r",
                    "                    break;\r",
                    "                case 'name' :\r",
                    "                    var nameParentNode = SelectedObjectStoreXml.getNodeById(\"nameParentNode\");\r",
                    "                    var namekChildNode = nameParentNode.appendChild({\r",
                    "                        type: name,\r",
                    "                        number: value,\r",
                    "                        leaf: true\r",
                    "                    });\r",
                    "                    break;\r",
                    "                case 'notes' :\r",
                    "                    var notesParentNode = SelectedObjectStoreXml.getNodeById(\"notesParentNode\");\r",
                    "                    var noteskChildNode = notesParentNode.appendChild({\r",
                    "                        type: name,\r",
                    "                        number: value,\r",
                    "                        leaf: true\r",
                    "                    });\r",
                    "                    break;\r",
                    "            }\r",
                    "        }\r",
                    "        );\r",
                    "    }\r",
                    "});\r",
                    "//Define Selected Objects Nodes\r",
                    "var rootNode = SelectedObjectStoreXml.getRootNode();\r",
                    "var networkNode = rootNode.appendChild({\r",
                    "    id: 'networkParentNode',\r",
                    "    type: \"Network\",\r",
                    "    number: 'Network',\r",
                    "    leaf: false\r",
                    "});\r",
                    "var materialNode = rootNode.appendChild({\r",
                    "    id: \"materialParentNode\",\r",
                    "    type: \"Material\",\r",
                    "    number: \"Material\",\r",
                    "    leaf: false\r",
                    "});\r",
                    "var effectivityNode = rootNode.appendChild({\r",
                    "    id: \"effectivityParentNode\",\r",
                    "    type: \"Effectivity\",\r",
                    "    number: \"Effectivity\",\r",
                    "    leaf: false\r",
                    "});\r",
                    "var plantNode = rootNode.appendChild({\r",
                    "    id: \"plantNode\",\r",
                    "    type: \"Plant\",\r",
                    "    number: \"Plant\",\r",
                    "    leaf: false\r",
                    "});\r",
                    "var programNode = rootNode.appendChild({\r",
                    "    id: \"programParentNode\",\r",
                    "    type: \"Program\",\r",
                    "    number: \"Program\",\r",
                    "    leaf: false\r",
                    "});\r",
                    "var primaryMissionNode = rootNode.appendChild({\r",
                    "    id: \"primaryMissionParentNode\",\r",
                    "    type: \"Primary Mission\",\r",
                    "    number: \"Primary Mission\",\r",
                    "    leaf: false\r",
                    "});\r",
                    "var buildItemNode = rootNode.appendChild({\r",
                    "    id: \"buildItemParentNode\",\r",
                    "    type: \"Build Item\",\r",
                    "    number: \"Build Item\",\r",
                    "    leaf: false\r",
                    "});\r",
                    "var tailNumberNode = rootNode.appendChild({\r",
                    "    id: \"tailNumberParentNode\",\r",
                    "    type: \"Tail Number\",\r",
                    "    number: \"Tail Number\",\r",
                    "    leaf: false\r",
                    "                    });\r",
                    "var nameNode = rootNode.appendChild({\r",
                    "    id: \"nameParentNode\",\r",
                    "    type: \"Name\",\r",
                    "    number: \"Name\",\r",
                    "    leaf: false\r",
                    "});\r",
                    "var notesNode = rootNode.appendChild({\r",
                    "    id: \"notesParentNode\",\r",
                    "    type: \"Notes\",\r",
                    "    number: \"Notes\",\r",
                    "    leaf: false\r",
                    "});\r",
                    ""
                ]
            },
            "designerId": "4bd20a09-25a9-433e-8294-5d031fa81b4a"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "aufnr"
                ],
                "fn": "loadTaskStore",
                "implHandler": [
                    "var me = this;\r",
                    "debugger;\r",
                    "me.TaskStoreXml.load({\r",
                    "    action: \"read\",\r",
                    "    scope: me,\r",
                    "    params: {aufnr: aufnr},\r",
                    "    listeners: {\r",
                    "        'load' : function(taskStore, startDate) {\r",
                    "            this.loaded=true;\r",
                    "        }\r",
                    "    }\r",
                    "});\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "4bf5122d-4b78-4993-a510-7613212ffb5f"
        },
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "application"
                ],
                "fn": "init",
                "implHandler": [
                    "var me=this;\r",
                    "Ext.define('taskStoreModel', {\r",
                    "            extend : 'Gnt.model.Task',\r",
                    "\r",
                    "            // A custom columns\r",
                    "            clsField : 'Test',\r",
                    "            fields : [\r",
                    "                { name : 'network', type : 'string' },\r",
                    "                { name : 'outline', type : 'string' },\r",
                    "                { name : 'color', type : 'string' },\r",
                    "                { name : 'actualstartdate' },\r",
                    "                { name : 'actualenddate' },\r",
                    "                { name : 'text01', type : 'string' },\r",
                    "                { name : 'text02', type : 'string' },\r",
                    "                { name : 'text03', type : 'string' },\r",
                    "                { name : 'text04', type : 'string' },\r",
                    "                { name : 'text05', type : 'string' },\r",
                    "                { name : 'text06', type : 'string' },\r",
                    "                { name : 'text07', type : 'string' },\r",
                    "                { name : 'text08', type : 'string' },\r",
                    "                { name : 'text09', type : 'string' },\r",
                    "                { name : 'text10', type : 'string' },\r",
                    "                { name : 'text11', type : 'string' },\r",
                    "                { name : 'text12', type : 'string' },\r",
                    "                { name : 'text13', type : 'string' },\r",
                    "                { name : 'text14', type : 'string' },\r",
                    "                { name : 'text15', type : 'string' },\r",
                    "                { name : 'tailNumber', type : 'tailNumber' },\r",
                    "                { name : 'primaryMission', type : 'primaryMission' },\r",
                    "                { name : 'program', type : 'program' },\r",
                    "                { name : 'taskDescription', type : 'taskDescription' },\r",
                    "                { name : 'mission', type : 'mission' },\r",
                    "                { name : 'majorBuildSequence', type : 'majorBuildSequence' },\r",
                    "                { name : 'minorBuildSequence', type : 'minorBuildSequence' }\r",
                    "            ]\r",
                    "        });\r",
                    "\r",
                    "me.taskStore = Ext.create('Gnt.data.TaskStore', {\r",
                    "    autoLoad    : false,\r",
                    "    alias\t\t: 'store.taskstore',\r",
                    "    storeId\t\t: 'taskStore',\r",
                    "    model\t\t: 'taskStoreModel',\r",
                    "    proxy       : {\r",
                    "        type    : 'ajax',\r",
                    "        url: '/dsnwebui/dsnwebui_rest/TaskStoreXml',\r",
                    "        timeout: 900000,\r",
                    "        reader  : {\r",
                    "            type: 'xml',\r",
                    "            root: 'Tasks',\r",
                    "            record: '>Task'\r",
                    "        }\r",
                    "    }\r",
                    "});\r",
                    ""
                ]
            },
            "designerId": "292a0639-fb4b-42b7-aade-6a2dc305fc65"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "field",
                    "newValue",
                    "oldValue",
                    "eOpts"
                ],
                "fn": "onTextFieldUpdate",
                "implHandler": [
                    "var me = this;\r",
                    "        var searchStore = Ext.getStore('SearchStoreXml');\r",
                    "        var parameters = {};\r",
                    "searchStore.load ({\r",
                    "    parameters: {\r",
                    "        name: field\r",
                    "    }\r",
                    "});"
                ]
            },
            "designerId": "7fd7eadc-96aa-4a95-9771-ccbc11db1436"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "container#eventTrigger",
                "designer|targetType": "Ext.button.Button",
                "fn": "onButtonClick1",
                "implHandler": [
                    "var me = this;\r",
                    "debugger;\r",
                    "var myPanel = Ext.widget('mypanel');\r",
                    "var mainView = Ext.widget('mainview');\r",
                    "var taskStore = Ext.store('taskstore');\r",
                    "mainView.setLoading(true);\r",
                    "taskStore.sync({\r",
                    "    callback: function() {\r",
                    "        mainView.removeAll();\r",
                    "        mainView.insert(0,myPanel);\r",
                    "        mainView.setLoading(false);\r",
                    "    }\r",
                    "});\r",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "49228124-2d17-434e-a355-b866db16b13d"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "container#eventTrigger",
                "designer|targetType": "EventTrigger",
                "fn": "onEventTriggerGanttConfig",
                "implHandler": [
                    "var me = this;\r",
                    "var ganttConfigStore = Ext.getStore('GanttConfigStoreXml');\r",
                    "var yesNoStore  = Ext.getStore('YesNoStore');\r",
                    "var selectedRecord;\r",
                    "var ganttExists = yesNoStore.findExact('name','ganttExists');\r",
                    "var mainView = Ext.widget('mainview');\r",
                    "var panelWidth = mainView.getWidth();\r",
                    "var panelHeight = mainView.getHeight();\r",
                    "var panelThird = panelWidth/3;\r",
                    "//finishDate\r",
                    "var finishRecordIndex = ganttConfigStore.findExact('name','finish');\r",
                    "var finishRecord = ganttConfigStore.getAt(finishRecordIndex);\r",
                    "var finishValue = finishRecord.get('value');\r",
                    "//startDate\r",
                    "startRecordIndex = ganttConfigStore.findExact('name','start');\r",
                    "var startRecord = ganttConfigStore.getAt(startRecordIndex);\r",
                    "var startValue = startRecord.get('value');\r",
                    "//columnVariant\r",
                    "columnVariantSelectedRecord = ganttConfigStore.findExact('name','columnVariant');\r",
                    "var columnVariantRecord = ganttConfigStore.getAt(columnVariantSelectedRecord);\r",
                    "var columnVariantValue = columnVariantRecord.get('value');\r",
                    "//selectionVariant\r",
                    "selectionVariantSelectedRecord = ganttConfigStore.findExact('name','selectionVariant');\r",
                    "var selectionVariantRecord = ganttConfigStore.getAt(selectionVariantSelectedRecord);\r",
                    "var selectionVariantValue = selectionVariantRecord.get('value');\r",
                    "//version\r",
                    "versionSelectedRecord = ganttConfigStore.findExact('name','version');\r",
                    "var versionRecord = ganttConfigStore.getAt(versionSelectedRecord);\r",
                    "var versionValue = versionRecord.get('value');\r",
                    "try {\r",
                    "    //text01\r",
                    "    text01SelectedRecord = ganttConfigStore.findExact('name','text01');\r",
                    "    var text01Record = ganttConfigStore.getAt(text01SelectedRecord);\r",
                    "    var text01Value = text01Record.get('value');\r",
                    "    switch (text01Value) {\r",
                    "        case 'Not Used':\r",
                    "            var text01Hide = true;\r",
                    "            break;\r",
                    "        case 'Icon FA':\r",
                    "            var text01columnType = 'templatecolumn';\r",
                    "            break;\r",
                    "        case 'Icon S/T':\r",
                    "            var text01columnType = 'templatecolumn';\r",
                    "            break;\r",
                    "        case 'Icon Fab':\r",
                    "            var text01columnType = 'templatecolumn';\r",
                    "            break;\r",
                    "        default :\r",
                    "            var text01columnType = 'gridcolumn';\r",
                    "            break;\r",
                    "    }\r",
                    "    //text02\r",
                    "    text02SelectedRecord = ganttConfigStore.findExact('name','text02');\r",
                    "    var text02Record = ganttConfigStore.getAt(text02SelectedRecord);\r",
                    "    var text02Value = text02Record.get('value');\r",
                    "    switch (text02Value) {\r",
                    "        case 'Not Used':\r",
                    "            var text02Hide = true;\r",
                    "            break;\r",
                    "        case 'Icon FA':\r",
                    "            var text02columnType = 'templatecolumn';\r",
                    "            break;\r",
                    "        case 'Icon S/T':\r",
                    "            var text02columnType = 'templatecolumn';\r",
                    "            break;\r",
                    "        case 'Icon Fab':\r",
                    "            var text02columnType = 'templatecolumn';\r",
                    "            break;\r",
                    "        default :\r",
                    "            var text02columnType = 'gridcolumn';\r",
                    "            break;\r",
                    "    }\r",
                    "    //text03\r",
                    "    text03SelectedRecord = ganttConfigStore.findExact('name','text03');\r",
                    "    var text03Record = ganttConfigStore.getAt(text03SelectedRecord);\r",
                    "    var text03Value = text03Record.get('value');\r",
                    "    switch (text03Value) {\r",
                    "        case 'Not Used':\r",
                    "            var text03Hide = true;\r",
                    "            break;\r",
                    "        case 'Icon FA':\r",
                    "            var text03columnType = 'templatecolumn';\r",
                    "            break;\r",
                    "        case 'Icon S/T':\r",
                    "            var text03columnType = 'templatecolumn';\r",
                    "            break;\r",
                    "        case 'Icon Fab':\r",
                    "            var text03columnType = 'templatecolumn';\r",
                    "            break;\r",
                    "        default :\r",
                    "            var text03columnType = 'gridcolumn';\r",
                    "            break;\r",
                    "    }\r",
                    "    //text04\r",
                    "    text04SelectedRecord = ganttConfigStore.findExact('name','text04');\r",
                    "    var text04Record = ganttConfigStore.getAt(text04SelectedRecord);\r",
                    "    var text04Value = text04Record.get('value');\r",
                    "    switch (text04Value) {\r",
                    "        case 'Not Used':\r",
                    "            var text04Hide = true;\r",
                    "            break;\r",
                    "        case 'Icon FA':\r",
                    "            var text04columnType = 'templatecolumn';\r",
                    "            break;\r",
                    "        case 'Icon S/T':\r",
                    "            var text04olumnType = 'templatecolumn';\r",
                    "            break;\r",
                    "        case 'Icon Fab':\r",
                    "            var text04columnType = 'templatecolumn';\r",
                    "            break;\r",
                    "        default :\r",
                    "            var text04columnType = 'gridcolumn';\r",
                    "            break;\r",
                    "    }\r",
                    "    //text05\r",
                    "    text05SelectedRecord = ganttConfigStore.findExact('name','text05');\r",
                    "    var text05Record = ganttConfigStore.getAt(text05SelectedRecord);\r",
                    "    var text05Value = text05Record.get('value');\r",
                    "    switch (text05Value) {\r",
                    "        case 'Not Used':\r",
                    "            var text05Hide = true;\r",
                    "            break;\r",
                    "        case 'Icon FA':\r",
                    "            var text05columnType = 'templatecolumn';\r",
                    "            break;\r",
                    "        case 'Icon S/T':\r",
                    "            var text05columnType = 'templatecolumn';\r",
                    "            break;\r",
                    "        case 'Icon Fab':\r",
                    "            var text05columnType = 'templatecolumn';\r",
                    "            break;\r",
                    "        default :\r",
                    "            var text05columnType = 'gridcolumn';\r",
                    "            break;\r",
                    "    }\r",
                    "    //text06\r",
                    "    text06SelectedRecord = ganttConfigStore.findExact('name','text06');\r",
                    "    var text06Record = ganttConfigStore.getAt(text06SelectedRecord);\r",
                    "    var text06Value = text06Record.get('value');\r",
                    "    switch (text06Value) {\r",
                    "        case 'Not Used':\r",
                    "            var text06Hide = true;\r",
                    "            break;\r",
                    "        case 'Icon FA':\r",
                    "            var text06columnType = 'templatecolumn';\r",
                    "            break;\r",
                    "        case 'Icon S/T':\r",
                    "            var text06columnType = 'templatecolumn';\r",
                    "            break;\r",
                    "        case 'Icon Fab':\r",
                    "            var text06columnType = 'templatecolumn';\r",
                    "            break;\r",
                    "        default :\r",
                    "            var text06columnType = 'gridcolumn';\r",
                    "            break;\r",
                    "    }\r",
                    "    //text07\r",
                    "    text07SelectedRecord = ganttConfigStore.findExact('name','text07');\r",
                    "    var text07Record = ganttConfigStore.getAt(text07SelectedRecord);\r",
                    "    var text07Value = text07Record.get('value');\r",
                    "    switch (text07Value) {\r",
                    "        case 'Not Used':\r",
                    "            var text07Hide = true;\r",
                    "            break;\r",
                    "        case 'Icon FA':\r",
                    "            var text07columnType = 'templatecolumn';\r",
                    "            break;\r",
                    "        case 'Icon S/T':\r",
                    "            var text07columnType = 'templatecolumn';\r",
                    "            break;\r",
                    "        case 'Icon Fab':\r",
                    "            var text07columnType = 'templatecolumn';\r",
                    "            break;\r",
                    "        default :\r",
                    "            var text07columnType = 'gridcolumn';\r",
                    "            break;\r",
                    "    }\r",
                    "    //text08\r",
                    "    text08SelectedRecord = ganttConfigStore.findExact('name','text08');\r",
                    "    var text08Record = ganttConfigStore.getAt(text08SelectedRecord);\r",
                    "    var text08Value = text08Record.get('value');\r",
                    "    switch (text08Value) {\r",
                    "        case 'Not Used':\r",
                    "            var text08Hide = true;\r",
                    "            break;\r",
                    "        case 'Icon FA':\r",
                    "            var text08columnType = 'templatecolumn';\r",
                    "            break;\r",
                    "        case 'Icon S/T':\r",
                    "            var text08columnType = 'templatecolumn';\r",
                    "            break;\r",
                    "        case 'Icon Fab':\r",
                    "            var text08columnType = 'templatecolumn';\r",
                    "            break;\r",
                    "        default :\r",
                    "            var text08columnType = 'gridcolumn';\r",
                    "            break;\r",
                    "    }\r",
                    "    //text09\r",
                    "    text09SelectedRecord = ganttConfigStore.findExact('name','text09');\r",
                    "    var text09Record = ganttConfigStore.getAt(text09SelectedRecord);\r",
                    "    var text09Value = text09Record.get('value');\r",
                    "    switch (text09Value) {\r",
                    "        case 'Not Used':\r",
                    "            var text09Hide = true;\r",
                    "            break;\r",
                    "        case 'Icon FA':\r",
                    "            var text09columnType = 'templatecolumn';\r",
                    "            break;\r",
                    "        case 'Icon S/T':\r",
                    "            var text09columnType = 'templatecolumn';\r",
                    "            break;\r",
                    "        case 'Icon Fab':\r",
                    "            var text09columnType = 'templatecolumn';\r",
                    "            break;\r",
                    "        default :\r",
                    "            var text09columnType = 'gridcolumn';\r",
                    "            break;\r",
                    "    }\r",
                    "    //text10\r",
                    "    text10SelectedRecord = ganttConfigStore.findExact('name','text10');\r",
                    "    var text10Record = ganttConfigStore.getAt(text10SelectedRecord);\r",
                    "    var text10Value = text10Record.get('value');\r",
                    "    switch (text10Value) {\r",
                    "        case 'Not Used':\r",
                    "            var text10Hide = true;\r",
                    "            break;\r",
                    "        case 'Icon FA':\r",
                    "            var text10columnType = 'templatecolumn';\r",
                    "            break;\r",
                    "        case 'Icon S/T':\r",
                    "            var text10columnType = 'templatecolumn';\r",
                    "            break;\r",
                    "        case 'Icon Fab':\r",
                    "            var text10columnType = 'templatecolumn';\r",
                    "            break;\r",
                    "        default :\r",
                    "            var text10columnType = 'gridcolumn';\r",
                    "            break;\r",
                    "    }\r",
                    "    //text11\r",
                    "    text11SelectedRecord = ganttConfigStore.findExact('name','text11');\r",
                    "    var text11Record = ganttConfigStore.getAt(text11SelectedRecord);\r",
                    "    var text11Value = text11Record.get('value');\r",
                    "    switch (text11Value) {\r",
                    "        case 'Not Used':\r",
                    "            var text11Hide = true;\r",
                    "            break;\r",
                    "        case 'Icon FA':\r",
                    "            var text11columnType = 'templatecolumn';\r",
                    "            break;\r",
                    "        case 'Icon S/T':\r",
                    "            var text11columnType = 'templatecolumn';\r",
                    "            break;\r",
                    "        case 'Icon Fab':\r",
                    "            var text11columnType = 'templatecolumn';\r",
                    "            break;\r",
                    "        default :\r",
                    "            var text11columnType = 'gridcolumn';\r",
                    "            break;\r",
                    "    }\r",
                    "    //text12\r",
                    "    text12SelectedRecord = ganttConfigStore.findExact('name','text12');\r",
                    "    var text12Record = ganttConfigStore.getAt(text12SelectedRecord);\r",
                    "    var text12Value = text12Record.get('value');\r",
                    "    switch (text12Value) {\r",
                    "        case 'Not Used':\r",
                    "            var text12Hide = true;\r",
                    "            break;\r",
                    "        case 'Icon FA':\r",
                    "            var text12columnType = 'templatecolumn';\r",
                    "            break;\r",
                    "        case 'Icon S/T':\r",
                    "            var text12columnType = 'templatecolumn';\r",
                    "            break;\r",
                    "        case 'Icon Fab':\r",
                    "            var text12columnType = 'templatecolumn';\r",
                    "            break;\r",
                    "        default :\r",
                    "            var text12columnType = 'gridcolumn';\r",
                    "            break;\r",
                    "    }\r",
                    "    //text13\r",
                    "    text13SelectedRecord = ganttConfigStore.findExact('name','text13');\r",
                    "    var text13Record = ganttConfigStore.getAt(text13SelectedRecord);\r",
                    "    var text13Value = text13Record.get('value');\r",
                    "    switch (text13Value) {\r",
                    "        case 'Not Used':\r",
                    "            var text13Hide = true;\r",
                    "            break;\r",
                    "        case 'Icon FA':\r",
                    "            var text13columnType = 'templatecolumn';\r",
                    "            break;\r",
                    "        case 'Icon S/T':\r",
                    "            var text13columnType = 'templatecolumn';\r",
                    "            break;\r",
                    "        case 'Icon Fab':\r",
                    "            var text13columnType = 'templatecolumn';\r",
                    "            break;\r",
                    "        default :\r",
                    "            var text13columnType = 'gridcolumn';\r",
                    "            break;\r",
                    "    }\r",
                    "    //text14\r",
                    "    text14SelectedRecord = ganttConfigStore.findExact('name','text14');\r",
                    "    var text14Record = ganttConfigStore.getAt(text14SelectedRecord);\r",
                    "    var text14Value = text14Record.get('value');\r",
                    "    switch (text14Value) {\r",
                    "        case 'Not Used':\r",
                    "            var text14Hide = true;\r",
                    "            break;\r",
                    "        case 'Icon FA':\r",
                    "            var text14columnType = 'templatecolumn';\r",
                    "            break;\r",
                    "        case 'Icon S/T':\r",
                    "            var text14columnType = 'templatecolumn';\r",
                    "            break;\r",
                    "        case 'Icon Fab':\r",
                    "            var text14columnType = 'templatecolumn';\r",
                    "            break;\r",
                    "        default :\r",
                    "            var columnTypemnType = 'gridcolumn';\r",
                    "            break;\r",
                    "    }\r",
                    "    //text15\r",
                    "    text15SelectedRecord = ganttConfigStore.findExact('name','text15');\r",
                    "    var text15Record = ganttConfigStore.getAt(text15SelectedRecord);\r",
                    "    var text15Value = text15Record.get('value');\r",
                    "    switch (text15Value) {\r",
                    "        case 'Not Used':\r",
                    "            var text15Hide = true;\r",
                    "            break;\r",
                    "        case 'Icon FA':\r",
                    "            var text15columnType = 'templatecolumn';\r",
                    "            break;\r",
                    "        case 'Icon S/T':\r",
                    "            var text15columnType = 'templatecolumn';\r",
                    "            break;\r",
                    "        case 'Icon Fab':\r",
                    "            var text15columnType = 'templatecolumn';\r",
                    "            break;\r",
                    "        default :\r",
                    "            var text15columnType = 'gridcolumn';\r",
                    "            break;\r",
                    "    }\r",
                    "} catch(e) {}\r",
                    "//status date\r",
                    "var statusDateSelectedRecord = ganttConfigStore.findExact('name','statusDate');\r",
                    "var statusDateRecord = ganttConfigStore.getAt(statusDateSelectedRecord);\r",
                    "var statusDateValue = statusDateRecord.get('value');\r",
                    "Ext.define('Line', {\r",
                    "    extend : 'Ext.data.Model',\r",
                    "    fields : [\r",
                    "        'Date',\r",
                    "        'Text',\r",
                    "        'Cls'\r",
                    "    ]\r",
                    "});\r",
                    "var lineStore = Ext.create('Ext.data.JsonStore', {\r",
                    "    model : 'Line',\r",
                    "    data  : [\r",
                    "        {\r",
                    "            Date : new Date(statusDateValue),\r",
                    "            Text : 'Status Date',\r",
                    "            Cls  : 'important'\r",
                    "        }\r",
                    "    ]\r",
                    "});\r",
                    "var tpl = new Ext.XTemplate('<!DOCTYPE html>' +\r",
                    "                            '<html class=\"' + Ext.baseCSSPrefix + 'border-box {htmlClasses}\" style=\"background-color:white !important\">' +\r",
                    "                            '<head>' +\r",
                    "                            '<meta content=\"text/html; charset=UTF-8\" http-equiv=\"Content-Type\" />' +\r",
                    "                            '<title>{column}/{row}</title>' +\r",
                    "                            '{styles}' +\r",
                    "                            '</head>' +\r",
                    "                            '<body class=\"' + Ext.baseCSSPrefix + 'webkit sch-export {bodyClasses}\" style=\"background-color:white !important\">' +\r",
                    "                            '<tpl if=\"showHeader\">' +\r",
                    "                            '<div class=\"ula-print-header\" style=\"width:{totalWidth}px\"><h3>{column}/{row}</h3></div>' +\r",
                    "                            '</tpl>' +\r",
                    "                            '<tpl>' +\r",
                    "                                '<div class=\"ula-print-header\">' +\r",
                    "                                    '<h2>MASTER PRODUCTION SCHEDULE (MPS)</h2>' +\r",
                    "                                    '<h3>{[this.getPrintTitle()]}</h3>' +\r",
                    "                                    '<p>~ United Launch Alliance (ULA) Proprietary Information ~</p>' +\r",
                    "                                '</div>' +\r",
                    "                                '<div class=\"ula-print-header-text\">' +\r",
                    "                                    '<p>Status Date: {[this.getStatusDate()]}</p>' +\r",
                    "                                '</div>' +\r",
                    "                            '</tpl>' +\r",
                    "                            '<tpl>' +\r",
                    "                            '<div class=\"{componentClasses}\" style=\"height:{bodyHeight}px; width:{totalWidth}px; position: relative !important\">' +\r",
                    "                            '{HTML}' +\r",
                    "                            '</div>' +\r",
                    "                            '</tpl>' +\r",
                    "                            '<tpl>' +\r",
                    "                                '<div class=\"ula-print-footer\">' +\r",
                    "                                    '<h3><div style=\"float:left\">{[this.getPrintFooterLeft()]}</div></h3>' +\r",
                    "                                    '<h3><div style=\"float:right\">{[this.getPrintFooterRight()]}</div></h3>' +\r",
                    "                                    '<h3>Page 1 of 1</h3>' +\r",
                    "                                '</div>' +\r",
                    "                            '</tpl>' +\r",
                    "                            '</body>' +\r",
                    "                            '</html>',\r",
                    "                            {\r",
                    "                                disableFormats: true,\r",
                    "                                getStatusDate: function() {\r",
                    "                                    var statusDate = statusDateValue;\r",
                    "                                    statusDate = String(statusDate).split(\",\");\r",
                    "                                    var myYr = statusDate[0];\r",
                    "                                    var myMth = statusDate[1];\r",
                    "                                    var myDay = statusDate[2];\r",
                    "                                    statusDate = myMth+ \"/\"+myDay+\"/\"+myYr;\r",
                    "                                    return statusDate;\r",
                    "                                },\r",
                    "                                getPrintTitle: function() {\r",
                    "                                    var configStore = Ext.getStore('GanttConfigStoreXml');\r",
                    "                                    var printTitle = configStore.findExact('name','printTitle');\r",
                    "                                    if (printTitle !== -1) {\r",
                    "                                        printTitle = configStore.getAt(printTitle).get('value');\r",
                    "                                    } else {\r",
                    "                                        printTitle = '';\r",
                    "                                    }\r",
                    "                                    return printTitle;\r",
                    "                                },\r",
                    "                                getPrintFooterRight: function() {\r",
                    "                                    var configStore = Ext.getStore('GanttConfigStoreXml');\r",
                    "                                    var printFooterRight = configStore.findExact('name','printFooterRight');\r",
                    "                                    if (printFooterRight !== -1){\r",
                    "                                        printFooterRight = configStore.getAt(printFooterRight).get('value');\r",
                    "                                        printFooterRight.replace(/(\\r\\n|\\n|\\r)/g,\"<br>\");\r",
                    "                                    } else {\r",
                    "                                        printFooterRight = '';\r",
                    "                                    }\r",
                    "                                    return printFooterRight;\r",
                    "                                },\r",
                    "                                getPrintFooterLeft: function() {\r",
                    "                                    var configStore = Ext.getStore('GanttConfigStoreXml');\r",
                    "                                    var printFooterLeft = configStore.findExact('name','printFooterLeft');\r",
                    "                                    if (printFooterLeft !== -1){\r",
                    "                                        printFooterLeft = configStore.getAt(printFooterLeft).get('value');\r",
                    "                                        printFooterLeft.replace(/(\\r\\n|\\n|\\r)/g,\"<br>\");\r",
                    "                                    } else {\r",
                    "                                        printFooterLeft ='';\r",
                    "                                    }\r",
                    "                                    return printFooterLeft;\r",
                    "                                },\r",
                    "                                getPrintFooterCenter: function() {\r",
                    "                                    var configStore = Ext.getStore('GanttConfigStoreXml');\r",
                    "                                    var printFooterCenter = configStore.findExact('name','printFooterCenter');\r",
                    "                                    if (printFooterCenter !== -1) {\r",
                    "                                        printFooterCenter = configStore.getAt(printFooterCenter).get('value');\r",
                    "                                        printFooterCenter.replace(/(\\r\\n|\\n|\\r)/g,\"<br>\");\r",
                    "                                    } else {\r",
                    "                                        printFooterCenter = '';\r",
                    "                                    }\r",
                    "                                    return printFooterCenter;\r",
                    "                                }\r",
                    "                            }\r",
                    ");\r",
                    "if (ganttExists != -1){\r",
                    "    var ganttPanelCmp = Ext.getCmp('ganttPanel');\r",
                    "    ganttPanelCmp.lockedGrid.reconfigure(ganttPanelCmp.getStore(), [\r",
                    "    {\r",
                    "        xtype : 'gridcolumn',\r",
                    "        dataIndex: 'program',\r",
                    "        header: 'Program'\r",
                    "    },{\r",
                    "        xtype : 'gridcolumn',\r",
                    "        dataIndex: 'tailNumber',\r",
                    "        header: 'Tail Number'\r",
                    "    },{\r",
                    "        xtype : 'gridcolumn',\r",
                    "        dataIndex: 'primaryMission',\r",
                    "        header: 'Primary Mission'\r",
                    "    },{\r",
                    "        xtype: 'treecolumn',\r",
                    "        header: 'Tasks',\r",
                    "        sortable: false,\r",
                    "        dataIndex: 'Name',\r",
                    "        width: 200,\r",
                    "        renderer: function (value, metadata, record, rowIdx, colIdx, store, view){\r",
                    "            var backgroundColor = record.get('color');\r",
                    "            if (backgroundColor !== \"\"){\r",
                    "                switch (backgroundColor) {\r",
                    "                    case 'red':\r",
                    "                        metadata.style = \"background-color:#ff6666;\";\r",
                    "                        return value;\r",
                    "                    case 'gray':\r",
                    "                        metadata.style = \"background-color:#b2b2b2\";\r",
                    "                        return value;\r",
                    "                    case 'orange':\r",
                    "                        metadata.style = \"background-color:#FFA500\";\r",
                    "                        return value;\r",
                    "                    case 'blue':\r",
                    "                        metadata.style = \"background-color:#7f7fff\";\r",
                    "                        return value;\r",
                    "                    case 'yellow':\r",
                    "                        metadata.style = \"background-color:#ffff00\";\r",
                    "                        return value;\r",
                    "                    case 'green':\r",
                    "                        metadata.style = \"background-color:#7fbf7f\";\r",
                    "                        metadata.style = \"\";\r",
                    "                        return value;\r",
                    "                }\r",
                    "            } else {\r",
                    "                return value;\r",
                    "            }\r",
                    "            }\r",
                    "    },{\r",
                    "        xtype : 'startdatecolumn',\r",
                    "        dateFormat: 'm-d-Y',\r",
                    "        dataIndex: 'StartDate',\r",
                    "        hidden: true\r",
                    "    },{\r",
                    "        xtype : 'enddatecolumn',\r",
                    "        dateFormat: 'm-d-Y',\r",
                    "        dataIndex: 'EndDate',\r",
                    "        hidden: true\r",
                    "    },{\r",
                    "        xtype : 'baselinestartdatecolumn',\r",
                    "        dataIndex: 'BaselineStartDate',\r",
                    "        dateFormat: 'm-d-Y',\r",
                    "        hidden: true\r",
                    "    },{\r",
                    "        xtype : 'baselineenddatecolumn',\r",
                    "        dataIndex: 'BaselineEndDate',\r",
                    "        dateFormat: 'm-d-Y',\r",
                    "        hidden: true\r",
                    "    },{\r",
                    "        xtype : 'durationcolumn',\r",
                    "        hidden: true\r",
                    "    },{\r",
                    "        xtype : 'datecolumn',\r",
                    "        dataIndex: 'actualstartdate',\r",
                    "        header: 'Actual Start',\r",
                    "        dateFormat: 'm-d-Y',\r",
                    "        hidden: true\r",
                    "    },{\r",
                    "        xtype : 'datecolumn',\r",
                    "        dataIndex: 'actualenddate',\r",
                    "        header: 'Actual Finish',\r",
                    "        dateFormat: 'm-d-Y',\r",
                    "        hidden: true\r",
                    "    },{\r",
                    "        xtype : 'percentdonecolumn',\r",
                    "        width : 50,\r",
                    "        dataIndex: 'PercentDone',\r",
                    "        hidden: true\r",
                    "    },{\r",
                    "        xtype : 'predecessorcolumn',\r",
                    "        hidden: true\r",
                    "    },{\r",
                    "        xtype : 'notecolumn',\r",
                    "        hidden: true\r",
                    "    },{\r",
                    "        xtype : 'gridcolumn',\r",
                    "        dataIndex: 'outline',\r",
                    "        header: 'Outline',\r",
                    "        hidden: true\r",
                    "    },{\r",
                    "        xtype : 'gridcolumn',\r",
                    "        dataIndex: 'color',\r",
                    "        header: 'Color',\r",
                    "        hidden: true\r",
                    "    },{\r",
                    "        xtype : 'gridcolumn',\r",
                    "        dataIndex: 'text01',\r",
                    "        header: text01Value,\r",
                    "        hidden: text01Hide,\r",
                    "        renderer: function (value, metadata, record, rowIdx, colIdx, store, view){\r",
                    "            var backgroundColor = record.get('color');\r",
                    "            if (backgroundColor=='euTracker'){\r",
                    "                metadata.style = \"background-color:#B2B2FF;\";\r",
                    "                return value;\r",
                    "            }\r",
                    "            switch (value) {\r",
                    "                case '#ICON_1#':\r",
                    "                    metadata.css = 'ula-icon-1';\r",
                    "                    return;\r",
                    "                case '#ICON_2#':\r",
                    "                    metadata.css = 'ula-icon-2';\r",
                    "                    return;\r",
                    "                case '#ICON_3#':\r",
                    "                    metadata.css = 'ula-icon-3';\r",
                    "                    return;\r",
                    "                default:\r",
                    "                    return value;\r",
                    "            }\r",
                    "        }\r",
                    "    },{\r",
                    "        xtype : 'gridcolumn',\r",
                    "        dataIndex: 'text02',\r",
                    "        header: text02Value,\r",
                    "        hidden: text02Hide,\r",
                    "        renderer: function (value, metadata, record, rowIdx, colIdx, store, view){\r",
                    "            var backgroundColor = record.get('color');\r",
                    "            if (backgroundColor=='euTracker'){\r",
                    "                metadata.style = \"background-color:#B2B2FF;\";\r",
                    "                return value;\r",
                    "            }\r",
                    "            switch (value) {\r",
                    "                case '#ICON_1#':\r",
                    "                    metadata.css = 'ula-icon-1';\r",
                    "                    return;\r",
                    "                case '#ICON_2#':\r",
                    "                    metadata.css = 'ula-icon-2';\r",
                    "                    return;\r",
                    "                case '#ICON_3#':\r",
                    "                    metadata.css = 'ula-icon-3';\r",
                    "                    return;\r",
                    "                default:\r",
                    "                    return value;\r",
                    "            }\r",
                    "        }\r",
                    "    },{\r",
                    "        xtype : 'gridcolumn',\r",
                    "        dataIndex: 'text03',\r",
                    "        header: text03Value,\r",
                    "        hidden: text03Hide,\r",
                    "        renderer: function (value, metadata, record, rowIdx, colIdx, store, view){\r",
                    "            var backgroundColor = record.get('color');\r",
                    "            if (backgroundColor=='euTracker'){\r",
                    "                metadata.style = \"background-color:#B2B2FF;\";\r",
                    "                return value;\r",
                    "            }\r",
                    "            switch (value) {\r",
                    "                case '#ICON_1#':\r",
                    "                    metadata.css = 'ula-icon-1';\r",
                    "                    return;\r",
                    "                case '#ICON_2#':\r",
                    "                    metadata.css = 'ula-icon-2';\r",
                    "                    return;\r",
                    "                case '#ICON_3#':\r",
                    "                    metadata.css = 'ula-icon-3';\r",
                    "                    return;\r",
                    "                default:\r",
                    "                    return value;\r",
                    "            }\r",
                    "        }\r",
                    "    },{\r",
                    "        xtype : 'gridcolumn',\r",
                    "        dataIndex: 'text04',\r",
                    "        header: text04Value,\r",
                    "        hidden: text04Hide,\r",
                    "        renderer: function (value, metadata, record, rowIdx, colIdx, store, view){\r",
                    "            var backgroundColor = record.get('color');\r",
                    "            if (backgroundColor=='euTracker'){\r",
                    "                metadata.style = \"background-color:#B2B2FF;\";\r",
                    "                return value;\r",
                    "            }\r",
                    "            switch (value) {\r",
                    "                case '#ICON_1#':\r",
                    "                    metadata.css = 'ula-icon-1';\r",
                    "                    return;\r",
                    "                case '#ICON_2#':\r",
                    "                    metadata.css = 'ula-icon-2';\r",
                    "                    return;\r",
                    "                case '#ICON_3#':\r",
                    "                    metadata.css = 'ula-icon-3';\r",
                    "                    return;\r",
                    "                default:\r",
                    "                    return value;\r",
                    "            }\r",
                    "        }\r",
                    "    },{\r",
                    "        xtype : 'gridcolumn',\r",
                    "        dataIndex: 'text05',\r",
                    "        header: text05Value,\r",
                    "        hidden: text05Hide,\r",
                    "        renderer: function (value, metadata, record, rowIdx, colIdx, store, view){\r",
                    "            var backgroundColor = record.get('color');\r",
                    "            if (backgroundColor=='euTracker'){\r",
                    "                metadata.style = \"background-color:#B2B2FF;\";\r",
                    "                return value;\r",
                    "            }\r",
                    "            switch (value) {\r",
                    "                case '#ICON_1#':\r",
                    "                    metadata.css = 'ula-icon-1';\r",
                    "                    return;\r",
                    "                case '#ICON_2#':\r",
                    "                    metadata.css = 'ula-icon-2';\r",
                    "                    return;\r",
                    "                case '#ICON_3#':\r",
                    "                    metadata.css = 'ula-icon-3';\r",
                    "                    return;\r",
                    "                default:\r",
                    "                    return value;\r",
                    "            }\r",
                    "        }\r",
                    "    },{\r",
                    "        xtype : 'gridcolumn',\r",
                    "        dataIndex: 'text06',\r",
                    "        header: text06Value,\r",
                    "        hidden: text06Hide,\r",
                    "        renderer: function (value, metadata, record, rowIdx, colIdx, store, view){\r",
                    "            var backgroundColor = record.get('color');\r",
                    "            if (backgroundColor=='euTracker'){\r",
                    "                metadata.style = \"background-color:#B2B2FF;\";\r",
                    "                return value;\r",
                    "            }\r",
                    "            switch (value) {\r",
                    "                case '#ICON_1#':\r",
                    "                    metadata.css = 'ula-icon-1';\r",
                    "                    return;\r",
                    "                case '#ICON_2#':\r",
                    "                    metadata.css = 'ula-icon-2';\r",
                    "                    return;\r",
                    "                case '#ICON_3#':\r",
                    "                    metadata.css = 'ula-icon-3';\r",
                    "                    return;\r",
                    "                default:\r",
                    "                    return value;\r",
                    "            }\r",
                    "        }\r",
                    "    },{\r",
                    "        xtype : 'gridcolumn',\r",
                    "        dataIndex: 'text07',\r",
                    "        header: text07Value,\r",
                    "        hidden: text07Hide,\r",
                    "        renderer: function (value, metadata, record, rowIdx, colIdx, store, view){\r",
                    "            var backgroundColor = record.get('color');\r",
                    "            if (backgroundColor=='euTracker'){\r",
                    "                metadata.style = \"background-color:#B2B2FF;\";\r",
                    "                return value;\r",
                    "            }\r",
                    "            switch (value) {\r",
                    "                case '#ICON_1#':\r",
                    "                    metadata.css = 'ula-icon-1';\r",
                    "                    return;\r",
                    "                case '#ICON_2#':\r",
                    "                    metadata.css = 'ula-icon-2';\r",
                    "                    return;\r",
                    "                case '#ICON_3#':\r",
                    "                    metadata.css = 'ula-icon-3';\r",
                    "                    return;\r",
                    "                default:\r",
                    "                    return value;\r",
                    "            }\r",
                    "        }\r",
                    "    },{\r",
                    "        xtype : 'gridcolumn',\r",
                    "        dataIndex: 'text08',\r",
                    "        header: text08Value,\r",
                    "        hidden: text08Hide,\r",
                    "        renderer: function (value, metadata, record, rowIdx, colIdx, store, view){\r",
                    "            var backgroundColor = record.get('color');\r",
                    "            if (backgroundColor=='euTracker'){\r",
                    "                metadata.style = \"background-color:#B2B2FF;\";\r",
                    "                return value;\r",
                    "            }\r",
                    "            switch (value) {\r",
                    "                case '#ICON_1#':\r",
                    "                    metadata.css = 'ula-icon-1';\r",
                    "                    return;\r",
                    "                case '#ICON_2#':\r",
                    "                    metadata.css = 'ula-icon-2';\r",
                    "                    return;\r",
                    "                case '#ICON_3#':\r",
                    "                    metadata.css = 'ula-icon-3';\r",
                    "                    return;\r",
                    "                default:\r",
                    "                    return value;\r",
                    "            }\r",
                    "        }\r",
                    "    },{\r",
                    "        xtype : 'gridcolumn',\r",
                    "        dataIndex: 'text09',\r",
                    "        header: text09Value,\r",
                    "        hidden: text09Hide,\r",
                    "        renderer: function (value, metadata, record, rowIdx, colIdx, store, view){\r",
                    "            var backgroundColor = record.get('color');\r",
                    "            if (backgroundColor=='euTracker'){\r",
                    "                metadata.style = \"background-color:#B2B2FF;\";\r",
                    "                return value;\r",
                    "            }\r",
                    "            switch (value) {\r",
                    "                case '#ICON_1#':\r",
                    "                    metadata.css = 'ula-icon-1';\r",
                    "                    return;\r",
                    "                case '#ICON_2#':\r",
                    "                    metadata.css = 'ula-icon-2';\r",
                    "                    return;\r",
                    "                case '#ICON_3#':\r",
                    "                    metadata.css = 'ula-icon-3';\r",
                    "                    return;\r",
                    "                default:\r",
                    "                    return value;\r",
                    "            }\r",
                    "        }\r",
                    "    },{\r",
                    "        xtype : 'gridcolumn',\r",
                    "        dataIndex: 'text10',\r",
                    "        header: text10Value,\r",
                    "        hidden: text10Hide,\r",
                    "        renderer: function (value, metadata, record, rowIdx, colIdx, store, view){\r",
                    "            var backgroundColor = record.get('color');\r",
                    "            if (backgroundColor=='euTracker'){\r",
                    "                metadata.style = \"background-color:#B2B2FF;\";\r",
                    "                return value;\r",
                    "            }\r",
                    "            switch (value) {\r",
                    "                case '#ICON_1#':\r",
                    "                    metadata.css = 'ula-icon-1';\r",
                    "                    return;\r",
                    "                case '#ICON_2#':\r",
                    "                    metadata.css = 'ula-icon-2';\r",
                    "                    return;\r",
                    "                case '#ICON_3#':\r",
                    "                    metadata.css = 'ula-icon-3';\r",
                    "                    return;\r",
                    "                default:\r",
                    "                    return value;\r",
                    "            }\r",
                    "        }\r",
                    "    },{\r",
                    "        xtype : 'gridcolumn',\r",
                    "        dataIndex: 'text11',\r",
                    "        header: text11Value,\r",
                    "        hidden: text11Hide,\r",
                    "        renderer: function (value, metadata, record, rowIdx, colIdx, store, view){\r",
                    "            var backgroundColor = record.get('color');\r",
                    "            if (backgroundColor=='euTracker'){\r",
                    "                metadata.style = \"background-color:#B2B2FF;\";\r",
                    "                return value;\r",
                    "            }\r",
                    "            switch (value) {\r",
                    "                case '#ICON_1#':\r",
                    "                    metadata.css = 'ula-icon-1';\r",
                    "                    return;\r",
                    "                case '#ICON_2#':\r",
                    "                    metadata.css = 'ula-icon-2';\r",
                    "                    return;\r",
                    "                case '#ICON_3#':\r",
                    "                    metadata.css = 'ula-icon-3';\r",
                    "                    return;\r",
                    "                default:\r",
                    "                    return value;\r",
                    "            }\r",
                    "        }\r",
                    "    },{\r",
                    "        xtype : 'gridcolumn',\r",
                    "        dataIndex: 'text12',\r",
                    "        header: text12Value,\r",
                    "        hidden: text12Hide,\r",
                    "        renderer: function (value, metadata, record, rowIdx, colIdx, store, view){\r",
                    "            var backgroundColor = record.get('color');\r",
                    "            if (backgroundColor=='euTracker'){\r",
                    "                metadata.style = \"background-color:#B2B2FF;\";\r",
                    "                return value;\r",
                    "            }\r",
                    "            switch (value) {\r",
                    "                case '#ICON_1#':\r",
                    "                    metadata.css = 'ula-icon-1';\r",
                    "                    return;\r",
                    "                case '#ICON_2#':\r",
                    "                    metadata.css = 'ula-icon-2';\r",
                    "                    return;\r",
                    "                case '#ICON_3#':\r",
                    "                    metadata.css = 'ula-icon-3';\r",
                    "                    return;\r",
                    "                default:\r",
                    "                    return value;\r",
                    "            }\r",
                    "        }\r",
                    "    },{\r",
                    "        xtype : 'gridcolumn',\r",
                    "        dataIndex: 'text13',\r",
                    "        header: text13Value,\r",
                    "        hidden: text13Hide,\r",
                    "        renderer: function (value, metadata, record, rowIdx, colIdx, store, view){\r",
                    "            var backgroundColor = record.get('color');\r",
                    "            if (backgroundColor=='euTracker'){\r",
                    "                metadata.style = \"background-color:#B2B2FF;\";\r",
                    "                return value;\r",
                    "            }\r",
                    "            switch (value) {\r",
                    "                case '#ICON_1#':\r",
                    "                    metadata.css = 'ula-icon-1';\r",
                    "                    return;\r",
                    "                case '#ICON_2#':\r",
                    "                    metadata.css = 'ula-icon-2';\r",
                    "                    return;\r",
                    "                case '#ICON_3#':\r",
                    "                    metadata.css = 'ula-icon-3';\r",
                    "                    return;\r",
                    "                default:\r",
                    "                    return value;\r",
                    "            }\r",
                    "        }\r",
                    "    },{\r",
                    "        xtype : 'gridcolumn',\r",
                    "        dataIndex: 'text14',\r",
                    "        header: text14Value,\r",
                    "        hidden: text14Hide,\r",
                    "        renderer: function (value, metadata, record, rowIdx, colIdx, store, view){\r",
                    "            var backgroundColor = record.get('color');\r",
                    "            if (backgroundColor=='euTracker'){\r",
                    "                metadata.style = \"background-color:#B2B2FF;\";\r",
                    "                return value;\r",
                    "            }\r",
                    "            switch (value) {\r",
                    "                case '#ICON_1#':\r",
                    "                    metadata.css = 'ula-icon-1';\r",
                    "                    return;\r",
                    "                case '#ICON_2#':\r",
                    "                    metadata.css = 'ula-icon-2';\r",
                    "                    return;\r",
                    "                case '#ICON_3#':\r",
                    "                    metadata.css = 'ula-icon-3';\r",
                    "                    return;\r",
                    "                default:\r",
                    "                    return value;\r",
                    "            }\r",
                    "        }\r",
                    "    },{\r",
                    "        xtype : 'gridcolumn',\r",
                    "        dataIndex: 'text15',\r",
                    "        header: text15Value,\r",
                    "        hidden: text15Hide,\r",
                    "        renderer: function (value, metadata, record, rowIdx, colIdx, store, view){\r",
                    "            var backgroundColor = record.get('color');\r",
                    "            if (backgroundColor=='euTracker'){\r",
                    "                metadata.style = \"background-color:#B2B2FF;\";\r",
                    "                return value;\r",
                    "            }\r",
                    "            switch (value) {\r",
                    "                case '#ICON_1#':\r",
                    "                    metadata.css = 'ula-icon-1';\r",
                    "                    return;\r",
                    "                case '#ICON_2#':\r",
                    "                    metadata.css = 'ula-icon-2';\r",
                    "                    return;\r",
                    "                case '#ICON_3#':\r",
                    "                    metadata.css = 'ula-icon-3';\r",
                    "                    return;\r",
                    "                default:\r",
                    "                    return value;\r",
                    "            }\r",
                    "        }\r",
                    "    }\r",
                    "    ]);\r",
                    "} else {\r",
                    "    yesNoStore.add({\r",
                    "        name: 'ganttExists'\r",
                    "    });\r",
                    "    component.returnValue = Ext.applyIf(config, {\r",
                    "        taskStore: me.taskStore,\r",
                    "        lockedGridConfig:{\r",
                    "            width: panelThird,\r",
                    "            resizable: 'w e'\r",
                    "        },\r",
                    "        readOnly: true,\r",
                    "        baselineVisible: false,\r",
                    "        viewPreset: 'year',\r",
                    "        width: panelWidth,\r",
                    "        plugins: [\r",
                    "            Ext.create(\"Sch.plugin.Lines\", {\r",
                    "                showHeaderElements : true,\r",
                    "                innerTpl           : '<span class=\"line-text\">{Text}</span>',\r",
                    "                store              : lineStore\r",
                    "            }),\r",
                    "            Ext.create(\"Gnt.plugin.Export\", {\r",
                    "                pluginId: 'exportServer',\r",
                    "                printServer     : 'http://win1004.dnvr.ulalaunch.com/server.php',\r",
                    "                tpl\t\t\t\t: tpl,\r",
                    "                afterExport :  function (gantt) {\r",
                    "                    Ext.Ajax.useDefaultXhrHeader = true;\r",
                    "                },\r",
                    "                beforeExport : function (gantt) {\r",
                    "                    Ext.Ajax.useDefaultXhrHeader = false;\r",
                    "                },\r",
                    "                getStylesheets : function() {\r",
                    "                    var translate   = true,\r",
                    "                        styleSheets = Ext.getDoc().select('link[rel=\"stylesheet\"]'),\r",
                    "                        ctTmp       = Ext.get(Ext.core.DomHelper.createDom({\r",
                    "                            tag : 'div'\r",
                    "                        })),\r",
                    "                        stylesString;\r",
                    "                    styleSheets.each(function(s) {\r",
                    "                        var node    = s.dom.cloneNode(true);\r",
                    "                        // put absolute URL to node `href` attribute\r",
                    "                        node.setAttribute('href', s.dom.href);\r",
                    "                        ctTmp.appendChild(node);\r",
                    "                    });\r",
                    "                    stylesString = ctTmp.dom.innerHTML + '';\r",
                    "                    return stylesString;\r",
                    "                }\r",
                    "            }),\r",
                    "            new Sch.plugin.ExcelExport()\r",
                    "        ],\r",
                    "        height: panelHeight-75,\r",
                    "        startDate: new Date(startValue),\r",
                    "        endDate: new Date(finishValue),\r",
                    "        rightLabelField: {\r",
                    "            renderer : function (value, record){\r",
                    "                var color = record.get('color');\r",
                    "                if (color !== '') {\r",
                    "                    switch (color) {\r",
                    "                        case 'red':\r",
                    "                            rightLabel = record.get('Note');\r",
                    "                            return rightLabel;\r",
                    "                        case 'orange':\r",
                    "                            rightLabel = record.get('Duration');\r",
                    "                            rightLabel = Math.round(rightLabel);\r",
                    "                            return rightLabel+' days';\r",
                    "                    }\r",
                    "\r",
                    "                 } else {\r",
                    "                    var rightLabel = record.get('EndDate');\r",
                    "                    var mth = rightLabel.getUTCMonth()+1;\r",
                    "                    var day = rightLabel.getUTCDate();\r",
                    "                    if (day-1===0) {\r",
                    "                        switch (mth) {\r",
                    "                            case '1':\r",
                    "                                day = '31';\r",
                    "                                return day;\r",
                    "                            case '2':\r",
                    "                                day = '28';\r",
                    "                                return day;\r",
                    "                            case '3':\r",
                    "                                day = '31';\r",
                    "                                return day;\r",
                    "                            case '4':\r",
                    "                                day = '30';\r",
                    "                                return day;\r",
                    "                            case '5':\r",
                    "                                day = '31';\r",
                    "                                return day;\r",
                    "                            case '6':\r",
                    "                                day = '30';\r",
                    "                                return day;\r",
                    "                            case '7':\r",
                    "                                day = '31';\r",
                    "                                return day;\r",
                    "                            case '8':\r",
                    "                                day = '31';\r",
                    "                                return day;\r",
                    "                            case '9':\r",
                    "                                day = '30';\r",
                    "                                return day;\r",
                    "                            case '10':\r",
                    "                                day = '31';\r",
                    "                                return day;\r",
                    "                            case '11':\r",
                    "                                day = '30';\r",
                    "                                return day;\r",
                    "                            case '12':\r",
                    "                                day = '31';\r",
                    "                                return day;\r",
                    "                        }\r",
                    "                    } else {\r",
                    "                        day = day-1;\r",
                    "                    }\r",
                    "                    var yr = rightLabel.getUTCFullYear();\r",
                    "                    rightLabel = mth+'/'+day+'/'+yr;\r",
                    "                    return rightLabel;\r",
                    "                 }\r",
                    "            }\r",
                    "        },\r",
                    "        leftLabelField: {\r",
                    "           renderer : function (value, record){\r",
                    "               var color = record.get('color');\r",
                    "               if (color !=='orange'){\r",
                    "                   var leftLabel = record.get('StartDate');\r",
                    "                   var mth = leftLabel.getUTCMonth()+1;\r",
                    "                   var day = leftLabel.getUTCDate();\r",
                    "                   var yr = leftLabel.getUTCFullYear();\r",
                    "                   leftLabel = mth+'/'+day+'/'+yr;\r",
                    "                   return leftLabel;\r",
                    "               } else {\r",
                    "                   var leftLabelAlt = 'MR';\r",
                    "                   return leftLabelAlt;\r",
                    "               }\r",
                    "           }\r",
                    "        },\r",
                    "        eventRenderer : function (task) {\r",
                    "            var color = task.get('color');\r",
                    "            var style = Ext.String.format('background-color: #{0};border-color:#{1}');\r",
                    "            if (color !=='') {\r",
                    "            switch (color) {\r",
                    "                case 'red':\r",
                    "                    style = Ext.String.format('background-color: #{0};border-color:#{1}', 'FF0000', 'FF0000');\r",
                    "                    progressBarStyle = Ext.String.format('background-color: #{0};border-color:#{1}', '000000', '000000');\r",
                    "                    cls = Ext.String.format('background-color: #{0};border-color:#{1}', 'ff0000', 'ff0000');\r",
                    "                        return {\r",
                    "                        style: style,\r",
                    "                        progressBarStyle: progressBarStyle,\r",
                    "                        cls: cls\r",
                    "                        };\r",
                    "                //orange - Dedicated to the Schedule-Margin gantt line\r",
                    "                case 'orange':\r",
                    "                    style = Ext.String.format('background-color: #{0};border-color:#{1}', 'FFA500', 'FFA500');\r",
                    "                    progressBarStyle = Ext.String.format('background-color: #{0};border-color:#{1}', '000000', '000000');\r",
                    "                    cls = Ext.String.format('background-color: #{0};border-color:#{1}', 'ffa500', 'ffa500');\r",
                    "                        return {\r",
                    "                            style: style,\r",
                    "                            progressBarStyle: progressBarStyle,\r",
                    "                            cls: cls\r",
                    "                        };\r",
                    "                case 'blue':\r",
                    "                    style = Ext.String.format('background-color: #{0};border-color:#{1}', '9B9BD7', '9B9BD7');\r",
                    "                    progressBarStyle = Ext.String.format('background-color: #{0};border-color:#{1}', '000000', '000000');\r",
                    "                    cls = style;\r",
                    "                        return {\r",
                    "                            style: style,\r",
                    "                            progressBarStyle: progressBarStyle,\r",
                    "                            cls: cls\r",
                    "                        };\r",
                    "                case 'yellow':\r",
                    "                    style = Ext.String.format('background-color: #{0};border-color:#{1}', 'FFFF80', 'FFFF80');\r",
                    "                    progressBarStyle = Ext.String.format('background-color: #{0};border-color:#{1}', 'FFFF80', 'FFFF80');\r",
                    "                    cls = style;\r",
                    "                    return {\r",
                    "                            style: style,\r",
                    "                            progressBarStyle: progressBarStyle,\r",
                    "                            cls: cls\r",
                    "                        };\r",
                    "                case 'gray':\r",
                    "                    style = Ext.String.format('background-color: #{0};border-color:#{1}', 'BEBEB1', 'BEBEB1');\r",
                    "                    progressBarStyle = Ext.String.format('background-color: #{0};border-color:#{1}', '000000', '000000');\r",
                    "                    cls = style;\r",
                    "                        return {\r",
                    "                            style: style,\r",
                    "                            progressBarStyle: progressBarStyle,\r",
                    "                            cls: cls\r",
                    "                        };\r",
                    "                case 'green':\r",
                    "                    style = Ext.String.format('background-color: #{0};border-color:#{1}', '80B280', '80B280');\r",
                    "                    progressBarStyle = Ext.String.format('background-color: #{0};border-color:#{1}', '000000', '000000');\r",
                    "                    cls = style;\r",
                    "                        return {\r",
                    "                            style: style,\r",
                    "                            progressBarStyle: progressBarStyle,\r",
                    "                            cls: cls\r",
                    "                        };\r",
                    "            }\r",
                    "            } else {\r",
                    "                //green\r",
                    "                style = Ext.String.format('background-color: #{0};border-color:#{1}', '80B280', '80B280');\r",
                    "                progressBarStyle = Ext.String.format('background-color: #{0};border-color:#{1}', '000000', '000000');\r",
                    "                cls = style;\r",
                    "                return {\r",
                    "                    style: style,\r",
                    "                    progressBarStyle: progressBarStyle,\r",
                    "                    cls: cls\r",
                    "                };\r",
                    "            }\r",
                    "    },\r",
                    "    columns: [\r",
                    "    {\r",
                    "        xtype : 'gridcolumn',\r",
                    "        dataIndex: 'program',\r",
                    "        header: 'Program'\r",
                    "    },{\r",
                    "        xtype : 'gridcolumn',\r",
                    "        dataIndex: 'tailNumber',\r",
                    "        header: 'Tail Number'\r",
                    "    },{\r",
                    "        xtype : 'gridcolumn',\r",
                    "        dataIndex: 'primaryMission',\r",
                    "        header: 'Primary Mission'\r",
                    "    },{\r",
                    "        xtype: 'treecolumn',\r",
                    "        header: 'Tasks',\r",
                    "        sortable: false,\r",
                    "        dataIndex: 'Name',\r",
                    "        width: 200,\r",
                    "        bodyCssClass: 'x-tree-noicon',\r",
                    "        renderer: function (value, metadata, record, rowIdx, colIdx, store, view){\r",
                    "            var backgroundColor = record.get('color');\r",
                    "            if (backgroundColor !== \"\"){\r",
                    "                switch (backgroundColor) {\r",
                    "                    case 'red':\r",
                    "                        metadata.style = \"background-color:#ff6666;\";\r",
                    "                        return value;\r",
                    "                    case 'gray':\r",
                    "                        metadata.style = \"background-color:#b2b2b2\";\r",
                    "                        return value;\r",
                    "                    case 'orange':\r",
                    "                        metadata.style = \"background-color:#FFA500\";\r",
                    "                        return value;\r",
                    "                    case 'blue':\r",
                    "                        metadata.style = \"background-color:#7f7fff\";\r",
                    "                        return value;\r",
                    "                    case 'yellow':\r",
                    "                        metadata.style = \"background-color:#ffff00\";\r",
                    "                        return value;\r",
                    "                    case 'green':\r",
                    "                        metadata.style = \"background-color:#7fbf7f\";\r",
                    "                        metadata.style = \"\";\r",
                    "                        return value;\r",
                    "                }\r",
                    "            } else {\r",
                    "                return value;\r",
                    "            }\r",
                    "        }\r",
                    "    },{\r",
                    "        xtype : 'startdatecolumn',\r",
                    "        dateFormat: 'm-d-Y',\r",
                    "        hidden: true\r",
                    "    },{\r",
                    "        xtype : 'enddatecolumn',\r",
                    "        dateFormat: 'm-d-Y',\r",
                    "        hidden: true\r",
                    "    },{\r",
                    "        //hidden : true,\r",
                    "        xtype : 'baselinestartdatecolumn',\r",
                    "        dateFormat: 'm-d-Y',\r",
                    "        hidden: true\r",
                    "    },{\r",
                    "        //hidden : true,\r",
                    "        xtype : 'baselineenddatecolumn',\r",
                    "        dateFormat: 'm-d-Y',\r",
                    "        hidden: true\r",
                    "    },{\r",
                    "        xtype : 'durationcolumn',\r",
                    "        hidden: true\r",
                    "    },{\r",
                    "        xtype : 'datecolumn',\r",
                    "        dataIndex: 'actualstartdate',\r",
                    "        header: 'Actual Start',\r",
                    "        dateFormat: 'm-d-Y',\r",
                    "        hidden: true\r",
                    "    },{\r",
                    "        xtype : 'datecolumn',\r",
                    "        dataIndex: 'actualenddate',\r",
                    "        header: 'Actual Finish',\r",
                    "        dateFormat: 'm-d-Y',\r",
                    "        hidden: true\r",
                    "    },{\r",
                    "        xtype : 'percentdonecolumn',\r",
                    "        width : 50,\r",
                    "        hidden: true\r",
                    "    },{\r",
                    "        xtype : 'predecessorcolumn',\r",
                    "        hidden: true\r",
                    "    },{\r",
                    "        xtype : 'notecolumn',\r",
                    "        hidden: true\r",
                    "    },{\r",
                    "        xtype : 'gridcolumn',\r",
                    "        dataIndex: 'outline',\r",
                    "        header: 'Outline',\r",
                    "        hidden: true\r",
                    "    },{\r",
                    "        xtype : 'gridcolumn',\r",
                    "        dataIndex: 'color',\r",
                    "        header: 'Color',\r",
                    "        hidden: true\r",
                    "    },{\r",
                    "        xtype : 'gridcolumn',\r",
                    "        dataIndex: 'text01',\r",
                    "        header: text01Value,\r",
                    "        hidden: text01Hide,\r",
                    "        renderer: function (value, metadata, record, rowIdx, colIdx, store, view){\r",
                    "            var backgroundColor = record.get('color');\r",
                    "            if (backgroundColor=='euTracker'){\r",
                    "                metadata.style = \"background-color:#B2B2FF;\";\r",
                    "                return value;\r",
                    "            }\r",
                    "            switch (value) {\r",
                    "                case '#ICON_1#':\r",
                    "                    metadata.css = 'ula-icon-1';\r",
                    "                    return;\r",
                    "                case '#ICON_2#':\r",
                    "                    metadata.css = 'ula-icon-2';\r",
                    "                    return;\r",
                    "                case '#ICON_3#':\r",
                    "                    metadata.css = 'ula-icon-3';\r",
                    "                    return;\r",
                    "                default:\r",
                    "                    return value;\r",
                    "            }\r",
                    "        }\r",
                    "    },{\r",
                    "        xtype : 'gridcolumn',\r",
                    "        dataIndex: 'text02',\r",
                    "        header: text02Value,\r",
                    "        hidden: text02Hide,\r",
                    "        renderer: function (value, metadata, record, rowIdx, colIdx, store, view){\r",
                    "            var backgroundColor = record.get('color');\r",
                    "            if (backgroundColor=='euTracker'){\r",
                    "                metadata.style = \"background-color:#B2B2FF;\";\r",
                    "                return value;\r",
                    "            }\r",
                    "            switch (value) {\r",
                    "                case '#ICON_1#':\r",
                    "                    metadata.css = 'ula-icon-1';\r",
                    "                    return;\r",
                    "                case '#ICON_2#':\r",
                    "                    metadata.css = 'ula-icon-2';\r",
                    "                    return;\r",
                    "                case '#ICON_3#':\r",
                    "                    metadata.css = 'ula-icon-3';\r",
                    "                    return;\r",
                    "                default:\r",
                    "                    return value;\r",
                    "            }\r",
                    "        }\r",
                    "    },{\r",
                    "        xtype : 'gridcolumn',\r",
                    "        dataIndex: 'text03',\r",
                    "        header: text03Value,\r",
                    "        hidden: text03Hide,\r",
                    "        renderer: function (value, metadata, record, rowIdx, colIdx, store, view){\r",
                    "            var backgroundColor = record.get('color');\r",
                    "            if (backgroundColor=='euTracker'){\r",
                    "                metadata.style = \"background-color:#B2B2FF;\";\r",
                    "                return value;\r",
                    "            }\r",
                    "            switch (value) {\r",
                    "                case '#ICON_1#':\r",
                    "                    metadata.css = 'ula-icon-1';\r",
                    "                    return;\r",
                    "                case '#ICON_2#':\r",
                    "                    metadata.css = 'ula-icon-2';\r",
                    "                    return;\r",
                    "                case '#ICON_3#':\r",
                    "                    metadata.css = 'ula-icon-3';\r",
                    "                    return;\r",
                    "                default:\r",
                    "                    return value;\r",
                    "            }\r",
                    "        }\r",
                    "    },{\r",
                    "        xtype : 'gridcolumn',\r",
                    "        dataIndex: 'text04',\r",
                    "        header: text04Value,\r",
                    "        hidden: text04Hide,\r",
                    "        renderer: function (value, metadata, record, rowIdx, colIdx, store, view){\r",
                    "            var backgroundColor = record.get('color');\r",
                    "            if (backgroundColor=='euTracker'){\r",
                    "                metadata.style = \"background-color:#B2B2FF;\";\r",
                    "                return value;\r",
                    "            }\r",
                    "            switch (value) {\r",
                    "                case '#ICON_1#':\r",
                    "                    metadata.css = 'ula-icon-1';\r",
                    "                    return;\r",
                    "                case '#ICON_2#':\r",
                    "                    metadata.css = 'ula-icon-2';\r",
                    "                    return;\r",
                    "                case '#ICON_3#':\r",
                    "                    metadata.css = 'ula-icon-3';\r",
                    "                    return;\r",
                    "                default:\r",
                    "                    return value;\r",
                    "            }\r",
                    "        }\r",
                    "    },{\r",
                    "        xtype : 'gridcolumn',\r",
                    "        dataIndex: 'text05',\r",
                    "        header: text05Value,\r",
                    "        hidden: text05Hide,\r",
                    "        renderer: function (value, metadata, record, rowIdx, colIdx, store, view){\r",
                    "            var backgroundColor = record.get('color');\r",
                    "            if (backgroundColor=='euTracker'){\r",
                    "                metadata.style = \"background-color:#B2B2FF;\";\r",
                    "                return value;\r",
                    "            }\r",
                    "            switch (value) {\r",
                    "                case '#ICON_1#':\r",
                    "                    metadata.css = 'ula-icon-1';\r",
                    "                    return;\r",
                    "                case '#ICON_2#':\r",
                    "                    metadata.css = 'ula-icon-2';\r",
                    "                    return;\r",
                    "                case '#ICON_3#':\r",
                    "                    metadata.css = 'ula-icon-3';\r",
                    "                    return;\r",
                    "                default:\r",
                    "                    return value;\r",
                    "            }\r",
                    "        }\r",
                    "    },{\r",
                    "        xtype : 'gridcolumn',\r",
                    "        dataIndex: 'text06',\r",
                    "        header: text06Value,\r",
                    "        hidden: text06Hide,\r",
                    "        renderer: function (value, metadata, record, rowIdx, colIdx, store, view){\r",
                    "            var backgroundColor = record.get('color');\r",
                    "            if (backgroundColor=='euTracker'){\r",
                    "                metadata.style = \"background-color:#B2B2FF;\";\r",
                    "                return value;\r",
                    "            }\r",
                    "            switch (value) {\r",
                    "                case '#ICON_1#':\r",
                    "                    metadata.css = 'ula-icon-1';\r",
                    "                    return;\r",
                    "                case '#ICON_2#':\r",
                    "                    metadata.css = 'ula-icon-2';\r",
                    "                    return;\r",
                    "                case '#ICON_3#':\r",
                    "                    metadata.css = 'ula-icon-3';\r",
                    "                    return;\r",
                    "                default:\r",
                    "                    return value;\r",
                    "            }\r",
                    "        }\r",
                    "    },{\r",
                    "        xtype : 'gridcolumn',\r",
                    "        dataIndex: 'text07',\r",
                    "        header: text07Value,\r",
                    "        hidden: text07Hide,\r",
                    "        renderer: function (value, metadata, record, rowIdx, colIdx, store, view){\r",
                    "            var backgroundColor = record.get('color');\r",
                    "            if (backgroundColor=='euTracker'){\r",
                    "                metadata.style = \"background-color:#B2B2FF;\";\r",
                    "                return value;\r",
                    "            }\r",
                    "            switch (value) {\r",
                    "                case '#ICON_1#':\r",
                    "                    metadata.css = 'ula-icon-1';\r",
                    "                    return;\r",
                    "                case '#ICON_2#':\r",
                    "                    metadata.css = 'ula-icon-2';\r",
                    "                    return;\r",
                    "                case '#ICON_3#':\r",
                    "                    metadata.css = 'ula-icon-3';\r",
                    "                    return;\r",
                    "                default:\r",
                    "                    return value;\r",
                    "            }\r",
                    "        }\r",
                    "    },{\r",
                    "        xtype : 'gridcolumn',\r",
                    "        dataIndex: 'text08',\r",
                    "        header: text08Value,\r",
                    "        hidden: text08Hide,\r",
                    "        renderer: function (value, metadata, record, rowIdx, colIdx, store, view){\r",
                    "            var backgroundColor = record.get('color');\r",
                    "            if (backgroundColor=='euTracker'){\r",
                    "                metadata.style = \"background-color:#B2B2FF;\";\r",
                    "                return value;\r",
                    "            }\r",
                    "            switch (value) {\r",
                    "                case '#ICON_1#':\r",
                    "                    metadata.css = 'ula-icon-1';\r",
                    "                    return;\r",
                    "                case '#ICON_2#':\r",
                    "                    metadata.css = 'ula-icon-2';\r",
                    "                    return;\r",
                    "                case '#ICON_3#':\r",
                    "                    metadata.css = 'ula-icon-3';\r",
                    "                    return;\r",
                    "                default:\r",
                    "                    return value;\r",
                    "            }\r",
                    "        }\r",
                    "    },{\r",
                    "        xtype : 'gridcolumn',\r",
                    "        dataIndex: 'text09',\r",
                    "        header: text09Value,\r",
                    "        hidden: text09Hide,\r",
                    "        renderer: function (value, metadata, record, rowIdx, colIdx, store, view){\r",
                    "            var backgroundColor = record.get('color');\r",
                    "            if (backgroundColor=='euTracker'){\r",
                    "                metadata.style = \"background-color:#B2B2FF;\";\r",
                    "                return value;\r",
                    "            }\r",
                    "            switch (value) {\r",
                    "                case '#ICON_1#':\r",
                    "                    metadata.css = 'ula-icon-1';\r",
                    "                    return;\r",
                    "                case '#ICON_2#':\r",
                    "                    metadata.css = 'ula-icon-2';\r",
                    "                    return;\r",
                    "                case '#ICON_3#':\r",
                    "                    metadata.css = 'ula-icon-3';\r",
                    "                    return;\r",
                    "                default:\r",
                    "                    return value;\r",
                    "            }\r",
                    "        }\r",
                    "    },{\r",
                    "        xtype : 'gridcolumn',\r",
                    "        dataIndex: 'text10',\r",
                    "        header: text10Value,\r",
                    "        hidden: text10Hide,\r",
                    "        renderer: function (value, metadata, record, rowIdx, colIdx, store, view){\r",
                    "            var backgroundColor = record.get('color');\r",
                    "            if (backgroundColor=='euTracker'){\r",
                    "                metadata.style = \"background-color:#B2B2FF;\";\r",
                    "                return value;\r",
                    "            }\r",
                    "            switch (value) {\r",
                    "                case '#ICON_1#':\r",
                    "                    metadata.css = 'ula-icon-1';\r",
                    "                    return;\r",
                    "                case '#ICON_2#':\r",
                    "                    metadata.css = 'ula-icon-2';\r",
                    "                    return;\r",
                    "                case '#ICON_3#':\r",
                    "                    metadata.css = 'ula-icon-3';\r",
                    "                    return;\r",
                    "                default:\r",
                    "                    return value;\r",
                    "            }\r",
                    "        }\r",
                    "    },{\r",
                    "        xtype : 'gridcolumn',\r",
                    "        dataIndex: 'text11',\r",
                    "        header: text11Value,\r",
                    "        hidden: text11Hide,\r",
                    "        renderer: function (value, metadata, record, rowIdx, colIdx, store, view){\r",
                    "            var backgroundColor = record.get('color');\r",
                    "            if (backgroundColor=='euTracker'){\r",
                    "                metadata.style = \"background-color:#B2B2FF;\";\r",
                    "                return value;\r",
                    "            }\r",
                    "            switch (value) {\r",
                    "                case '#ICON_1#':\r",
                    "                    metadata.css = 'ula-icon-1';\r",
                    "                    return;\r",
                    "                case '#ICON_2#':\r",
                    "                    metadata.css = 'ula-icon-2';\r",
                    "                    return;\r",
                    "                case '#ICON_3#':\r",
                    "                    metadata.css = 'ula-icon-3';\r",
                    "                    return;\r",
                    "                default:\r",
                    "                    return value;\r",
                    "            }\r",
                    "        }\r",
                    "    },{\r",
                    "        xtype : 'gridcolumn',\r",
                    "        dataIndex: 'text12',\r",
                    "        header: text12Value,\r",
                    "        hidden: text12Hide,\r",
                    "        renderer: function (value, metadata, record, rowIdx, colIdx, store, view){\r",
                    "            var backgroundColor = record.get('color');\r",
                    "            if (backgroundColor=='euTracker'){\r",
                    "                metadata.style = \"background-color:#B2B2FF;\";\r",
                    "                return value;\r",
                    "            }\r",
                    "            switch (value) {\r",
                    "                case '#ICON_1#':\r",
                    "                    metadata.css = 'ula-icon-1';\r",
                    "                    return;\r",
                    "                case '#ICON_2#':\r",
                    "                    metadata.css = 'ula-icon-2';\r",
                    "                    return;\r",
                    "                case '#ICON_3#':\r",
                    "                    metadata.css = 'ula-icon-3';\r",
                    "                    return;\r",
                    "                default:\r",
                    "                    return value;\r",
                    "            }\r",
                    "        }\r",
                    "    },{\r",
                    "        xtype : 'gridcolumn',\r",
                    "        dataIndex: 'text13',\r",
                    "        header: text13Value,\r",
                    "        hidden: text13Hide,\r",
                    "        renderer: function (value, metadata, record, rowIdx, colIdx, store, view){\r",
                    "            var backgroundColor = record.get('color');\r",
                    "            if (backgroundColor=='euTracker'){\r",
                    "                metadata.style = \"background-color:#B2B2FF;\";\r",
                    "                return value;\r",
                    "            }\r",
                    "            switch (value) {\r",
                    "                case '#ICON_1#':\r",
                    "                    metadata.css = 'ula-icon-1';\r",
                    "                    return;\r",
                    "                case '#ICON_2#':\r",
                    "                    metadata.css = 'ula-icon-2';\r",
                    "                    return;\r",
                    "                case '#ICON_3#':\r",
                    "                    metadata.css = 'ula-icon-3';\r",
                    "                    return;\r",
                    "                default:\r",
                    "                    return value;\r",
                    "            }\r",
                    "        }\r",
                    "    },{\r",
                    "        xtype : 'gridcolumn',\r",
                    "        dataIndex: 'text14',\r",
                    "        header: text14Value,\r",
                    "        hidden: text14Hide,\r",
                    "        renderer: function (value, metadata, record, rowIdx, colIdx, store, view){\r",
                    "            var backgroundColor = record.get('color');\r",
                    "            if (backgroundColor=='euTracker'){\r",
                    "                metadata.style = \"background-color:#B2B2FF;\";\r",
                    "                return value;\r",
                    "            }\r",
                    "            switch (value) {\r",
                    "                case '#ICON_1#':\r",
                    "                    metadata.css = 'ula-icon-1';\r",
                    "                    return;\r",
                    "                case '#ICON_2#':\r",
                    "                    metadata.css = 'ula-icon-2';\r",
                    "                    return;\r",
                    "                case '#ICON_3#':\r",
                    "                    metadata.css = 'ula-icon-3';\r",
                    "                    return;\r",
                    "                default:\r",
                    "                    return value;\r",
                    "            }\r",
                    "        }\r",
                    "    },{\r",
                    "        xtype : 'gridcolumn',\r",
                    "        dataIndex: 'text15',\r",
                    "        header: text15Value,\r",
                    "        hidden: text15Hide,\r",
                    "        renderer: function (value, metadata, record, rowIdx, colIdx, store, view){\r",
                    "            var backgroundColor = record.get('color');\r",
                    "            if (backgroundColor=='euTracker'){\r",
                    "                metadata.style = \"background-color:#B2B2FF;\";\r",
                    "                return value;\r",
                    "            }\r",
                    "            switch (value) {\r",
                    "                case '#ICON_1#':\r",
                    "                    metadata.css = 'ula-icon-1';\r",
                    "                    return;\r",
                    "                case '#ICON_2#':\r",
                    "                    metadata.css = 'ula-icon-2';\r",
                    "                    return;\r",
                    "                case '#ICON_3#':\r",
                    "                    metadata.css = 'ula-icon-3';\r",
                    "                    return;\r",
                    "                default:\r",
                    "                    return value;\r",
                    "            }\r",
                    "        }\r",
                    "    }\r",
                    "    ]\r",
                    "});\r",
                    "}\r",
                    ""
                ],
                "name": "ganttConfig",
                "scope": "me"
            },
            "designerId": "a7034260-c4b0-46dd-9290-b5edda42955d"
        }
    ]
}