{
    "type": "Ext.panel.Panel",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userAlias": "mypanel",
        "designer|userClassName": "MyPanel12",
        "header": false,
        "id": "myPanel",
        "layout": "card",
        "resizable": [
            "true"
        ],
        "title": "My Panel"
    },
    "designerId": "f7cfadc7-f5aa-4dcf-830b-1670616abaed",
    "cn": [
        {
            "type": "Ext.toolbar.Toolbar",
            "reference": {
                "name": "dockedItems",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "container|padding": 5,
                "defaultAlign": "tl-bl",
                "dock": "top",
                "height": null
            },
            "designerId": "19ab018b-4eea-42c1-a586-d8bdaa15bbec",
            "cn": [
                {
                    "type": "Ext.button.Button",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "designer|displayName": "execute",
                        "height": 35,
                        "icon": "images/power.png",
                        "iconAlign": "bottom",
                        "layout|flex": null,
                        "scale": "large",
                        "text": "",
                        "tooltip": [
                            "'Run'"
                        ],
                        "width": 35
                    },
                    "designerId": "fced742d-c677-4075-b68b-4e43e0bdfc9e",
                    "cn": [
                        {
                            "type": "basiceventbinding",
                            "reference": {
                                "name": "listeners",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "fn": "onButtonClick1",
                                "implHandler": [
                                    "var me = this;\r",
                                    "var ganttConfigStore = Ext.getStore('GanttConfigStoreXml');\r",
                                    "var promptShow = ganttConfigStore.findExact('name','noPrompt');\r",
                                    "var prompt = Ext.create('Ext.window.MessageBox', {\r",
                                    "    buttonText: {\r",
                                    "        yes: 'Continue',\r",
                                    "        no: 'No'\r",
                                    "    }\r",
                                    "});\r",
                                    "if (promptShow == -1){\r",
                                    "    prompt.show({\r",
                                    "        title: 'Full Schedule?',\r",
                                    "        msg: 'No selection data input. Would you like to view the full schedule?',\r",
                                    "        buttons: Ext.Msg.YESNO,\r",
                                    "        fn: function(btn) {\r",
                                    "            if (btn == 'no') {\r",
                                    "            }\r",
                                    "            if (btn == 'yes') {\r",
                                    "                var myPanel = Ext.ComponentManager.get('myPanel');\r",
                                    "                var ganttPanel = Ext.ComponentManager.get('ganttPanel');\r",
                                    "                var mainView = Ext.ComponentManager.get('mainView');\r",
                                    "                var taskStore = Ext.getStore('taskStore');\r",
                                    "                var passedObjectsStore = Ext.getStore('PassedObjectsStoreXml');\r",
                                    "                var paramStore = Ext.getStore('ParamStoreXml');\r",
                                    "                var passedConfigStore = Ext.getStore('PassedConfigStoreXml');\r",
                                    "                var columnVariantIndex = passedConfigStore.findExact('type','columnVariant');\r",
                                    "                if (columnVariantIndex != '-1'){\r",
                                    "                    var columnVariantRecord = passedConfigStore.getAt(columnVariantIndex);\r",
                                    "                    var columnVariant = columnVariantRecord.get('value');\r",
                                    "                    var columnVariantMsg = '';\r",
                                    "                } else {\r",
                                    "\r",
                                    "                }\r",
                                    "                var selectionVariantIndex = passedConfigStore.findExact('type','selectionVariant');\r",
                                    "                if (selectionVariantIndex != '-1'){\r",
                                    "                    var selectionVariantRecord = passedConfigStore.getAt(selectionVariantIndex);\r",
                                    "                    var selectionVariant = selectionVariantRecord.get('value');\r",
                                    "                    var selectionVariantMsg = '';\r",
                                    "                } else {\r",
                                    "\r",
                                    "                }\r",
                                    "                var versionIndex = passedConfigStore.findExact('type','version');\r",
                                    "                if (versionIndex != '-1') {\r",
                                    "                    var versionRecord = passedConfigStore.getAt(versionIndex);\r",
                                    "                    var version = versionRecord.get('value');\r",
                                    "                    var versionMsg = '';\r",
                                    "                } else {\r",
                                    "\r",
                                    "                }\r",
                                    "                //mission Options\r",
                                    "                var missionOptionsIndex = passedObjectsStore.findExact('type','missionOptions');\r",
                                    "                if (missionOptionsIndex == -1) {\r",
                                    "                    var missionOptionsInit = '';\r",
                                    "                    var missionOptionsType = 'missionOptions';\r",
                                    "                    passedObjectsStore.add(\r",
                                    "                        {type: missionOptionsType, number: missionOptionsInit}\r",
                                    "                    );\r",
                                    "                }\r",
                                    "                //produciton end items\r",
                                    "                var productionEndItemsOptionsIndex = passedObjectsStore.findExact('type','productionEndItemsOptions');\r",
                                    "                if (productionEndItemsOptionsIndex == -1) {\r",
                                    "                    var productionEndItemsOptionsInit = '';\r",
                                    "                    var productionEndItemsOptionsType = 'productionEndItemsOptions';\r",
                                    "                    passedObjectsStore.add(\r",
                                    "                        {type: productionEndItemsOptionsType, number: productionEndItemsOptionsInit}\r",
                                    "                    );\r",
                                    "                }\r",
                                    "                //major shipped end items\r",
                                    "                var majorShippedEndItemsOptionsIndex = passedObjectsStore.findExact('type','majorShippedEndItemsOptions');\r",
                                    "                if (majorShippedEndItemsOptionsIndex == -1) {\r",
                                    "                    var majorShippedEndItemsOptionsInit = '';\r",
                                    "                    var majorShippedEndItemsOptionsType = 'majorShippedEndItemsOptions';\r",
                                    "                    passedObjectsStore.add(\r",
                                    "                        {type: majorShippedEndItemsOptionsType, number: majorShippedEndItemsOptionsInit}\r",
                                    "                    );\r",
                                    "                }\r",
                                    "                // sort by\r",
                                    "                var sortByIndex = passedObjectsStore.findExact('type','sortBy');\r",
                                    "                if (sortByIndex == -1) {\r",
                                    "                    var sortByInit = '';\r",
                                    "                    var sortByType = 'sortBy';\r",
                                    "                    passedObjectsStore.add(\r",
                                    "                        {type: sortByType, number: sortByInit}\r",
                                    "                    );\r",
                                    "                }\r",
                                    "                //show details\r",
                                    "                var showDetailsIndex = passedObjectsStore.findExact('type','showDetails');\r",
                                    "                if (showDetailsIndex == -1) {\r",
                                    "                    var showDetailsInit = '';\r",
                                    "                    var showDetailsType = 'showDetails';\r",
                                    "                    passedObjectsStore.add(\r",
                                    "                        {type: showDetailsType, number: showDetailsInit}\r",
                                    "                    );\r",
                                    "                }\r",
                                    "                //baseline options\r",
                                    "                var baselineOptionsIndex = passedObjectsStore.findExact('type','baselineOptions');\r",
                                    "                if (baselineOptionsIndex == -1) {\r",
                                    "                    var baselineOptionsInit = '';\r",
                                    "                    var baselineOptionsType = 'baselineOptions';\r",
                                    "                    passedObjectsStore.add(\r",
                                    "                        {type: baselineOptionsType, number: baselineOptionsInit}\r",
                                    "                    );\r",
                                    "                }\r",
                                    "                //build batch\r",
                                    "                var batch = {};\r",
                                    "                batch.proxy = ganttConfigStore.getProxy();\r",
                                    "                batch.proxy.extraParams = {};\r",
                                    "                batch.proxy.setExtraParam('columnVariant',columnVariant);\r",
                                    "                batch.proxy.setExtraParam('selectionVariant',selectionVariant);\r",
                                    "                batch.proxy.setExtraParam('version',version);\r",
                                    "                var count = passedObjectsStore.count();\r",
                                    "                for (i = 0; i < count; i++) {\r",
                                    "                    var number = passedObjectsStore.getAt(i).get('number');\r",
                                    "                    var type = passedObjectsStore.getAt(i).get('type');\r",
                                    "                    batch.proxy.setExtraParam(type+'-'+i,number);\r",
                                    "                }\r",
                                    "                ganttPanel.setLoading(true);\r",
                                    "                ganttConfigStore.load({\r",
                                    "                    batch: batch,\r",
                                    "                    callback: function() {\r",
                                    "                        Ext.suspendLayouts();\r",
                                    "                        taskStore.load({\r",
                                    "                            callback: function(){\r",
                                    "                                Ext.resumeLayouts(true);\r",
                                    "                                ganttPanel.setLoading(false);\r",
                                    "                            }\r",
                                    "                        });\r",
                                    "                        return me.returnValue;\r",
                                    "                    }\r",
                                    "                });\r",
                                    "            }\r",
                                    "        }\r",
                                    "    });\r",
                                    "} else {\r",
                                    "    var myPanel = Ext.ComponentManager.get('myPanel');\r",
                                    "    var ganttPanel = Ext.ComponentManager.get('ganttPanel');\r",
                                    "    var mainView = Ext.ComponentManager.get('mainView');\r",
                                    "    var taskStore = Ext.getStore('taskStore');\r",
                                    "    var passedObjectsStore = Ext.getStore('PassedObjectsStoreXml');\r",
                                    "    var paramStore = Ext.getStore('ParamStoreXml');\r",
                                    "    var passedConfigStore = Ext.getStore('PassedConfigStoreXml');\r",
                                    "    var columnVariantIndex = passedConfigStore.findExact('type','columnVariant');\r",
                                    "    if (columnVariantIndex != '-1'){\r",
                                    "        var columnVariantRecord = passedConfigStore.getAt(columnVariantIndex);\r",
                                    "        var columnVariant = columnVariantRecord.get('value');\r",
                                    "        var columnVariantMsg = '';\r",
                                    "    } else {\r",
                                    "\r",
                                    "    }\r",
                                    "    var selectionVariantIndex = passedConfigStore.findExact('type','selectionVariant');\r",
                                    "    if (selectionVariantIndex != '-1'){\r",
                                    "        var selectionVariantRecord = passedConfigStore.getAt(selectionVariantIndex);\r",
                                    "        var selectionVariant = selectionVariantRecord.get('value');\r",
                                    "        var selectionVariantMsg = '';\r",
                                    "    } else {\r",
                                    "\r",
                                    "    }\r",
                                    "    var versionIndex = passedConfigStore.findExact('type','version');\r",
                                    "    if (versionIndex != '-1') {\r",
                                    "        var versionRecord = passedConfigStore.getAt(versionIndex);\r",
                                    "        var version = versionRecord.get('value');\r",
                                    "        var versionMsg = '';\r",
                                    "    } else {\r",
                                    "\r",
                                    "    }\r",
                                    "    //mission Options\r",
                                    "    var missionOptionsIndex = passedObjectsStore.findExact('type','missionOptions');\r",
                                    "    if (missionOptionsIndex == -1) {\r",
                                    "    var missionOptionsInit = '';\r",
                                    "    var missionOptionsType = 'missionOptions';\r",
                                    "        passedObjectsStore.add({\r",
                                    "            type: missionOptionsType,\r",
                                    "            number: missionOptionsInit\r",
                                    "        });\r",
                                    "    }\r",
                                    "    //produciton end items\r",
                                    "    var productionEndItemsOptionsIndex = passedObjectsStore.findExact('type','productionEndItemsOptions');\r",
                                    "    if (productionEndItemsOptionsIndex == -1) {\r",
                                    "        var productionEndItemsOptionsInit = '';\r",
                                    "        var productionEndItemsOptionsType = 'productionEndItemsOptions';\r",
                                    "        passedObjectsStore.add(\r",
                                    "            {type: productionEndItemsOptionsType, number: productionEndItemsOptionsInit}\r",
                                    "        );\r",
                                    "    }\r",
                                    "                            //major shipped end items\r",
                                    "    var majorShippedEndItemsOptionsIndex = passedObjectsStore.findExact('type','majorShippedEndItemsOptions');\r",
                                    "    if (majorShippedEndItemsOptionsIndex == -1) {\r",
                                    "        var majorShippedEndItemsOptionsInit = '';\r",
                                    "        var majorShippedEndItemsOptionsType = 'majorShippedEndItemsOptions';\r",
                                    "        passedObjectsStore.add(\r",
                                    "            {type: majorShippedEndItemsOptionsType, number: majorShippedEndItemsOptionsInit}\r",
                                    "        );\r",
                                    "    }\r",
                                    "                // sort by\r",
                                    "    var sortByIndex = passedObjectsStore.findExact('type','sortBy');\r",
                                    "    if (sortByIndex == -1) {\r",
                                    "        var sortByInit = '';\r",
                                    "        var sortByType = 'sortBy';\r",
                                    "        passedObjectsStore.add(\r",
                                    "            {type: sortByType, number: sortByInit}\r",
                                    "        );\r",
                                    "    }\r",
                                    "                //show details\r",
                                    "    var showDetailsIndex = passedObjectsStore.findExact('type','showDetails');\r",
                                    "    if (showDetailsIndex == -1) {\r",
                                    "        var showDetailsInit = '';\r",
                                    "        var showDetailsType = 'showDetails';\r",
                                    "        passedObjectsStore.add(\r",
                                    "            {type: showDetailsType, number: showDetailsInit}\r",
                                    "        );\r",
                                    "    }\r",
                                    "                //baseline options\r",
                                    "    var baselineOptionsIndex = passedObjectsStore.findExact('type','baselineOptions');\r",
                                    "    if (baselineOptionsIndex == -1) {\r",
                                    "        var baselineOptionsInit = '';\r",
                                    "        var baselineOptionsType = 'baselineOptions';\r",
                                    "        passedObjectsStore.add(\r",
                                    "            {type: baselineOptionsType, number: baselineOptionsInit}\r",
                                    "        );\r",
                                    "    }\r",
                                    "                //build batch\r",
                                    "    var batch = {};\r",
                                    "    batch.proxy = ganttConfigStore.getProxy();\r",
                                    "    batch.proxy.extraParams = {};\r",
                                    "    batch.proxy.setExtraParam('columnVariant',columnVariant);\r",
                                    "    batch.proxy.setExtraParam('selectionVariant',selectionVariant);\r",
                                    "    batch.proxy.setExtraParam('version',version);\r",
                                    "    var count = passedObjectsStore.count();\r",
                                    "    for (i = 0; i < count; i++) {\r",
                                    "        var number = passedObjectsStore.getAt(i).get('number');\r",
                                    "        var type = passedObjectsStore.getAt(i).get('type');\r",
                                    "        batch.proxy.setExtraParam(type+'-'+i,number);\r",
                                    "    }\r",
                                    "    ganttPanel.setLoading(true);\r",
                                    "    ganttConfigStore.load({\r",
                                    "        batch: batch,\r",
                                    "        callback: function() {\r",
                                    "        Ext.suspendLayouts();\r",
                                    "        taskStore.load({\r",
                                    "            callback: function(){\r",
                                    "                Ext.resumeLayouts(true);\r",
                                    "                ganttConfigStore.add({\r",
                                    "                    name: 'noPrompt',\r",
                                    "                    value:''\r",
                                    "                });\r",
                                    "                ganttPanel.setLoading(false);\r",
                                    "            }\r",
                                    "        });\r",
                                    "            return me.returnValue;\r",
                                    "        }\r",
                                    "    });\r",
                                    "}\r",
                                    "\r",
                                    "\r",
                                    "\r",
                                    "\r",
                                    "\r",
                                    "\r",
                                    "\r",
                                    ""
                                ],
                                "name": "click",
                                "scope": "me"
                            },
                            "designerId": "62660df2-42e3-4fa5-bea4-18ae16987bb8"
                        }
                    ]
                },
                {
                    "type": "Ext.button.Button",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "designer|displayName": "selection",
                        "height": null,
                        "icon": "images/settings.png",
                        "layout|flex": null,
                        "scale": "large",
                        "text": "",
                        "tooltip": [
                            "'Selection Settings'"
                        ],
                        "width": null
                    },
                    "designerId": "de98f4d7-f6a0-4532-82c8-66bb84aab81e",
                    "cn": [
                        {
                            "type": "basiceventbinding",
                            "reference": {
                                "name": "listeners",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "fn": "onButtonClick",
                                "implHandler": [
                                    "Ext.require([\r",
                                    "    'Ext.grid.*',\r",
                                    "    'Ext.data.*',\r",
                                    "    'Ext.util.*',\r",
                                    "    'Ext.grid.plugin.BufferedRenderer'\r",
                                    "]);\r",
                                    "var me = this;\r",
                                    "//get stores\r",
                                    "var NetworkStoreXml = Ext.getStore('NetworkStoreXml');\r",
                                    "var PartNumberStoreXml = Ext.getStore('PartNumberStoreXml');\r",
                                    "var ControlPointStoreXml = Ext.getStore('ControlPointStoreXml');\r",
                                    "var SelectedObjectStoreXml = Ext.getStore('SelectedObjectStoreXml');\r",
                                    "var PlantStoreXml = Ext.getStore('PlantStoreXml');\r",
                                    "var ProgramStoreXml = Ext.getStore('ProgramStoreXml');\r",
                                    "var PrimaryMissionStoreXml = Ext.getStore('PrimaryMissionStoreXml');\r",
                                    "var BuildItemStoreXml = Ext.getStore('BuildItemStoreXml');\r",
                                    "var TailNumberStoreXml = Ext.getStore('TailNumberStoreXml');\r",
                                    "var EffectivityStoreXml = Ext.getStore('EffectivityStoreXml');\r",
                                    "var NameStoreXml = Ext.getStore('NameStoreXml');\r",
                                    "var NotesStoreXml = Ext.getStore('NotesStoreXml');\r",
                                    "var SearchStoreXml = Ext.getStore('SearchStoreXml');\r",
                                    "var TaskStoreXml = Ext.getStore('TaskStoreXml');\r",
                                    "var GanttConfigStoreXml = Ext.getStore('GanttConfigStoreXml');\r",
                                    "var resultsStore = Ext.getStore('Results');\r",
                                    "var sortByStore = Ext.getStore('SortByStore');\r",
                                    "var summaryOptionsStore = Ext.getStore('SummaryOptionsStore2');\r",
                                    "var baselineOptionsStore = Ext.getStore('BaselineOptionsStore');\r",
                                    "var variantTypeStore = Ext.getStore('VariantTypeStore');\r",
                                    "var passedObjectsStore = Ext.getStore('PassedObjectsStoreXml');\r",
                                    "var selectedObjectsStore = Ext.getStore('SelectedObjectsStoreXml');\r",
                                    "var ganttConfigStore = Ext.getStore('GanttConfigStoreXml');\r",
                                    "var parameters = {};\r",
                                    "var paramStore = Ext.getStore('ParamStoreXml');\r",
                                    "Ext.define('Ext.data.SelectedObjectModel', {\r",
                                    "    extend: 'Ext.data.Model',\r",
                                    "    fields: [{name: 'number', type: 'string'}],\r",
                                    "    proxy: {\r",
                                    "        type: 'memory'\r",
                                    "    }});\r",
                                    "\r",
                                    "//define selection window\r",
                                    "var selectionWindow = Ext.ComponentQuery.query('selectionwindow[fieldname='+me.itemId+']')[0];\r",
                                    "\r",
                                    "var clickMenu = Ext.menu.Menu({\r",
                                    "    id:'nodeClickMenu',\r",
                                    "    focusOnToFront: true,\r",
                                    "    items: [\r",
                                    "        {\r",
                                    "            id:'delete',\r",
                                    "            text:'Delete',\r",
                                    "            handler: function () {\r",
                                    "                record.remove();\r",
                                    "                passedObjectsStore.remove(record);\r",
                                    "            }\r",
                                    "        }\r",
                                    "    ]\r",
                                    "\r",
                                    "});\r",
                                    "//define selected nodes panel\r",
                                    "var selectionTree = new Ext.tree.Panel ({\r",
                                    "    title: 'Selected Objects',\r",
                                    "    region: 'west',\r",
                                    "    margins: '5 0 0 0',\r",
                                    "    cmargins: '5 5 0 0',\r",
                                    "    store: 'SelectedObjectStoreXml',\r",
                                    "    displayField: 'number',\r",
                                    "    collapsed: false,\r",
                                    "    width: 150,\r",
                                    "    rootVisible: false,\r",
                                    "    listeners: {\r",
                                    "        itemclick: function(me,record,item,index,e,eOpts){\r",
                                    "                var clickMenu = new Ext.menu.Menu({\r",
                                    "                    items: [\r",
                                    "                        {\r",
                                    "                            id:'delete',\r",
                                    "                            text:'Delete',\r",
                                    "                            handler: function () {\r",
                                    "                                record.remove();\r",
                                    "                                var passedObjectsStore = Ext.getStore('PassedObjectsStoreXml');\r",
                                    "                                var selectedRecordIndex = passedObjectsStore.findExact('number',record.get('number'));\r",
                                    "                                var selectedRecord = passedObjectsStore.getAt(selectedRecordIndex);\r",
                                    "                                passedObjectsStore.remove(selectedRecord);\r",
                                    "                            }\r",
                                    "                        }\r",
                                    "                    ]\r",
                                    "                });\r",
                                    "                if (record.get('depth')===2) {\r",
                                    "                    clickMenu.showAt(e.xy);\r",
                                    "                }\r",
                                    "        }\r",
                                    "    },\r",
                                    "    scope: me\r",
                                    "});\r",
                                    "\r",
                                    "//define results grids\r",
                                    "var networkGrid = new Ext.grid.GridPanel ({\r",
                                    "    store: NetworkStoreXml,\r",
                                    "    displayField: 'number',\r",
                                    "    loadMask: true,\r",
                                    "    height: 280,\r",
                                    "    viewConfig: {\r",
                                    "        stripeRows: true,\r",
                                    "        enableTextSelection: true,\r",
                                    "        style: { overflow: 'scroll', overflowX: 'hidden' }\r",
                                    "    },\r",
                                    "    columns: [\r",
                                    "        {\r",
                                    "            text: \"Network\",\r",
                                    "            dataIndex: 'number',\r",
                                    "            width: 150\r",
                                    "        },\r",
                                    "        {\r",
                                    "            text: \"Network Description\",\r",
                                    "            dataIndex: 'description',\r",
                                    "            width: 150\r",
                                    "        },\r",
                                    "        {\r",
                                    "            text: \"Plant\",\r",
                                    "            dataIndex: 'plant',\r",
                                    "            width: 150\r",
                                    "         },\r",
                                    "        {\r",
                                    "            menuDisabled:true,\r",
                                    "            sortable: false,\r",
                                    "            xtype: 'actioncolumn',\r",
                                    "            width: 25,\r",
                                    "            items: [{\r",
                                    "                icon: 'images/add.png',\r",
                                    "                tooltip: 'Add Item',\r",
                                    "                handler: function (networkGrid, rowIndex, colIndex) {\r",
                                    "                    var ganttConfigStore = Ext.getStore('GanttConfigStoreXml');\r",
                                    "                    ganttConfigStore.add({\r",
                                    "                        name: 'noPrompt',\r",
                                    "                        value: ''\r",
                                    "                    });\r",
                                    "                    var taskStore = Ext.getStore('taskStore');\r",
                                    "                    var record = networkGrid.getStore().getAt(rowIndex);\r",
                                    "                    var recordNumber = record.get('number');\r",
                                    "                    var networkParentNode = SelectedObjectStoreXml.getNodeById(\"networkParentNode\");\r",
                                    "                    var recordDup = passedObjectsStore.findExact('number',recordNumber);\r",
                                    "                    networkParentNode.expand();\r",
                                    "                    if (recordDup == -1) {\r",
                                    "                        var networkChildNode = networkParentNode.appendChild({\r",
                                    "                            type: 'Network',\r",
                                    "                            number: recordNumber,\r",
                                    "                            leaf: true\r",
                                    "                        });\r",
                                    "                        passedObjectsStore.add(\r",
                                    "                            {type: 'network', number: recordNumber}\r",
                                    "                        );\r",
                                    "                    } else {\r",
                                    "                        alert('record already exists');\r",
                                    "                    }\r",
                                    "                }\r",
                                    "            }]\r",
                                    "         }\r",
                                    "        ]\r",
                                    "});\r",
                                    "var materialGrid = new Ext.grid.GridPanel ({\r",
                                    "    store: PartNumberStoreXml,\r",
                                    "    displayField: 'number',\r",
                                    "    loadMask: true,\r",
                                    "    height: 280,\r",
                                    "    viewConfig: {\r",
                                    "        stripeRows: true,\r",
                                    "        enableTextSelection: true,\r",
                                    "        style: { overflow: 'scroll', overflowX: 'hidden' }\r",
                                    "    },\r",
                                    "    columns: [\r",
                                    "        {\r",
                                    "            text: \"Material\",\r",
                                    "            dataIndex: 'number',\r",
                                    "            width: 200\r",
                                    "        },\r",
                                    "        {\r",
                                    "            text: \"Description\",\r",
                                    "            dataIndex: 'description',\r",
                                    "            width: 200\r",
                                    "        },\r",
                                    "        {\r",
                                    "            menuDisabled:true,\r",
                                    "            sortable: false,\r",
                                    "            xtype: 'actioncolumn',\r",
                                    "            width: 25,\r",
                                    "            items: [{\r",
                                    "                icon: 'images/add.png',\r",
                                    "                tooltip: 'Add Item',\r",
                                    "                handler: function (materialGrid, rowIndex, colIndex) {\r",
                                    "                    var ganttConfigStore = Ext.getStore('GanttConfigStoreXml');\r",
                                    "                    ganttConfigStore.add({\r",
                                    "                        name: 'noPrompt',\r",
                                    "                        value: ''\r",
                                    "                    });\r",
                                    "                    var taskStore = Ext.getStore('taskStore');\r",
                                    "                    var record = materialGrid.getStore().getAt(rowIndex);\r",
                                    "                    var recordNumber = record.get('number');\r",
                                    "                    var materialParentNode = SelectedObjectStoreXml.getNodeById(\"materialParentNode\");\r",
                                    "                    var recordDup = passedObjectsStore.findExact('number',recordNumber);\r",
                                    "                    materialParentNode.expand();\r",
                                    "                    if (recordDup == -1) {\r",
                                    "                        var materialChildNode = materialParentNode.appendChild({\r",
                                    "                            type: 'Material',\r",
                                    "                            number: recordNumber,\r",
                                    "                            leaf: true\r",
                                    "                        });\r",
                                    "                        passedObjectsStore.add(\r",
                                    "                            {type: 'material', number: recordNumber}\r",
                                    "                        );\r",
                                    "                    } else {\r",
                                    "                        alert('record already exists');\r",
                                    "                    }\r",
                                    "                }\r",
                                    "            }]\r",
                                    "         }\r",
                                    "        ]\r",
                                    "});\r",
                                    "var plantGrid = new Ext.grid.GridPanel ({\r",
                                    "    store: PlantStoreXml,\r",
                                    "    displayField: 'number',\r",
                                    "    loadMask: true,\r",
                                    "    height: 280,\r",
                                    "    viewConfig: {\r",
                                    "        stripeRows: true,\r",
                                    "        enableTextSelection: true,\r",
                                    "        style: { overflow: 'scroll', overflowX: 'hidden' }\r",
                                    "    },\r",
                                    "    columns: [\r",
                                    "        {\r",
                                    "            text: \"Plant\",\r",
                                    "            dataIndex: 'number',\r",
                                    "            width: 200\r",
                                    "        },\r",
                                    "        {\r",
                                    "            text: \"Description\",\r",
                                    "            dataIndex: 'description',\r",
                                    "            width: 200\r",
                                    "        },\r",
                                    "        {\r",
                                    "            menuDisabled:true,\r",
                                    "            sortable: false,\r",
                                    "            xtype: 'actioncolumn',\r",
                                    "            width: 25,\r",
                                    "            items: [{\r",
                                    "                icon: 'images/add.png',\r",
                                    "                tooltip: 'Add Item',\r",
                                    "                handler: function (plantGrid, rowIndex, colIndex) {\r",
                                    "                    var ganttConfigStore = Ext.getStore('GanttConfigStoreXml');\r",
                                    "                    ganttConfigStore.add({\r",
                                    "                        name: 'noPrompt',\r",
                                    "                        value: ''\r",
                                    "                    });\r",
                                    "                    var taskStore = Ext.getStore('taskStore');\r",
                                    "                    var record = plantGrid.getStore().getAt(rowIndex);\r",
                                    "                    var recordNumber = record.get('number');\r",
                                    "                    var plantParentNode = SelectedObjectStoreXml.getNodeById(\"plantParentNode\");\r",
                                    "                    var recordDup = passedObjectsStore.findExact('number',recordNumber);\r",
                                    "                    plantParentNode.expand();\r",
                                    "                    if (recordDup == -1) {\r",
                                    "                        var plantChildNode = plantParentNode.appendChild({\r",
                                    "                            type: 'Plant',\r",
                                    "                            number: recordNumber,\r",
                                    "                            leaf: true\r",
                                    "                        });\r",
                                    "                        passedObjectsStore.add(\r",
                                    "                            {type: 'plant', number: recordNumber}\r",
                                    "                        );\r",
                                    "                    } else {\r",
                                    "                        alert('record already exists');\r",
                                    "                    }\r",
                                    "                }\r",
                                    "            }]\r",
                                    "         }\r",
                                    "        ]\r",
                                    "});\r",
                                    "var programGrid = new Ext.grid.GridPanel ({\r",
                                    "    store: ProgramStoreXml,\r",
                                    "    displayField: 'number',\r",
                                    "    loadMask: true,\r",
                                    "    height: 280,\r",
                                    "    viewConfig: {\r",
                                    "        stripeRows: true,\r",
                                    "        enableTextSelection: true,\r",
                                    "        style: { overflow: 'scroll', overflowX: 'hidden' }\r",
                                    "    },\r",
                                    "    columns: [\r",
                                    "        {\r",
                                    "            text: \"Program\",\r",
                                    "            dataIndex: 'number',\r",
                                    "            width: 200\r",
                                    "        },\r",
                                    "        {\r",
                                    "            text: \"Description\",\r",
                                    "            dataIndex: 'description',\r",
                                    "            width: 200\r",
                                    "        },\r",
                                    "        {\r",
                                    "            menuDisabled:true,\r",
                                    "            sortable: false,\r",
                                    "            xtype: 'actioncolumn',\r",
                                    "            width: 25,\r",
                                    "            items: [{\r",
                                    "                icon: 'images/add.png',\r",
                                    "                tooltip: 'Add Item',\r",
                                    "                handler: function (programGrid, rowIndex, colIndex) {\r",
                                    "                    var ganttConfigStore = Ext.getStore('GanttConfigStoreXml');\r",
                                    "                    ganttConfigStore.add({\r",
                                    "                        name: 'noPrompt',\r",
                                    "                        value: ''\r",
                                    "                    });\r",
                                    "                    var taskStore = Ext.getStore('taskStore');\r",
                                    "                    var record = programGrid.getStore().getAt(rowIndex);\r",
                                    "                    var recordNumber = record.get('number');\r",
                                    "                    var programParentNode = SelectedObjectStoreXml.getNodeById(\"programParentNode\");\r",
                                    "                    var recordDup = passedObjectsStore.findExact('number',recordNumber);\r",
                                    "                    programParentNode.expand();\r",
                                    "                    if (recordDup == -1) {\r",
                                    "                        var programChildNode = programParentNode.appendChild({\r",
                                    "                            type: 'Program',\r",
                                    "                            number: recordNumber,\r",
                                    "                            leaf: true\r",
                                    "                        });\r",
                                    "                        passedObjectsStore.add(\r",
                                    "                            {type: 'program', number: recordNumber}\r",
                                    "                        );\r",
                                    "                    } else {\r",
                                    "                        alert('record already exists');\r",
                                    "                    }\r",
                                    "                }\r",
                                    "            }]\r",
                                    "         }\r",
                                    "        ]\r",
                                    "});\r",
                                    "var effectivityGrid = new Ext.grid.GridPanel ({\r",
                                    "    store: EffectivityStoreXml,\r",
                                    "    displayField: 'number',\r",
                                    "    loadMask: true,\r",
                                    "    height: 280,\r",
                                    "    viewConfig: {\r",
                                    "        stripeRows: true,\r",
                                    "        enableTextSelection: true,\r",
                                    "        style: { overflow: 'scroll', overflowX: 'hidden' }\r",
                                    "    },\r",
                                    "    columns: [\r",
                                    "        {\r",
                                    "            text: \"Effectivity\",\r",
                                    "            dataIndex: 'number',\r",
                                    "            width: 200\r",
                                    "        },\r",
                                    "        {\r",
                                    "            menuDisabled:true,\r",
                                    "            sortable: false,\r",
                                    "            xtype: 'actioncolumn',\r",
                                    "            width: 25,\r",
                                    "            items: [{\r",
                                    "                icon: 'images/add.png',\r",
                                    "                tooltip: 'Add Item',\r",
                                    "                handler: function (effectivityGrid, rowIndex, colIndex) {\r",
                                    "                    var ganttConfigStore = Ext.getStore('GanttConfigStoreXml');\r",
                                    "                    ganttConfigStore.add({\r",
                                    "                        name: 'noPrompt',\r",
                                    "                        value: ''\r",
                                    "                    });\r",
                                    "                    var taskStore = Ext.getStore('taskStore');\r",
                                    "                    var record = effectivityGrid.getStore().getAt(rowIndex);\r",
                                    "                    var recordNumber = record.get('number');\r",
                                    "                    var effectivityParentNode = SelectedObjectStoreXml.getNodeById(\"effectivityParentNode\");\r",
                                    "                    var recordDup = passedObjectsStore.findExact('number',recordNumber);\r",
                                    "                    effectivityParentNode.expand();\r",
                                    "                    if (recordDup == -1) {\r",
                                    "                        var effectivityChildNode = effectivityParentNode.appendChild({\r",
                                    "                            type: 'Effectivity',\r",
                                    "                            number: recordNumber,\r",
                                    "                            leaf: true\r",
                                    "                        });\r",
                                    "                        passedObjectsStore.add(\r",
                                    "                            {type: 'effectivity', number: recordNumber}\r",
                                    "                        );\r",
                                    "                    } else {\r",
                                    "                        alert('record already exists');\r",
                                    "                    }\r",
                                    "                }\r",
                                    "            }]\r",
                                    "         }\r",
                                    "        ]\r",
                                    "});\r",
                                    "var primaryMissionGrid = new Ext.grid.GridPanel ({\r",
                                    "    store: PrimaryMissionStoreXml,\r",
                                    "    displayField: 'number',\r",
                                    "    loadMask: true,\r",
                                    "    height: 280,\r",
                                    "    viewConfig: {\r",
                                    "        stripeRows: true,\r",
                                    "        enableTextSelection: true,\r",
                                    "        style: { overflow: 'scroll', overflowX: 'hidden' }\r",
                                    "    },\r",
                                    "    columns: [\r",
                                    "        {\r",
                                    "            text: \"Primary Mission\",\r",
                                    "            dataIndex: 'number',\r",
                                    "            width: 200\r",
                                    "        },\r",
                                    "        {\r",
                                    "            text: \"Description\",\r",
                                    "            dataIndex: 'description',\r",
                                    "            width: 200\r",
                                    "        },\r",
                                    "        {\r",
                                    "            menuDisabled:true,\r",
                                    "            sortable: false,\r",
                                    "            xtype: 'actioncolumn',\r",
                                    "            width: 25,\r",
                                    "            items: [{\r",
                                    "                icon: 'images/add.png',\r",
                                    "                tooltip: 'Add Item',\r",
                                    "                handler: function (primaryMissionGrid, rowIndex, colIndex) {\r",
                                    "                    var ganttConfigStore = Ext.getStore('GanttConfigStoreXml');\r",
                                    "                    ganttConfigStore.add({\r",
                                    "                        name: 'noPrompt',\r",
                                    "                        value: ''\r",
                                    "                    });\r",
                                    "                    var taskStore = Ext.getStore('taskStore');\r",
                                    "                    var record = primaryMissionGrid.getStore().getAt(rowIndex);\r",
                                    "                    var recordNumber = record.get('number');\r",
                                    "                    var primaryMissionParentNode = SelectedObjectStoreXml.getNodeById(\"primaryMissionParentNode\");\r",
                                    "                    var recordDup = passedObjectsStore.findExact('number',recordNumber);\r",
                                    "                    primaryMissionParentNode.expand();\r",
                                    "                    if (recordDup == -1) {\r",
                                    "                        var primaryMissionChildNode = primaryMissionParentNode.appendChild({\r",
                                    "                            type: 'Primary Mission',\r",
                                    "                            number: recordNumber,\r",
                                    "                            leaf: true\r",
                                    "                        });\r",
                                    "                        passedObjectsStore.add(\r",
                                    "                            {type: 'primaryMission', number: recordNumber}\r",
                                    "                        );\r",
                                    "                    } else {\r",
                                    "                        alert('record already exists');\r",
                                    "                    }\r",
                                    "                }\r",
                                    "            }]\r",
                                    "         }\r",
                                    "        ]\r",
                                    "});\r",
                                    "var buildItemGrid = new Ext.grid.GridPanel ({\r",
                                    "    store: BuildItemStoreXml,\r",
                                    "    displayField: 'number',\r",
                                    "    loadMask: true,\r",
                                    "    height: 280,\r",
                                    "    viewConfig: {\r",
                                    "        stripeRows: true,\r",
                                    "        enableTextSelection: true,\r",
                                    "        style: { overflow: 'scroll', overflowX: 'hidden' }\r",
                                    "    },\r",
                                    "    columns: [\r",
                                    "        {\r",
                                    "            text: \"Build Item\",\r",
                                    "            dataIndex: 'number',\r",
                                    "            width: 200\r",
                                    "        },\r",
                                    "        {\r",
                                    "            text: \"Description\",\r",
                                    "            dataIndex: 'description',\r",
                                    "            width: 200\r",
                                    "        },\r",
                                    "        {\r",
                                    "            menuDisabled:true,\r",
                                    "            sortable: false,\r",
                                    "            xtype: 'actioncolumn',\r",
                                    "            width: 25,\r",
                                    "            items: [{\r",
                                    "                icon: 'images/add.png',\r",
                                    "                tooltip: 'Add Item',\r",
                                    "                handler: function (buildItemGrid, rowIndex, colIndex) {\r",
                                    "                    var ganttConfigStore = Ext.getStore('GanttConfigStoreXml');\r",
                                    "                    ganttConfigStore.add({\r",
                                    "                        name: 'noPrompt',\r",
                                    "                        value: ''\r",
                                    "                    });\r",
                                    "                    var taskStore = Ext.getStore('taskStore');\r",
                                    "                    var record = buildItemGrid.getStore().getAt(rowIndex);\r",
                                    "                    var recordNumber = record.get('number');\r",
                                    "                    var buildItemParentNode = SelectedObjectStoreXml.getNodeById(\"buildItemParentNode\");\r",
                                    "                    var recordDup = passedObjectsStore.findExact('number',recordNumber);\r",
                                    "                    buildItemParentNode.expand();\r",
                                    "                    if (recordDup == -1) {\r",
                                    "                        var buildItemChildNode = buildItemParentNode.appendChild({\r",
                                    "                            type: 'Build Item',\r",
                                    "                            number: recordNumber,\r",
                                    "                            leaf: true\r",
                                    "                        });\r",
                                    "                        passedObjectsStore.add(\r",
                                    "                            {type: 'buildItem', number: recordNumber}\r",
                                    "                        );\r",
                                    "                    } else {\r",
                                    "                        alert('record already exists');\r",
                                    "                    }\r",
                                    "                }\r",
                                    "            }]\r",
                                    "         }\r",
                                    "        ]\r",
                                    "});\r",
                                    "var tailNumberGrid = new Ext.grid.GridPanel ({\r",
                                    "    store: TailNumberStoreXml,\r",
                                    "    displayField: 'number',\r",
                                    "    loadMask: true,\r",
                                    "    height: 280,\r",
                                    "    viewConfig: {\r",
                                    "        stripeRows: true,\r",
                                    "        enableTextSelection: true,\r",
                                    "        style: { overflow: 'scroll', overflowX: 'hidden' }\r",
                                    "    },\r",
                                    "    columns: [\r",
                                    "        {\r",
                                    "            text: \"Tail Number\",\r",
                                    "            dataIndex: 'number',\r",
                                    "            width: 200\r",
                                    "        },\r",
                                    "        {\r",
                                    "            text: \"Description\",\r",
                                    "            dataIndex: 'description',\r",
                                    "            width: 200\r",
                                    "        },\r",
                                    "        {\r",
                                    "            menuDisabled:true,\r",
                                    "            sortable: false,\r",
                                    "            xtype: 'actioncolumn',\r",
                                    "            width: 25,\r",
                                    "            items: [{\r",
                                    "                icon: 'images/add.png',\r",
                                    "                tooltip: 'Add Item',\r",
                                    "                handler: function (tailNumberGrid, rowIndex, colIndex) {\r",
                                    "                    var ganttConfigStore = Ext.getStore('GanttConfigStoreXml');\r",
                                    "                    ganttConfigStore.add({\r",
                                    "                        name: 'noPrompt',\r",
                                    "                        value: ''\r",
                                    "                    });\r",
                                    "                    var taskStore = Ext.getStore('taskStore');\r",
                                    "                    var record = tailNumberGrid.getStore().getAt(rowIndex);\r",
                                    "                    var recordNumber = record.get('number');\r",
                                    "                    var tailNumberParentNode = SelectedObjectStoreXml.getNodeById(\"tailNumberParentNode\");\r",
                                    "                    var recordDup = passedObjectsStore.findExact('number',recordNumber);\r",
                                    "                    tailNumberParentNode.expand();\r",
                                    "                    if (recordDup == -1) {\r",
                                    "                        var tailNumberChildNode = tailNumberParentNode.appendChild({\r",
                                    "                            type: 'Tail Number',\r",
                                    "                            number: recordNumber,\r",
                                    "                            leaf: true\r",
                                    "                        });\r",
                                    "                        passedObjectsStore.add(\r",
                                    "                            {type: 'tailNumber', number: recordNumber}\r",
                                    "                        );\r",
                                    "                    } else {\r",
                                    "                        alert('record already exists');\r",
                                    "                    }\r",
                                    "                }\r",
                                    "            }]\r",
                                    "         }\r",
                                    "        ]\r",
                                    "});\r",
                                    "\r",
                                    "//define search triggers\r",
                                    "Ext.define('Ext.ux.NetworkCustomTrigger', {\r",
                                    "    extend: 'Ext.form.field.Trigger',\r",
                                    "    alias: 'widget.networkcustomtrigger',\r",
                                    "    // override onTriggerClick\r",
                                    "    onTriggerClick: function(field) {\r",
                                    "        var updated = 'false';\r",
                                    "        NetworkStoreXml.removeAll();\r",
                                    "        var batch = {};\r",
                                    "        batch.proxy = NetworkStoreXml.getProxy();\r",
                                    "        batch.proxy.extraParams = {};\r",
                                    "        batch.proxy.setExtraParam('search', networkInput.value);\r",
                                    "            NetworkStoreXml.load ({\r",
                                    "                batch: batch\r",
                                    "            });\r",
                                    "    }\r",
                                    "});\r",
                                    "\r",
                                    "Ext.define('Ext.ux.PartNumberCustomTrigger', {\r",
                                    "    extend: 'Ext.form.field.Trigger',\r",
                                    "    alias: 'widget.partnumbercustomtrigger',\r",
                                    "\r",
                                    "    // override onTriggerClick\r",
                                    "    onTriggerClick: function(field) {\r",
                                    "        var updated = 'false';\r",
                                    "        PartNumberStoreXml.removeAll();\r",
                                    "        var batch = {};\r",
                                    "        batch.proxy = PartNumberStoreXml.getProxy();\r",
                                    "        batch.proxy.extraParams = {};\r",
                                    "        batch.proxy.setExtraParam('search', partNumberInput.value);\r",
                                    "               PartNumberStoreXml.load ({\r",
                                    "                batch: batch\r",
                                    "            });\r",
                                    "    }\r",
                                    "});\r",
                                    "Ext.define('Ext.ux.PlantCustomTrigger', {\r",
                                    "    extend: 'Ext.form.field.Trigger',\r",
                                    "    alias: 'widget.plantcustomtrigger',\r",
                                    "\r",
                                    "    // override onTriggerClick\r",
                                    "    onTriggerClick: function(field) {\r",
                                    "        var updated = 'false';\r",
                                    "        PlantStoreXml.removeAll();\r",
                                    "        var batch = {};\r",
                                    "        batch.proxy = PlantStoreXml.getProxy();\r",
                                    "        batch.proxy.extraParams = {};\r",
                                    "        batch.proxy.setExtraParam('search', plantInput.value);\r",
                                    "               PlantStoreXml.load ({\r",
                                    "                batch: batch\r",
                                    "            });\r",
                                    "    }\r",
                                    "});\r",
                                    "Ext.define('Ext.ux.ProgramCustomTrigger', {\r",
                                    "    extend: 'Ext.form.field.Trigger',\r",
                                    "    alias: 'widget.programcustomtrigger',\r",
                                    "        // override onTriggerClick\r",
                                    "    onTriggerClick: function(field) {\r",
                                    "        var updated = 'false';\r",
                                    "        ProgramStoreXml.removeAll();\r",
                                    "        var batch = {};\r",
                                    "        batch.proxy = ProgramStoreXml.getProxy();\r",
                                    "        batch.proxy.extraParams = {};\r",
                                    "        batch.proxy.setExtraParam('search', programInput.value);\r",
                                    "               ProgramStoreXml.load ({\r",
                                    "                batch: batch\r",
                                    "            });\r",
                                    "    }\r",
                                    "});\r",
                                    "Ext.define('Ext.ux.PrimaryMissionCustomTrigger', {\r",
                                    "    extend: 'Ext.form.field.Trigger',\r",
                                    "    alias: 'widget.primarymissioncustomtrigger',\r",
                                    "        // override onTriggerClick\r",
                                    "    onTriggerClick: function(field) {\r",
                                    "        var updated = 'false';\r",
                                    "        PrimaryMissionStoreXml.removeAll();\r",
                                    "        var batch = {};\r",
                                    "        batch.proxy = PrimaryMissionStoreXml.getProxy();\r",
                                    "        batch.proxy.extraParams = {};\r",
                                    "        batch.proxy.setExtraParam('search', primaryMissionInput.value);\r",
                                    "               PrimaryMissionStoreXml.load ({\r",
                                    "                batch: batch\r",
                                    "            });\r",
                                    "    }\r",
                                    "});\r",
                                    "Ext.define('Ext.ux.BuildItemCustomTrigger', {\r",
                                    "    extend: 'Ext.form.field.Trigger',\r",
                                    "    alias: 'widget.builditemcustomtrigger',\r",
                                    "        // override onTriggerClick\r",
                                    "    onTriggerClick: function(field) {\r",
                                    "        var updated = 'false';\r",
                                    "        BuildItemStoreXml.removeAll();\r",
                                    "        var batch = {};\r",
                                    "        batch.proxy = BuildItemStoreXml.getProxy();\r",
                                    "        batch.proxy.extraParams = {};\r",
                                    "        batch.proxy.setExtraParam('search', buildItemInput.value);\r",
                                    "               BuildItemStoreXml.load ({\r",
                                    "                batch: batch\r",
                                    "            });\r",
                                    "    }\r",
                                    "});\r",
                                    "Ext.define('Ext.ux.TailNumberCustomTrigger', {\r",
                                    "    extend: 'Ext.form.field.Trigger',\r",
                                    "    alias: 'widget.tailnumbercustomtrigger',\r",
                                    "        // override onTriggerClick\r",
                                    "    onTriggerClick: function(field) {\r",
                                    "        var updated = 'false';\r",
                                    "        TailNumberStoreXml.removeAll();\r",
                                    "        var batch = {};\r",
                                    "        batch.proxy = TailNumberStoreXml.getProxy();\r",
                                    "        batch.proxy.extraParams = {};\r",
                                    "        batch.proxy.setExtraParam('search', tailNumberInput.value);\r",
                                    "               TailNumberStoreXml.load ({\r",
                                    "                batch: batch\r",
                                    "            });\r",
                                    "    }\r",
                                    "});\r",
                                    "Ext.define('Ext.ux.EffectivityCustomTrigger', {\r",
                                    "    extend: 'Ext.form.field.Trigger',\r",
                                    "    alias: 'widget.effectivitycustomtrigger',\r",
                                    "        // override onTriggerClick\r",
                                    "    onTriggerClick: function(field) {\r",
                                    "        var updated = 'false';\r",
                                    "        EffectivityStoreXml.removeAll();\r",
                                    "        var batch = {};\r",
                                    "        batch.proxy = EffectivityStoreXml.getProxy();\r",
                                    "        batch.proxy.extraParams = {};\r",
                                    "        batch.proxy.setExtraParam('search', effectivityInput.value);\r",
                                    "               EffectivityStoreXml.load ({\r",
                                    "                batch: batch\r",
                                    "            });\r",
                                    "    }\r",
                                    "});\r",
                                    "Ext.define('Ext.ux.NameCustomTrigger', {\r",
                                    "    extend: 'Ext.form.field.Trigger',\r",
                                    "    alias: 'widget.namecustomtrigger',\r",
                                    "        // override onTriggerClick\r",
                                    "    onTriggerClick: function(field) {\r",
                                    "        var ganttConfigStore = Ext.getStore('GanttConfigStoreXml');\r",
                                    "            ganttConfigStore.add({\r",
                                    "                name: 'noPrompt',\r",
                                    "                value: ''\r",
                                    "            });\r",
                                    "        var updated = 'false';\r",
                                    "        passedObjectsStore.add(\r",
                                    "            {type: 'name', number: nameInput.value}\r",
                                    "        );\r",
                                    "        var nameParentNode = SelectedObjectStoreXml.getNodeById(\"nameParentNode\");\r",
                                    "        var nameChildNode = nameParentNode.appendChild({\r",
                                    "            type: 'Name',\r",
                                    "            number: nameInput.value,\r",
                                    "            leaf: true\r",
                                    "        });\r",
                                    "    }\r",
                                    "});\r",
                                    "Ext.define('Ext.ux.NotesCustomTrigger', {\r",
                                    "    extend: 'Ext.form.field.Trigger',\r",
                                    "    alias: 'widget.notescustomtrigger',\r",
                                    "        // override onTriggerClick\r",
                                    "    onTriggerClick: function(field) {\r",
                                    "        var updated = 'false';\r",
                                    "        var ganttConfigStore = Ext.getStore('GanttConfigStoreXml');\r",
                                    "            ganttConfigStore.add({\r",
                                    "                name: 'noPrompt',\r",
                                    "                value: ''\r",
                                    "            });\r",
                                    "        passedObjectsStore.add(\r",
                                    "            {type: 'notes', number: notesInput.value}\r",
                                    "        );\r",
                                    "        var notesParentNode = SelectedObjectStoreXml.getNodeById(\"notesParentNode\");\r",
                                    "        var notesChildNode = notesParentNode.appendChild({\r",
                                    "            type: 'Notes',\r",
                                    "            number: notesInput.value,\r",
                                    "            leaf: true\r",
                                    "        });\r",
                                    "    }\r",
                                    "});\r",
                                    "Ext.define('Ext.ux.MaterialCustomTrigger', {\r",
                                    "    extend: 'Ext.form.field.Trigger',\r",
                                    "    alias: 'widget.materialcustomtrigger',\r",
                                    "    // override onTriggerClick\r",
                                    "    onTriggerClick: function(field) {\r",
                                    "        var updated = 'false';\r",
                                    "        PartNumberStoreXml.removeAll();\r",
                                    "        var batch = {};\r",
                                    "        batch.proxy = PartNumberStoreXml.getProxy();\r",
                                    "        batch.proxy.extraParams = {};\r",
                                    "        batch.proxy.setExtraParam('search', materialInput.value);\r",
                                    "               PartNumberStoreXml.load ({\r",
                                    "                batch: batch\r",
                                    "            });\r",
                                    "    }\r",
                                    "});\r",
                                    "//Save Selection Variant\r",
                                    "var saveForm = new Ext.FormPanel ({\r",
                                    "    title: 'Save Options',\r",
                                    "    padding: 10,\r",
                                    "    layout: {\r",
                                    "        pack: 'center'\r",
                                    "    },\r",
                                    "    border: '0',\r",
                                    "    items: [{\r",
                                    "        xtype: 'textfield',\r",
                                    "        flex: 1,\r",
                                    "        id: 'saveSelectionVariantName',\r",
                                    "        fieldLabel: 'Save As',\r",
                                    "        inputId: 'saveInput',\r",
                                    "        width: 400,\r",
                                    "        emptyText: 'Save Seletion Variant'\r",
                                    "    }, {\r",
                                    "        xtype: 'textfield',\r",
                                    "        flex: 2,\r",
                                    "        id: 'saveSelectionVariantDescription',\r",
                                    "        fieldLabel: 'Description',\r",
                                    "        inputId: 'descriptionInput',\r",
                                    "        width: 400,\r",
                                    "        emptyText: 'Save Seletion Variant'\r",
                                    "    }, {\r",
                                    "        xtype: 'combobox',\r",
                                    "        flex: 3,\r",
                                    "        id: 'variantType',\r",
                                    "        fieldLabel: 'Type',\r",
                                    "        inputId: 'saveVariantTypeInput',\r",
                                    "        name: 'variantType',\r",
                                    "        value: 'User',\r",
                                    "        displayField: 'name',\r",
                                    "        forceSelection: true,\r",
                                    "        queryMode: 'local',\r",
                                    "        width: 400,\r",
                                    "        store: variantTypeStore\r",
                                    "    }\r",
                                    "           ]});\r",
                                    "var userGlobalIndex = GanttConfigStoreXml.findExact('name','saveGlobal');\r",
                                    "if (userGlobalIndex == -1){\r",
                                    "    var variantType = Ext.ComponentManager.get('variantType');\r",
                                    "    if(variantType !== undefined){\r",
                                    "        variantType.hide();\r",
                                    "    }\r",
                                    "} else {\r",
                                    "    var userGlobalRecord = GanttConfigStoreXml.getAt(userGlobalIndex);\r",
                                    "    var userGlobalValue = userGlobalRecord.get('value');\r",
                                    "    if (userGlobalValue != 'X') {\r",
                                    "        var variantType = Ext.ComponentManager.get('variantType');\r",
                                    "        variantType.hide();\r",
                                    "    }\r",
                                    "}\r",
                                    "//get summary value if existing\r",
                                    "//mission Options\r",
                                    "var missionOptionsIndex = paramStore.findExact('name','missionOptions');\r",
                                    "if (missionOptionsIndex != -1) {\r",
                                    "    var missionOptionsRecord = paramStore.getAt(missionOptionsIndex);\r",
                                    "    var missionOptionsInit = missionOptionsRecord.get('value');\r",
                                    "} else {\r",
                                    "    var missionOptionsInit = '';\r",
                                    "}\r",
                                    "//produciton end items\r",
                                    "var productionEndItemsOptionsIndex = paramStore.findExact('name','productionEndItemsOptions');\r",
                                    "if (productionEndItemsOptionsIndex != -1) {\r",
                                    "    var productionEndItemsOptionsRecord = paramStore.getAt(productionEndItemsOptionsIndex);\r",
                                    "    var productionEndItemsOptionsInit = productionEndItemsOptionsRecord.get('value');\r",
                                    "} else {\r",
                                    "    var productionEndItemsOptionsInit = '';\r",
                                    "}\r",
                                    "//major shipped end items\r",
                                    "var majorShippedEndItemsOptionsIndex = paramStore.findExact('name','majorShippedEndItemsOptions');\r",
                                    "if (majorShippedEndItemsOptionsIndex != -1){\r",
                                    "    var majorShippedEndItemsOptionsRecord = paramStore.getAt(majorShippedEndItemsOptionsIndex);\r",
                                    "    var majorShippedEndItemsOptionsInit = majorShippedEndItemsOptionsRecord.get('value');\r",
                                    "} else {\r",
                                    "    var majorShippedEndItemsOptionsInit = '';\r",
                                    "}\r",
                                    "// sort by\r",
                                    "var sortByIndex = paramStore.findExact('name','sortBy');\r",
                                    "if (sortByIndex != -1) {\r",
                                    "    var sortByRecord = paramStore.getAt(sortByIndex);\r",
                                    "    var sortByInit = sortByRecord.get('value');\r",
                                    "} else {\r",
                                    "    var sortByInit = '';\r",
                                    "}\r",
                                    "// show details\r",
                                    "var showDetailsIndex = paramStore.findExact('name','showDetails');\r",
                                    "if (showDetailsIndex != -1) {\r",
                                    "    var showDetailsRecord = paramStore.getAt(showDetailsIndex);\r",
                                    "    var showDetailsInit = showDetailsRecord.get('value');\r",
                                    "} else {\r",
                                    "    var showDetailsInit = '';\r",
                                    "}\r",
                                    "// show details\r",
                                    "var baselineOptionsIndex = paramStore.findExact('name','baselineOptions');\r",
                                    "if (baselineOptionsIndex != -1) {\r",
                                    "    var baselineOptionsRecord = paramStore.getAt(baselineOptionsIndex);\r",
                                    "    var baselineOptionsInit = baselineOptionsRecord.get('value');\r",
                                    "} else {\r",
                                    "    var baselineOptionsInit = '';\r",
                                    "}\r",
                                    "//summary options form\r",
                                    "var summaryOptionsForm = new Ext.FormPanel ({\r",
                                    "    title: 'Summary Options',\r",
                                    "    layout: 'vbox',\r",
                                    "    padding: 10,\r",
                                    "    items: [{\r",
                                    "                xtype: 'combobox',\r",
                                    "                flex: 2,\r",
                                    "                itemId: 'missionOptions',\r",
                                    "                fieldLabel: 'Mission',\r",
                                    "                inputId: 'missionOptionsValue',\r",
                                    "                name: 'missionOptions',\r",
                                    "                width: 400,\r",
                                    "                displayField: 'name',\r",
                                    "                forceSelection: true,\r",
                                    "                queryMode: 'local',\r",
                                    "                value: missionOptionsInit,\r",
                                    "                store: summaryOptionsStore,\r",
                                    "                listeners: {\r",
                                    "                    select: {\r",
                                    "                        fn: function(){\r",
                                    "                            var ganttConfigStore = Ext.getStore('GanttConfigStoreXml');\r",
                                    "                            ganttConfigStore.add({\r",
                                    "                                name: 'noPrompt',\r",
                                    "                                value: ''\r",
                                    "                            });\r",
                                    "                            var paramStore = Ext.getStore('ParamStoreXml');\r",
                                    "                            var passedObjectsStore = Ext.getStore('PassedObjectsStoreXml');\r",
                                    "                            var missionOptionsIndex = passedObjectsStore.findExact('type','missionOptions');\r",
                                    "                            var type = 'missionOptions';\r",
                                    "                            var number = missionOptionsValue.value;\r",
                                    "                            if (missionOptionsIndex == -1){\r",
                                    "                                passedObjectsStore.add(\r",
                                    "                                    {type: type, number: number}\r",
                                    "                                );\r",
                                    "                            } else {\r",
                                    "                                passedObjectsStore.removeAt(missionOptionsIndex);\r",
                                    "                                passedObjectsStore.add(\r",
                                    "                                    {type: type, number: number}\r",
                                    "                                );\r",
                                    "                            }\r",
                                    "                        },\r",
                                    "                        scope: me\r",
                                    "                    }\r",
                                    "                }\r",
                                    "\r",
                                    "            },{\r",
                                    "                xtype: 'combobox',\r",
                                    "                flex: 1,\r",
                                    "                itemId: 'productionEndItems',\r",
                                    "                fieldLabel: 'Production End Items',\r",
                                    "                width: 400,\r",
                                    "                inputId: 'productionEndItemsOptionValue',\r",
                                    "                name: 'productionEndItems',\r",
                                    "                displayField: 'name',\r",
                                    "                value: productionEndItemsOptionsInit,\r",
                                    "                forceSelection: true,\r",
                                    "                queryMode: 'local',\r",
                                    "                store: summaryOptionsStore,\r",
                                    "                listeners: {\r",
                                    "                    select: {\r",
                                    "                        fn: function(){\r",
                                    "                            var ganttConfigStore = Ext.getStore('GanttConfigStoreXml');\r",
                                    "                            ganttConfigStore.add({\r",
                                    "                                name: 'noPrompt',\r",
                                    "                                value: ''\r",
                                    "                            });\r",
                                    "                            var paramStore = Ext.getStore('ParamStoreXml');\r",
                                    "                            var passedObjectsStore = Ext.getStore('PassedObjectsStoreXml');\r",
                                    "                            var productionEndItemsOptionsIndex = passedObjectsStore.findExact('type','productionEndItemsOptions');\r",
                                    "                            var type = 'productionEndItemsOptions';\r",
                                    "                            var number = productionEndItemsOptionValue.value;\r",
                                    "                            if (productionEndItemsOptionsIndex == -1){\r",
                                    "                                passedObjectsStore.add(\r",
                                    "                                    {type: type, number: number}\r",
                                    "                                );\r",
                                    "                            } else {\r",
                                    "                                passedObjectsStore.removeAt(productionEndItemsOptionsIndex);\r",
                                    "                                passedObjectsStore.add(\r",
                                    "                                    {type: type, number: number}\r",
                                    "                                );\r",
                                    "                            }\r",
                                    "                        },\r",
                                    "                        scope: me\r",
                                    "                    }\r",
                                    "                }\r",
                                    "            },{\r",
                                    "\r",
                                    "                xtype: 'combobox',\r",
                                    "                flex: 2,\r",
                                    "                itemId: 'majorShippedEndItemsOptions',\r",
                                    "                width: 400,\r",
                                    "                fieldLabel: 'Major Shipped End Items',\r",
                                    "                inputId: 'majorShippedEndItemsValue',\r",
                                    "                name: 'majorShippedEndItemsOptions',\r",
                                    "                value: majorShippedEndItemsOptionsInit,\r",
                                    "                displayField: 'name',\r",
                                    "                forceSelection: true,\r",
                                    "                queryMode: 'local',\r",
                                    "                store: summaryOptionsStore,\r",
                                    "                listeners: {\r",
                                    "                    select: {\r",
                                    "                        fn: function(){\r",
                                    "                            var ganttConfigStore = Ext.getStore('GanttConfigStoreXml');\r",
                                    "                            ganttConfigStore.add({\r",
                                    "                                name: 'noPrompt',\r",
                                    "                                value: ''\r",
                                    "                            });\r",
                                    "                            var paramStore = Ext.getStore('ParamStoreXml');\r",
                                    "                            var passedObjectsStore = Ext.getStore('PassedObjectsStoreXml');\r",
                                    "                            var majorShippedEndItemsOptionsIndex = passedObjectsStore.findExact('type','majorShippedEndItemsOptions');\r",
                                    "                            var type = 'majorShippedEndItemsOptions';\r",
                                    "                            var number = majorShippedEndItemsValue.value;\r",
                                    "                            if (majorShippedEndItemsOptionsIndex == -1){\r",
                                    "                                passedObjectsStore.add(\r",
                                    "                                    {type: type, number: number}\r",
                                    "                                );\r",
                                    "                            } else {\r",
                                    "                                passedObjectsStore.removeAt(majorShippedEndItemsOptionsIndex);\r",
                                    "                                passedObjectsStore.add(\r",
                                    "                                    {type: type, number: number}\r",
                                    "                                );\r",
                                    "                            }\r",
                                    "                        },\r",
                                    "                        scope: me\r",
                                    "                    }\r",
                                    "                }\r",
                                    "            }, {\r",
                                    "\r",
                                    "                xtype: 'combobox',\r",
                                    "                flex: 2,\r",
                                    "                width: 400,\r",
                                    "                itemId: 'sortBy',\r",
                                    "                fieldLabel: 'Sort By',\r",
                                    "                inputId: 'sortByValue',\r",
                                    "                name: 'sortBy',\r",
                                    "                displayField: 'name',\r",
                                    "                value: sortByInit,\r",
                                    "                forceSelection: true,\r",
                                    "                queryMode: 'local',\r",
                                    "                store: sortByStore,\r",
                                    "                listeners: {\r",
                                    "                    select: {\r",
                                    "                        fn: function(){\r",
                                    "                            var ganttConfigStore = Ext.getStore('GanttConfigStoreXml');\r",
                                    "                            ganttConfigStore.add({\r",
                                    "                                name: 'noPrompt',\r",
                                    "                                value: ''\r",
                                    "                            });\r",
                                    "                            var paramStore = Ext.getStore('ParamStoreXml');\r",
                                    "                            var passedObjectsStore = Ext.getStore('PassedObjectsStoreXml');\r",
                                    "                            var sortByIndex = passedObjectsStore.findExact('type','sortBy');\r",
                                    "                            var type = 'sortBy';\r",
                                    "                            var number = sortByValue.value;\r",
                                    "                            if (sortByIndex == -1){\r",
                                    "                                passedObjectsStore.add(\r",
                                    "                                    {type: type, number: number}\r",
                                    "                                );\r",
                                    "                            } else {\r",
                                    "                                passedObjectsStore.removeAt(sortByIndex);\r",
                                    "                                passedObjectsStore.add(\r",
                                    "                                    {type: type, number: number}\r",
                                    "                                );\r",
                                    "                            }\r",
                                    "                        },\r",
                                    "                        scope: me\r",
                                    "                    }\r",
                                    "                }\r",
                                    "\r",
                                    "            }, {\r",
                                    "\r",
                                    "                xtype: 'combobox',\r",
                                    "                flex: 2,\r",
                                    "                width: 400,\r",
                                    "                itemId: 'baselineOptions',\r",
                                    "                fieldLabel: 'Baseline Date Options',\r",
                                    "                inputId: 'baselineOptionsValue',\r",
                                    "                name: 'baselineOptions',\r",
                                    "                displayField: 'name',\r",
                                    "                value: baselineOptionsInit,\r",
                                    "                forceSelection: true,\r",
                                    "                queryMode: 'local',\r",
                                    "                store: baselineOptionsStore,\r",
                                    "                listeners: {\r",
                                    "                    select: {\r",
                                    "                        fn: function(){\r",
                                    "                            var ganttConfigStore = Ext.getStore('GanttConfigStoreXml');\r",
                                    "                            ganttConfigStore.add({\r",
                                    "                                name: 'noPrompt',\r",
                                    "                                value: ''\r",
                                    "                            });\r",
                                    "                            var paramStore = Ext.getStore('ParamStoreXml');\r",
                                    "                            var passedObjectsStore = Ext.getStore('PassedObjectsStoreXml');\r",
                                    "                            var baselineOptionsIndex = passedObjectsStore.findExact('type','baselineOptions');\r",
                                    "                            var type = 'baselineOptions';\r",
                                    "                            var number = baselineOptionsValue.value;\r",
                                    "                            if (baselineOptionsIndex == -1){\r",
                                    "                                passedObjectsStore.add(\r",
                                    "                                    {type: type, number: number}\r",
                                    "                                );\r",
                                    "                            } else {\r",
                                    "                                passedObjectsStore.removeAt(baselineOptionsIndex);\r",
                                    "                                passedObjectsStore.add(\r",
                                    "                                    {type: type, number: number}\r",
                                    "                                );\r",
                                    "                            }\r",
                                    "                        },\r",
                                    "                        scope: me\r",
                                    "                    }\r",
                                    "                }\r",
                                    "\r",
                                    "            },{\r",
                                    "                xtype: 'combobox',\r",
                                    "                flex: 2,\r",
                                    "                width: 200,\r",
                                    "                itemId: 'showDetails',\r",
                                    "                fieldLabel: 'Show Details',\r",
                                    "                inputId: 'showDetailsValue',\r",
                                    "                name: 'showDetails',\r",
                                    "                value: showDetailsInit,\r",
                                    "                displayField: 'name',\r",
                                    "                labelAlign: 'left',\r",
                                    "                store: Ext.getStore('YesNoStore'),\r",
                                    "                listeners: {\r",
                                    "                    select: {\r",
                                    "                        fn: function (){\r",
                                    "                            var ganttConfigStore = Ext.getStore('GanttConfigStoreXml');\r",
                                    "                            ganttConfigStore.add({\r",
                                    "                                name: 'noPrompt',\r",
                                    "                                value: ''\r",
                                    "                            });\r",
                                    "                            var paramStore = Ext.getStore('ParamStoreXml');\r",
                                    "                            var passedObjectsStore = Ext.getStore('PassedObjectsStoreXml');\r",
                                    "                            var showDetailsIndex = passedObjectsStore.findExact('type','showDetails');\r",
                                    "                            var name = 'showDetails';\r",
                                    "                            var value = showDetailsValue.value;\r",
                                    "                            switch (value){\r",
                                    "                                case 'True':\r",
                                    "                                    value = 'T';\r",
                                    "                                    break;\r",
                                    "                                case 'False':\r",
                                    "                                    value = 'F';\r",
                                    "                                    break;\r",
                                    "                                case 'Only Summary':\r",
                                    "                                    value = 'Only Summary';\r",
                                    "                                    break;\r",
                                    "                                default:\r",
                                    "                                    value = 'T';\r",
                                    "                            }\r",
                                    "                            if (showDetailsIndex == -1) {\r",
                                    "                                passedObjectsStore.add(\r",
                                    "                                    {type: name, number: value}\r",
                                    "                                );\r",
                                    "                            } else {\r",
                                    "                                passedObjectsStore.removeAt(showDetailsIndex);\r",
                                    "                                passedObjectsStore.add(\r",
                                    "                                    {type: name, number: value}\r",
                                    "                                );\r",
                                    "                            }\r",
                                    "                        }\r",
                                    "                    }\r",
                                    "                }\r",
                                    "            }, {\r",
                                    "                xtype: 'button',\r",
                                    "                icon: 'images/close-icon.png',\r",
                                    "                text: '',\r",
                                    "                tooltip: 'Apply Options',\r",
                                    "                handler: function (button, e){\r",
                                    "                    var selectionWindow = Ext.get('selectionWindow');\r",
                                    "                    selectionWindow.hide();\r",
                                    "                }\r",
                                    "            }\r",
                                    "           ]\r",
                                    "});\r",
                                    "var submitButton = new Ext.button.Button ({\r",
                                    "        text: 'Save Variant',\r",
                                    "        dock: 'right',\r",
                                    "        handler: function(button, e) {\r",
                                    "            var taskStore = Ext.getStore('taskStore');\r",
                                    "            var passedObjectsStore = Ext.getStore('PassedObjectsStoreXml');\r",
                                    "            var paramStore = Ext.getStore('ParamStoreXml');\r",
                                    "            var selectionVariantStore = Ext.getStore('SelectionVariantStoreXml');\r",
                                    "            var batch = {};\r",
                                    "            batch.proxy = taskStore.getProxy();\r",
                                    "            var saveNameInput = saveInput.value;\r",
                                    "            var saveDescriptionInput = descriptionInput.value;\r",
                                    "            var variantTypeInput = saveVariantTypeInput.value;\r",
                                    "            var missionOptionsInput = missionOptionsValue.value;\r",
                                    "            var productionEndItemsOptionInput = productionEndItemsOptionValue.value;\r",
                                    "            var majorShippedEndItemsInput = majorShippedEndItemsValue.value;\r",
                                    "            var sortByInput = sortByValue.value;\r",
                                    "            var showDetailsInput = showDetailsValue.value;\r",
                                    "            var baselineOptionsInput = baselineOptionsValue.value;\r",
                                    "            var variantTypeExists = passedObjectsStore.findExact('type','variantType');\r",
                                    "            var saveNameExists = passedObjectsStore.findExact('type','saveName');\r",
                                    "            var saveDescriptionExists = passedObjectsStore.findExact('type','saveDescription');\r",
                                    "            var missionOptionsExists = passedObjectsStore.findExact('type','missionOptions');\r",
                                    "            var productionEndItemsOptionsExists = passedObjectsStore.findExact('type','productionEndItemsOptions');\r",
                                    "            var majorShippedEndItemsOptionsExists = passedObjectsStore.findExact('type','majorShippedEndItemsOptions');\r",
                                    "            var showDetailsExists = passedObjectsStore.findExact('type','showDetails');\r",
                                    "            var sortByExists = passedObjectsStore.findExact('type','sortBy');\r",
                                    "            var baselineOptionsExists = passedObjectsStore.findExact('type','baselineOptions');\r",
                                    "            if (variantTypeExists == -1){\r",
                                    "                passedObjectsStore.add(\r",
                                    "                    {type: 'variantType', number: variantTypeInput}\r",
                                    "                );\r",
                                    "            }\r",
                                    "            if (saveNameExists == -1) {\r",
                                    "                passedObjectsStore.add(\r",
                                    "                    {type: 'saveName', number: saveNameInput}\r",
                                    "                );\r",
                                    "                var selectionVariantExists = selectionVariantStore.findExact('name',saveNameInput);\r",
                                    "                if (selectionVariantExists == -1) {\r",
                                    "                    selectionVariantStore.add(\r",
                                    "                        {\r",
                                    "                            name: saveNameInput,\r",
                                    "                            description: saveDescriptionInput,\r",
                                    "                            type: variantTypeInput\r",
                                    "                        }\r",
                                    "                    );\r",
                                    "                    selectionVariantStore.sync();\r",
                                    "                }\r",
                                    "            }\r",
                                    "            if (saveDescriptionExists == -1){\r",
                                    "                passedObjectsStore.add(\r",
                                    "                    {type: 'saveDescription', number: saveDescriptionInput}\r",
                                    "                );\r",
                                    "            }\r",
                                    "            if (missionOptionsExists == -1){\r",
                                    "                passedObjectsStore.add(\r",
                                    "                    {type: 'missionOptions', number: missionOptionsInput}\r",
                                    "                );\r",
                                    "            }\r",
                                    "            if (productionEndItemsOptionsExists == -1){\r",
                                    "                passedObjectsStore.add(\r",
                                    "                    {type: 'productionEndItemsOptions', number: productionEndItemsOptionInput}\r",
                                    "                );\r",
                                    "            }\r",
                                    "            if (majorShippedEndItemsOptionsExists == -1){\r",
                                    "                passedObjectsStore.add(\r",
                                    "                    {type: 'majorShippedEndItemsOptions', number: majorShippedEndItemsInput}\r",
                                    "                );\r",
                                    "            }\r",
                                    "            if (sortByExists == -1){\r",
                                    "                passedObjectsStore.add(\r",
                                    "                    {type: 'sortBy', number: sortByInput}\r",
                                    "                );\r",
                                    "            }\r",
                                    "            if (showDetailsExists == -1){\r",
                                    "                passedObjectsStore.add(\r",
                                    "                    {type: 'showDetails', number: showDetailsInput}\r",
                                    "                );\r",
                                    "            }\r",
                                    "            if (baselineOptionsExists == -1){\r",
                                    "                passedObjectsStore.add(\r",
                                    "                    {type: 'baselineOptions', number: baselineOptionsInput}\r",
                                    "                );\r",
                                    "            }\r",
                                    "            var passedObjects = passedObjectsStore.getRange();\r",
                                    "            var count = passedObjects.length;\r",
                                    "            for (i = 0; i < count; i++) {\r",
                                    "                var number = passedObjectsStore.getAt(i).get('number');\r",
                                    "                var type = passedObjectsStore.getAt(i).get('type');\r",
                                    "                batch.proxy.setExtraParam(type+'-'+i,number);\r",
                                    "            }\r",
                                    "            taskStore.load({\r",
                                    "                batch: batch,\r",
                                    "                callback: function (){\r",
                                    "                    Ext.MessageBox.alert(\r",
                                    "                        'Saved','Variant saved'\r",
                                    "                    );\r",
                                    "                }\r",
                                    "                });\r",
                                    "        }\r",
                                    "});\r",
                                    "var deleteForm = new Ext.FormPanel ({\r",
                                    "    title: 'Delete Selection Variant',\r",
                                    "    layout: {\r",
                                    "        pack: 'center'\r",
                                    "    },\r",
                                    "    border: '0',\r",
                                    "    id: deleteForm,\r",
                                    "    padding: 10,\r",
                                    "    items: [{\r",
                                    "        xtype: 'combobox',\r",
                                    "        flex: 1,\r",
                                    "        id: 'deleteSelectionVariantName',\r",
                                    "        fieldLabel: 'Delete',\r",
                                    "        inputId: 'deleteInput',\r",
                                    "        store: Ext.getStore('SelectionVariantStoreXml'),\r",
                                    "        displayField: 'description',\r",
                                    "        width: 400,\r",
                                    "        listeners: {\r",
                                    "            select: {\r",
                                    "                fn: function(){\r",
                                    "                    var selectionVariantStore = Ext.getStore('SelectionVariantStoreXml');\r",
                                    "                    var taskStore = Ext.getStore('taskStore');\r",
                                    "                    var deleteNameInput = deleteInput.value;\r",
                                    "                    var deletedRecordIndex = selectionVariantStore.findExact('description',deleteNameInput);\r",
                                    "                    if (deletedRecordIndex != -1) {\r",
                                    "                        var deletedRecord = selectionVariantStore.getAt(deletedRecordIndex);\r",
                                    "                        var deletedRecordName = deleteNameInput;\r",
                                    "                        var confirm = Ext.MessageBox.confirm(\r",
                                    "                            'Confirm',\r",
                                    "                            'Delete Variant: '&deletedRecordName,\r",
                                    "                            function (e){\r",
                                    "                                if (e=='yes') {\r",
                                    "                                    var selectionVariantStore = Ext.getStore('SelectionVariantStoreXml');\r",
                                    "                                    var taskStore = Ext.getStore('taskStore');\r",
                                    "                                    var deleteNameInput = deleteInput.value;\r",
                                    "                                    var deletedRecordType = 'deleteVariant';\r",
                                    "                                    selectionVariantStore.remove(deletedRecord);\r",
                                    "                                    selectionVariantStore.sync();\r",
                                    "                                    var batch = {};\r",
                                    "                                    batch.proxy = taskStore.getProxy();\r",
                                    "                                    batch.proxy.extraParams = {};\r",
                                    "                                    batch.proxy.setExtraParam('deletedName',deleteNameInput);\r",
                                    "                                    taskStore.load({\r",
                                    "                                        batch: batch,\r",
                                    "                                        callback: function (){\r",
                                    "                                            Ext.MessageBox.alert(\r",
                                    "                                                'Deleted','Deleted Variant'\r",
                                    "                                            );\r",
                                    "                                        }\r",
                                    "                                    });\r",
                                    "                                } else {\r",
                                    "                                    this.hide();\r",
                                    "                                }\r",
                                    "                            }\r",
                                    "                        );\r",
                                    "                    } else {\r",
                                    "                        alert('Variant does not exist.');\r",
                                    "                    }\r",
                                    "                }\r",
                                    "            }\r",
                                    "        }\r",
                                    "    }\r",
                                    "]});\r",
                                    "var userGlobalIndex = GanttConfigStoreXml.findExact('name','saveGlobal');\r",
                                    "if (userGlobalIndex == -1){\r",
                                    "    var deleteFormCmp = Ext.ComponentManager.get('deleteForm');\r",
                                    "    if(deleteFormCmp !== undefined){\r",
                                    "        deleteFormCmp.hide();\r",
                                    "    }\r",
                                    "} else {\r",
                                    "    var userGlobalRecord = GanttConfigStoreXml.getAt(userGlobalIndex);\r",
                                    "    var userGlobalValue = userGlobalRecord.get('value');\r",
                                    "    if (userGlobalValue != 'X') {\r",
                                    "        var deleteFormCmp = Ext.ComponentManager.get('deleteForm');\r",
                                    "        deleteFormCmp.hide();\r",
                                    "    }\r",
                                    "}\r",
                                    "//define input forms\r",
                                    "var networkForm = new Ext.FormPanel ({\r",
                                    "    title: 'Network',\r",
                                    "    header: false,\r",
                                    "    items: [{\r",
                                    "        xtype: 'networkcustomtrigger',\r",
                                    "        fieldLabel: 'Network',\r",
                                    "        inputId: 'networkInput',\r",
                                    "        emptyText: 'Network Search'\r",
                                    "    }]\r",
                                    "});\r",
                                    "\r",
                                    "var materialForm = new Ext.FormPanel ({\r",
                                    "    title: 'Material',\r",
                                    "    header: false,\r",
                                    "    items: [{\r",
                                    "        xtype: 'materialcustomtrigger',\r",
                                    "        fieldLabel: 'Material',\r",
                                    "        inputId: 'materialInput',\r",
                                    "        name: 'Material',\r",
                                    "        emptyText: 'Material Search'\r",
                                    "    }]\r",
                                    "});\r",
                                    "var plantForm = new Ext.FormPanel ({\r",
                                    "    title: 'Plant',\r",
                                    "    header: false,\r",
                                    "    items: [{\r",
                                    "        xtype: 'plantcustomtrigger',\r",
                                    "        fieldLabel: 'Plant',\r",
                                    "        inputId: 'plantInput',\r",
                                    "        name: 'plant',\r",
                                    "        emptyText: 'Plant Search'\r",
                                    "    }]\r",
                                    "});\r",
                                    "var programForm = new Ext.FormPanel ({\r",
                                    "    title: 'Program',\r",
                                    "    header: false,\r",
                                    "    items: [{\r",
                                    "        xtype: 'programcustomtrigger',\r",
                                    "        fieldLabel: 'Program',\r",
                                    "        inputId: 'programInput',\r",
                                    "        name: 'program',\r",
                                    "        emptyText: 'Program Search'\r",
                                    "    }]\r",
                                    "});\r",
                                    "var effectivityForm = new Ext.FormPanel ({\r",
                                    "    title: 'Effectivity',\r",
                                    "    header: false,\r",
                                    "    items: [{\r",
                                    "        xtype: 'effectivitycustomtrigger',\r",
                                    "        fieldLabel: 'Effectivity',\r",
                                    "        inputId: 'effectivityInput',\r",
                                    "        name: 'effectivity',\r",
                                    "        emptyText: 'Effectivity Search'\r",
                                    "    }]\r",
                                    "});\r",
                                    "var primaryMissionForm = new Ext.FormPanel ({\r",
                                    "    title: 'Primary Mission',\r",
                                    "    header: false,\r",
                                    "    items: [{\r",
                                    "        xtype: 'primarymissioncustomtrigger',\r",
                                    "        fieldLabel: 'Primary Mission',\r",
                                    "        inputId: 'primaryMissionInput',\r",
                                    "        name: 'primaryMission',\r",
                                    "        emptyText: 'Primary Mission Search'\r",
                                    "    }]\r",
                                    "});\r",
                                    "var buildItemForm = new Ext.FormPanel ({\r",
                                    "    title: 'Build Item',\r",
                                    "    header: false,\r",
                                    "    items: [{\r",
                                    "        xtype: 'builditemcustomtrigger',\r",
                                    "        fieldLabel: 'Build Item',\r",
                                    "        inputId: 'buildItemInput',\r",
                                    "        name: 'buildItem',\r",
                                    "        emptyText: 'Build Item Search'\r",
                                    "    }]\r",
                                    "});\r",
                                    "var tailNumberForm = new Ext.FormPanel ({\r",
                                    "    title: 'Tail Number',\r",
                                    "    header: false,\r",
                                    "    items: [{\r",
                                    "        xtype: 'tailnumbercustomtrigger',\r",
                                    "        fieldLabel: 'Tail Number',\r",
                                    "        inputId: 'tailNumberInput',\r",
                                    "        name: 'tailNumber',\r",
                                    "        emptyText: 'Tail Number Search'\r",
                                    "    }]\r",
                                    "});\r",
                                    "var nameForm = new Ext.FormPanel ({\r",
                                    "    title: 'Name',\r",
                                    "    header: false,\r",
                                    "    items: [{\r",
                                    "        xtype: 'namecustomtrigger',\r",
                                    "        fieldLabel: 'Name',\r",
                                    "        inputId: 'nameInput',\r",
                                    "        name: 'name',\r",
                                    "        emptyText: 'Name Search'\r",
                                    "    }]\r",
                                    "});\r",
                                    "var notesForm = new Ext.FormPanel ({\r",
                                    "    title: 'Notes',\r",
                                    "    header: false,\r",
                                    "    items: [{\r",
                                    "        xtype: 'notescustomtrigger',\r",
                                    "        fieldLabel: 'Notes',\r",
                                    "        inputId: 'notesInput',\r",
                                    "        name: 'notes',\r",
                                    "        emptyText: 'Notes Search'\r",
                                    "    }\r",
                                    "           ]\r",
                                    "});\r",
                                    "\r",
                                    "// define toolbar\r",
                                    "\r",
                                    "//define tab panel and tabs\r",
                                    "var selectionTabPanel = new Ext.tab.Panel ({\r",
                                    "            activeTab:1,\r",
                                    "            region: 'center',\r",
                                    "            collapsible: false,\r",
                                    "            layout: 'fit',\r",
                                    "            rootVisible: false,\r",
                                    "            height: 500,\r",
                                    "            defaults: {\r",
                                    "                Padding: 10\r",
                                    "            },\r",
                                    "            items: [{\r",
                                    "                title: '',\r",
                                    "                icon: 'images/save.jpg',\r",
                                    "                titleCollapse: true,\r",
                                    "                items:\r",
                                    "                [saveForm,submitButton,deleteForm]\r",
                                    "            },{\r",
                                    "\r",
                                    "                title: '',\r",
                                    "                icon: 'images/execute.png',\r",
                                    "                titleCollapse: true,\r",
                                    "                items: [summaryOptionsForm]\r",
                                    "            },{\r",
                                    "                title: 'Program',\r",
                                    "                titleCollapse: true,\r",
                                    "                items: [programForm, programGrid]\r",
                                    "            },{\r",
                                    "                title: 'Tail Number',\r",
                                    "                titleCollapse: true,\r",
                                    "                items: [tailNumberForm, tailNumberGrid]\r",
                                    "            },{\r",
                                    "                title: 'Primary Mission',\r",
                                    "                titleCollapse: true,\r",
                                    "                items: [primaryMissionForm, primaryMissionGrid]\r",
                                    "            },{\r",
                                    "                title: 'Network',\r",
                                    "                titleCollapse: true,\r",
                                    "                items: [networkForm, networkGrid]\r",
                                    "            },{\r",
                                    "                title: 'Material',\r",
                                    "                titleCollapse: true,\r",
                                    "                items: [materialForm, materialGrid]\r",
                                    "            },{\r",
                                    "                title: 'Effectivity',\r",
                                    "                titleCollapse: true,\r",
                                    "                items: [effectivityForm, effectivityGrid]\r",
                                    "            },{\r",
                                    "                title: 'Plant',\r",
                                    "                titleCollapse: true,\r",
                                    "                items: [plantForm, plantGrid]\r",
                                    "            },{\r",
                                    "                title: 'Build Item',\r",
                                    "                titleCollapse: true,\r",
                                    "                items: [buildItemForm, buildItemGrid]\r",
                                    "            },{\r",
                                    "                title: 'Other Options',\r",
                                    "                titleCollapse: true,\r",
                                    "                items: [nameForm,notesForm]\r",
                                    "            }\r",
                                    "            ]\r",
                                    "});\r",
                                    "\r",
                                    "//create the window\r",
                                    "var selectionWindow = Ext.get('selectionWindow');\r",
                                    "if (selectionWindow === null) {\r",
                                    "    selectionWindow =\r",
                                    "        Ext.create('Ext.window.Window', {\r",
                                    "            title: 'Selection Criteria',\r",
                                    "            height: 500,\r",
                                    "            width: 800,\r",
                                    "            id: 'selectionWindow',\r",
                                    "            itemId: 'selectionWindow',\r",
                                    "            constrain: true,\r",
                                    "            layout:'border',\r",
                                    "            defaults: {\r",
                                    "                collapsible: true,\r",
                                    "                bodyStyle: 'padding:15px'\r",
                                    "            },\r",
                                    "            items: [selectionTree, selectionTabPanel]\r",
                                    "        }).show();\r",
                                    "} else {\r",
                                    "    selectionWindow.show();\r",
                                    "}"
                                ],
                                "name": "click",
                                "scope": "me"
                            },
                            "designerId": "0af18234-b199-4953-bd04-f9ddd6642d32"
                        }
                    ]
                },
                {
                    "type": "Ext.button.Button",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "hidden": true,
                        "icon": "images/excel.png",
                        "id": "exportToExcel",
                        "layout|flex": null,
                        "scale": "large",
                        "text": ""
                    },
                    "designerId": "a4607b82-1e24-478a-af2a-0f64a3722d86",
                    "cn": [
                        {
                            "type": "fixedfunction",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "designer|params": [
                                    "button",
                                    "e"
                                ],
                                "fn": "handler",
                                "implHandler": [
                                    "var ganttPanelExcel = Ext.getCmp('ganttPanel');\r",
                                    "debugger;\r",
                                    "var ganttPanelGrid = ganttPanelExcel.lockedGrid;\r",
                                    "//ganttPanelGrid.initPlugin(\r",
                                    "//    new Sch.plugin.ExcelExport()\r",
                                    "//);\r",
                                    "ganttPanelExcel.exportToExcel();"
                                ]
                            },
                            "designerId": "92be4aa6-7da5-46bc-9f1f-a4df93f98256"
                        }
                    ]
                },
                {
                    "type": "Ext.button.Button",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "icon": "images/pdf.png",
                        "id": "printToPdf",
                        "layout|flex": null,
                        "scale": "large",
                        "text": "",
                        "tooltip": [
                            "'Print to PDF'"
                        ]
                    },
                    "designerId": "eacebfdc-f0d1-4ce9-b81b-d63cab5828ae",
                    "cn": [
                        {
                            "type": "fixedfunction",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "designer|params": [
                                    "button",
                                    "e"
                                ],
                                "fn": "handler",
                                "implHandler": [
                                    "var me = this;\r",
                                    "var toolbar = me.up();\r",
                                    "var panel = toolbar.up();\r",
                                    "var ganttPanel = panel.items.first();\r",
                                    "var server = ganttPanel.getPlugin('exportServer');\r",
                                    "server.setFileFormat('pdf');\r",
                                    "ganttPanel.showExportDialog();\r",
                                    ""
                                ]
                            },
                            "designerId": "faec285d-805c-45ec-b8ad-d0a492add768"
                        }
                    ]
                },
                {
                    "type": "Ext.button.Button",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "height": 35,
                        "icon": "images/expand.png",
                        "id": "",
                        "itemId": "expand",
                        "layout|flex": null,
                        "scale": "large",
                        "text": "",
                        "tooltip": [
                            "'Expand All'"
                        ],
                        "width": 35
                    },
                    "designerId": "91345d95-84f7-4aef-89df-6e73766916e0",
                    "cn": [
                        {
                            "type": "fixedfunction",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "designer|params": [
                                    "button",
                                    "e"
                                ],
                                "fn": "handler",
                                "implHandler": [
                                    "var me = this;\r",
                                    "var ganttPanel = Ext.ComponentManager.get('ganttPanel');\r",
                                    "ganttPanel.setLoading();\r",
                                    "Ext.suspendLayouts();\r",
                                    "ganttPanel.expandAll();\r",
                                    "Ext.resumeLayouts();\r",
                                    "ganttPanel.setLoading(false);\r",
                                    ""
                                ]
                            },
                            "designerId": "762a7e7b-3b08-448a-898a-e65c60eb8b69"
                        }
                    ]
                },
                {
                    "type": "Ext.button.Button",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "height": 35,
                        "icon": "images/minimize.png",
                        "itemId": "minimize",
                        "layout|flex": null,
                        "scale": "large",
                        "text": "",
                        "tooltip": [
                            "'Minimize All'"
                        ],
                        "width": 35
                    },
                    "designerId": "516e0b5d-431f-4a32-875e-a5c04c5cd0d0",
                    "cn": [
                        {
                            "type": "fixedfunction",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "designer|params": [
                                    "button",
                                    "e"
                                ],
                                "fn": "handler",
                                "implHandler": [
                                    "var me = this;\r",
                                    "var ganttPanel = Ext.ComponentManager.get('ganttPanel');\r",
                                    "ganttPanel.setLoading(true);\r",
                                    "Ext.suspendLayouts();\r",
                                    "ganttPanel.collapseAll();\r",
                                    "Ext.resumeLayouts(true);\r",
                                    "ganttPanel.setLoading(false);"
                                ]
                            },
                            "designerId": "9210d42a-abeb-442e-885c-c8d67a027334"
                        }
                    ]
                },
                {
                    "type": "Ext.button.Button",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "enableToggle": true,
                        "height": 35,
                        "icon": "images/baseline.png",
                        "itemId": "showBaseline",
                        "layout|flex": null,
                        "scale": "large",
                        "text": null,
                        "tooltip": [
                            "'Toggle Baseline'"
                        ],
                        "width": 35
                    },
                    "designerId": "980d31e9-4e61-42f4-b0a0-b2f4c30868db",
                    "cn": [
                        {
                            "type": "fixedfunction",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "designer|params": [
                                    "button",
                                    "e"
                                ],
                                "fn": "handler",
                                "implHandler": [
                                    "var me = this;\r",
                                    "var ganttStore = Ext.getStore('GanttConfigStoreXml');\r",
                                    "var ganttPanel = Ext.ComponentManager.get('ganttPanel');\r",
                                    "var x = ganttStore.findExact('name','baselineShow');\r",
                                    "//check to see if it is the first baseline request\r",
                                    "if (x==-1){\r",
                                    "    ganttStore.add({\r",
                                    "        name: 'baselineShow',\r",
                                    "        value: 'x'\r",
                                    "    });\r",
                                    "    ganttPanel.showBaseline();\r",
                                    "} else {\r",
                                    "    ganttPanel.el.toggleCls('sch-ganttpanel-showbaseline');\r",
                                    "}\r",
                                    ""
                                ]
                            },
                            "designerId": "fd60e8da-9026-4bf6-a620-1f0303ba86da"
                        }
                    ]
                },
                {
                    "type": "Ext.button.Button",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "enableToggle": true,
                        "height": 35,
                        "icon": "images/labels.png",
                        "itemId": "showLabels",
                        "layout|flex": null,
                        "scale": "large",
                        "text": null,
                        "tooltip": [
                            "'Toggle Labels'"
                        ],
                        "width": 35
                    },
                    "designerId": "3f6bb66d-cd46-4509-81ff-650186826645",
                    "cn": [
                        {
                            "type": "fixedfunction",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "designer|params": [
                                    "button",
                                    "e"
                                ],
                                "fn": "handler",
                                "implHandler": [
                                    "var me = this;\r",
                                    "var ganttPanel = Ext.ComponentManager.get('ganttPanel');\r",
                                    "ganttPanel.el.toggleCls('hide-labels');\r",
                                    ""
                                ]
                            },
                            "designerId": "1fadde6c-47bc-46bc-bbc0-ec2683044045"
                        }
                    ]
                },
                {
                    "type": "Ext.toolbar.Spacer",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "layout|flex": null,
                        "width": 20
                    },
                    "designerId": "906d9abd-efbf-4333-9217-fa9b330948a8"
                },
                {
                    "type": "Ext.form.field.ComboBox",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "designer|displayName": "version",
                        "displayField": "description",
                        "fieldLabel": "Version",
                        "inputId": "versionValue",
                        "labelAlign": "top",
                        "labelWidth": 50,
                        "layout|flex": null,
                        "store": "VersionStoreXml"
                    },
                    "designerId": "f634d151-c967-4792-9ce6-39b13cc9041d",
                    "cn": [
                        {
                            "type": "basiceventbinding",
                            "reference": {
                                "name": "listeners",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "fn": "onComboboxSelect1",
                                "implHandler": [
                                    "var me = this;\r",
                                    "var passedConfigStore = Ext.getStore('PassedConfigStoreXml');\r",
                                    "var versionStore = Ext.getStore('VersionStoreXml');\r",
                                    "var versionInput = versionValue.value;\r",
                                    "var versionIndex = versionStore.findExact('description',versionInput);\r",
                                    "var versionRecord = versionStore.getAt(versionIndex);\r",
                                    "var versionName = versionRecord.get('version');\r",
                                    "var check = passedConfigStore.findExact('type','version');\r",
                                    "if (check != '-1') {\r",
                                    "    var remove = passedConfigStore.findExact('type','version');\r",
                                    "    passedConfigStore.removeAt(remove);\r",
                                    "    passedConfigStore.add({\r",
                                    "        type: 'version',\r",
                                    "        value: versionName\r",
                                    "    });\r",
                                    "} else {\r",
                                    "    passedConfigStore.add({\r",
                                    "        type: 'version',\r",
                                    "        value: versionName\r",
                                    "    });\r",
                                    "}\r",
                                    ""
                                ],
                                "name": "select",
                                "scope": "me"
                            },
                            "designerId": "92133daa-a4d3-4d8d-a8f5-287912dad85e"
                        },
                        {
                            "type": "basiceventbinding",
                            "reference": {
                                "name": "listeners",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "fn": "onComboboxAfterRender",
                                "implHandler": [
                                    "var me = this; \r",
                                    "var versionStore = Ext.getStore('VersionStoreXml');\r",
                                    "var versionInit = versionStore.findExact('selected','true');\r",
                                    "if (versionInit !== -1) {\r",
                                    "    versionInit = versionStore.getAt(versionInit).get('description');\r",
                                    "} else {\r",
                                    "    verionInit = '';\r",
                                    "}\r",
                                    "component.setValue(versionInit);"
                                ],
                                "name": "afterrender",
                                "scope": "me"
                            },
                            "designerId": "6bb27c9a-2572-4dbb-83be-2a8138992563"
                        }
                    ]
                },
                {
                    "type": "Ext.form.field.ComboBox",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "displayField": "description",
                        "fieldLabel": "Column Variant",
                        "forceSelection": true,
                        "inputId": "columnVariantValue",
                        "itemId": "column_variant",
                        "labelAlign": "top",
                        "labelWidth": null,
                        "layout|flex": null,
                        "name": "column_variant",
                        "padding": 10,
                        "queryMode": "local",
                        "store": "ColumnStoreXml",
                        "value": null,
                        "valueField": null,
                        "width": 200
                    },
                    "designerId": "99d2c3fe-5007-413e-9050-7dc801f0bd56",
                    "cn": [
                        {
                            "type": "basiceventbinding",
                            "reference": {
                                "name": "listeners",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "fn": "onColumn_variantSelect",
                                "implHandler": [
                                    "var me = this;\r",
                                    "var ganttConfigStore = Ext.getStore('GanttConfigStoreXml');\r",
                                    "var ganttPanel = Ext.ComponentManager.get('ganttPanel');\r",
                                    "var passedObjectsStore = Ext.getStore('PassedObjectsStoreXml');\r",
                                    "var passedConfigStore = Ext.getStore('PassedConfigStoreXml');\r",
                                    "var columnVariantStore = Ext.getStore('ColumnStoreXml');\r",
                                    "var columnVariantInput = columnVariantValue.value;\r",
                                    "var columnVariantIndex = columnVariantStore.findExact('description',columnVariantInput);\r",
                                    "var columnVariantRecord = columnVariantStore.getAt(columnVariantIndex);\r",
                                    "var columnVariantName = columnVariantRecord.get('name');\r",
                                    "var checkObjectsStore = passedObjectsStore.findExact('type','columnVariant');\r",
                                    "var checkConfigStore = passedConfigStore.findExact('type','columnVariant');\r",
                                    "if (checkObjectsStore != -1) {\r",
                                    "    var remove = passedObjectsStore.findExact('type','columnVariant');\r",
                                    "    passedObjectsStore.removeAt(remove);\r",
                                    "    passedObjectsStore.add({\r",
                                    "        type: 'columnVariant',\r",
                                    "        number: columnVariantName\r",
                                    "    });\r",
                                    "} else {\r",
                                    "    passedObjectsStore.add({\r",
                                    "        type: 'columnVariant',\r",
                                    "        number: columnVariantName\r",
                                    "    });\r",
                                    "}\r",
                                    "if (checkObjectsStore != -1) {\r",
                                    "    var remove = passedConfigStore.findExact('type','columnVariant');\r",
                                    "    passedConfigStore.removeAt(remove);\r",
                                    "    passedConfigStore.add({\r",
                                    "        type: 'columnVariant',\r",
                                    "        value: columnVariantName\r",
                                    "    });\r",
                                    "} else {\r",
                                    "    passedConfigStore.add({\r",
                                    "        type: 'columnVariant',\r",
                                    "        value: columnVariantName\r",
                                    "    });\r",
                                    "}\r",
                                    "var batch = {};\r",
                                    "batch.proxy = ganttConfigStore.getProxy();\r",
                                    "batch.proxy.extraParams = {};\r",
                                    "batch.proxy.setExtraParam('columnVariant',columnVariantName);\r",
                                    "ganttPanel.setLoading(true);\r",
                                    "ganttConfigStore.load({\r",
                                    "    batch: batch,\r",
                                    "    callback: function() {\r",
                                    "        me.eventTrigger.fireEvent('ganttConfig', me);\r",
                                    "        ganttPanel.setLoading(false);\r",
                                    "    }\r",
                                    "});\r",
                                    "\r",
                                    "\r",
                                    "\r",
                                    "\r",
                                    "\r",
                                    "\r",
                                    ""
                                ],
                                "name": "select",
                                "scope": "me"
                            },
                            "designerId": "6605d0c0-3b40-42fd-806f-06e1985af1ba"
                        },
                        {
                            "type": "basiceventbinding",
                            "reference": {
                                "name": "listeners",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "fn": "onColumn_variantAfterRender",
                                "implHandler": [
                                    "var me = this;\r",
                                    "var columnStore = Ext.getStore('ColumnVariantStoreXml');\r",
                                    "var columnInit = columnStore.findExact('selected','X');\r",
                                    "if (columnInit !== -1) {\r",
                                    "    columnInit = columnStore.getAt(columnInit).get('description');\r",
                                    "} else {\r",
                                    "    columnInit = '';\r",
                                    "}\r",
                                    "component.setValue(columnInit);"
                                ],
                                "name": "afterrender",
                                "scope": "me"
                            },
                            "designerId": "ca0d3e5f-a3bd-465e-a1f8-46d5e9b19338"
                        }
                    ]
                },
                {
                    "type": "Ext.form.field.ComboBox",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "displayField": "description",
                        "fieldLabel": "Selection Variant",
                        "forceSelection": true,
                        "inputId": "selectionVariantValue",
                        "itemId": "selection_variant",
                        "labelAlign": "top",
                        "labelPad": 0,
                        "labelWidth": null,
                        "layout|flex": null,
                        "name": "selection_variant",
                        "padding": 10,
                        "queryMode": "local",
                        "store": "SelectionVariantStoreXml",
                        "valueField": null,
                        "width": 200
                    },
                    "designerId": "3ddc94d9-9ee9-424b-9a47-5df8b5b5c381",
                    "cn": [
                        {
                            "type": "basiceventbinding",
                            "reference": {
                                "name": "listeners",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "fn": "onSelection_variantSelect",
                                "implHandler": [
                                    "var me = this;\r",
                                    "var taskStore = Ext.getStore('taskStore');\r",
                                    "var ganttConfigStore = Ext.getStore('GanttConfigStoreXml');\r",
                                    "var passedObjectsStore = Ext.getStore('PassedObjectsStoreXml');\r",
                                    "var passedConfigStore = Ext.getStore('PassedConfigStoreXml');\r",
                                    "var selectionVariantStore = Ext.getStore('SelectionVariantStoreXml');\r",
                                    "var SelectedObjectStoreXml = Ext.getStore('SelectedObjectStoreXml');\r",
                                    "var paramStore = Ext.getStore('ParamStoreXml');\r",
                                    "var passedObjectsStore = Ext.getStore('PassedObjectsStoreXml');\r",
                                    "var selectedVariantRecord = selectionVariantStore.findExact('description',selectionVariantValue.value);\r",
                                    "var selectedVariantName = selectionVariantStore.getAt(selectedVariantRecord).get('name');\r",
                                    "var selectedVariantType = selectionVariantStore.getAt(selectedVariantRecord).get('type');\r",
                                    "var check = passedConfigStore.findExact('type','selectionVariant');\r",
                                    "var ganttPanel = Ext.ComponentManager.get('ganttPanel');\r",
                                    "//add noPrompt\r",
                                    "ganttConfigStore.add({\r",
                                    "    name: 'noPrompt',\r",
                                    "    value: ''\r",
                                    "});\r",
                                    "if (check != '-1') {\r",
                                    "    var remove = passedConfigStore.findExact('type','selectionVariant');\r",
                                    "    passedConfigStore.removeAt(remove);\r",
                                    "    passedConfigStore.add({\r",
                                    "        type: 'selectionVariant',\r",
                                    "        value: selectedVariantName\r",
                                    "    });\r",
                                    "} else {\r",
                                    "    passedConfigStore.add({\r",
                                    "        type: 'selectionVariant',\r",
                                    "        value: selectedVariantName\r",
                                    "    });\r",
                                    "}\r",
                                    "var batch = {};\r",
                                    "batch.proxy = paramStore.getProxy();\r",
                                    "batch.proxy.extraParams = {};\r",
                                    "batch.proxy.setExtraParam('selectionVariant', selectedVariantName);\r",
                                    "batch.proxy.setExtraParam('selectionVariantType', selectedVariantType);\r",
                                    "passedObjectsStore.removeAll();\r",
                                    "paramStore.removeAll();\r",
                                    "paramStore.load ({\r",
                                    "    batch: batch,\r",
                                    "    callback: function () {\r",
                                    "        var networkParentNode = SelectedObjectStoreXml.getNodeById(\"networkParentNode\");\r",
                                    "        var materialParentNode = SelectedObjectStoreXml.getNodeById(\"materialParentNode\");\r",
                                    "        var effectivityParentNode = SelectedObjectStoreXml.getNodeById(\"effectivityParentNode\");\r",
                                    "        var programParentNode = SelectedObjectStoreXml.getNodeById(\"programParentNode\");\r",
                                    "        var primaryMissionParentNode = SelectedObjectStoreXml.getNodeById(\"primaryMissionParentNode\");\r",
                                    "        var tailNumberParentNode = SelectedObjectStoreXml.getNodeById(\"tailNumberParentNode\");\r",
                                    "        var buildItemParentNode = SelectedObjectStoreXml.getNodeById(\"buildItemParentNode\");\r",
                                    "        var nameParentNode = SelectedObjectStoreXml.getNodeById(\"nameParentNode\");\r",
                                    "        var notesParentNode = SelectedObjectStoreXml.getNodeById(\"notesParentNode\");\r",
                                    "        networkParentNode.removeAll();\r",
                                    "        materialParentNode.removeAll();\r",
                                    "        effectivityParentNode.removeAll();\r",
                                    "        programParentNode.removeAll();\r",
                                    "        primaryMissionParentNode.removeAll();\r",
                                    "        buildItemParentNode.removeAll();\r",
                                    "        notesParentNode.removeAll();\r",
                                    "        nameParentNode.removeAll();\r",
                                    "        tailNumberParentNode.removeAll();\r",
                                    "        paramStore.each(\r",
                                    "        function (record) {\r",
                                    "            var name = record.get('name');\r",
                                    "            var value = record.get('value');\r",
                                    "            var selectedStore = Ext.getStore('SelectedObjectStoreXml');\r",
                                    "            var passedObjectsStore = Ext.getStore('PassedObjectsStoreXml');\r",
                                    "            var paramStore = Ext.getStore('ParamStoreXml');\r",
                                    "            var networkParentNode = SelectedObjectStoreXml.getNodeById(\"networkParentNode\");\r",
                                    "            var materialParentNode = SelectedObjectStoreXml.getNodeById(\"materialParentNode\");\r",
                                    "            var effectivityParentNode = SelectedObjectStoreXml.getNodeById(\"effectivityParentNode\");\r",
                                    "            var programParentNode = SelectedObjectStoreXml.getNodeById(\"programParentNode\");\r",
                                    "            var primaryMissionParentNode = SelectedObjectStoreXml.getNodeById(\"primaryMissionParentNode\");\r",
                                    "            var tailNumberParentNode = SelectedObjectStoreXml.getNodeById(\"tailNumberParentNode\");\r",
                                    "            var buildItemParentNode = SelectedObjectStoreXml.getNodeById(\"buildItemParentNode\");\r",
                                    "            var nameParentNode = SelectedObjectStoreXml.getNodeById(\"nameParentNode\");\r",
                                    "            var notesParentNode = SelectedObjectStoreXml.getNodeById(\"notesParentNode\");\r",
                                    "            switch (name) {\r",
                                    "                case 'network' :\r",
                                    "                    passedObjectsStore.add(\r",
                                    "                        {type: name, number: value}\r",
                                    "                    );\r",
                                    "                    var networkChildNode = networkParentNode.appendChild({\r",
                                    "                        type: name,\r",
                                    "                        number: value,\r",
                                    "                        leaf: true\r",
                                    "                    });\r",
                                    "                    break;\r",
                                    "                case 'material' :\r",
                                    "                    passedObjectsStore.add(\r",
                                    "                        {type: name, number: value}\r",
                                    "                    );\r",
                                    "                    var materialChildNode = materialParentNode.appendChild({\r",
                                    "                        type: name,\r",
                                    "                        number: value,\r",
                                    "                        leaf: true\r",
                                    "                    });\r",
                                    "                    break;\r",
                                    "                case 'effectivity' :\r",
                                    "                    passedObjectsStore.add(\r",
                                    "                        {type: name, number: value}\r",
                                    "                    );\r",
                                    "                    var effectivityChildNode = effectivityParentNode.appendChild({\r",
                                    "                        type: name,\r",
                                    "                        number: value,\r",
                                    "                        leaf: true\r",
                                    "                    });\r",
                                    "                    break;\r",
                                    "                case 'program' :\r",
                                    "                    passedObjectsStore.add(\r",
                                    "                        {type: name, number: value}\r",
                                    "                    );\r",
                                    "                    var programChildNode = programParentNode.appendChild({\r",
                                    "                        type: name,\r",
                                    "                        number: value,\r",
                                    "                        leaf: true\r",
                                    "                    });\r",
                                    "                    break;\r",
                                    "                case 'primaryMission' :\r",
                                    "                    passedObjectsStore.add(\r",
                                    "                        {type: name, number: value}\r",
                                    "                    );\r",
                                    "                    var primaryMissionChildNode = primaryMissionParentNode.appendChild({\r",
                                    "                        type: name,\r",
                                    "                        number: value,\r",
                                    "                        leaf: true\r",
                                    "                    });\r",
                                    "                    break;\r",
                                    "                case 'buildItem' :\r",
                                    "                    passedObjectsStore.add(\r",
                                    "                        {type: name, number: value}\r",
                                    "                    );\r",
                                    "                    var buildItemChildNode = buildItemParentNode.appendChild({\r",
                                    "                        type: name,\r",
                                    "                        number: value,\r",
                                    "                        leaf: true\r",
                                    "                    });\r",
                                    "                    break;\r",
                                    "                case 'tailNumber' :\r",
                                    "                    passedObjectsStore.add(\r",
                                    "                        {type: name, number: value}\r",
                                    "                    );\r",
                                    "                    var tailNumberChildNode = tailNumberParentNode.appendChild({\r",
                                    "                        type: name,\r",
                                    "                        number: value,\r",
                                    "                        leaf: true\r",
                                    "                    });\r",
                                    "                    break;\r",
                                    "                case 'name' :\r",
                                    "                    passedObjectsStore.add(\r",
                                    "                        {type: name, number: value}\r",
                                    "                    );\r",
                                    "                    var nameChildNode = nameParentNode.appendChild({\r",
                                    "                        type: name,\r",
                                    "                        number: value,\r",
                                    "                        leaf: true\r",
                                    "                    });\r",
                                    "                    break;\r",
                                    "                case 'notes' :\r",
                                    "                    passedObjectsStore.add(\r",
                                    "                        {type: name, number: value}\r",
                                    "                    );\r",
                                    "                    var notesChildNode = notesParentNode.appendChild({\r",
                                    "                        type: name,\r",
                                    "                        number: value,\r",
                                    "                        leaf: true\r",
                                    "                    });\r",
                                    "                    break;\r",
                                    "                 case 'majorShippedEndItemsOptions' :\r",
                                    "                    passedObjectsStore.add(\r",
                                    "                        {type: name, number: value}\r",
                                    "                    );\r",
                                    "                    paramStore.add(\r",
                                    "                        {name: name, value: value}\r",
                                    "                    );\r",
                                    "                    break;\r",
                                    "                 case 'missionOptions' :\r",
                                    "                    passedObjectsStore.add(\r",
                                    "                        {type: name, number: value}\r",
                                    "                    );\r",
                                    "                    paramStore.add(\r",
                                    "                        {name: name, value: value}\r",
                                    "                    );\r",
                                    "                    break;\r",
                                    "                 case 'productionEndItemsOptions' :\r",
                                    "                    passedObjectsStore.add(\r",
                                    "                        {type: name, number: value}\r",
                                    "                    );\r",
                                    "                    paramStore.add(\r",
                                    "                        {name: name, value: value}\r",
                                    "                    );\r",
                                    "                    break;\r",
                                    "                 case 'sortBy' :\r",
                                    "                    passedObjectsStore.add(\r",
                                    "                        {type: name, number: value}\r",
                                    "                    );\r",
                                    "                    paramStore.add(\r",
                                    "                        {name: name, value: value}\r",
                                    "                    );\r",
                                    "                    break;\r",
                                    "                 case 'baselineOptions' :\r",
                                    "                    passedObjectsStore.add(\r",
                                    "                        {type: name, number: value}\r",
                                    "                    );\r",
                                    "                    paramStore.add(\r",
                                    "                        {name: name, value: value}\r",
                                    "                    );\r",
                                    "                    break;\r",
                                    "                 case 'showDetails' :\r",
                                    "                    passedObjectsStore.add(\r",
                                    "                        {type: name, number: value}\r",
                                    "                    );\r",
                                    "                    paramStore.add(\r",
                                    "                        {name: name, value: value}\r",
                                    "                    );\r",
                                    "                    break;\r",
                                    "            }\r",
                                    "        }\r",
                                    "        );\r",
                                    "    }\r",
                                    "});"
                                ],
                                "name": "select",
                                "scope": "me"
                            },
                            "designerId": "743843dc-45ca-45db-a1e4-42504fb1e898"
                        }
                    ]
                },
                {
                    "type": "Ext.form.field.ComboBox",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "designer|displayName": "changeGanttView",
                        "displayField": "name",
                        "fieldLabel": "Change Gantt View",
                        "inputId": "ganttViewInput",
                        "labelAlign": "top",
                        "layout|flex": null,
                        "store": "GanttViewStore"
                    },
                    "designerId": "351f7e80-952f-44db-aa26-b98d3615e35a",
                    "cn": [
                        {
                            "type": "basiceventbinding",
                            "reference": {
                                "name": "listeners",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "fn": "onComboboxSelect",
                                "implHandler": [
                                    "var me = this;\r",
                                    "var ganttPanel = Ext.ComponentManager.get('ganttPanel');\r",
                                    "var input = ganttViewInput.value;\r",
                                    "var ganttConfigStore = Ext.getStore('GanttConfigStoreXml');\r",
                                    "//finishDate\r",
                                    "var finishRecordIndex = ganttConfigStore.findExact('name','finish');\r",
                                    "if (finishRecordIndex != -1) {\r",
                                    "    var finishRecord = ganttConfigStore.getAt(finishRecordIndex);\r",
                                    "    var finishDate = new Date(finishRecord.get('value'));\r",
                                    "    //pad by a month to have extra space in view\r",
                                    "    var finishDatePad = new Date(finishDate);\r",
                                    "    finishDatePad.setMonth(finishDatePad.getMonth()+1);\r",
                                    "    var finishValue = new Date(finishDatePad);\r",
                                    "}\r",
                                    "//startDate\r",
                                    "startRecordIndex = ganttConfigStore.findExact('name','start');\r",
                                    "if (startRecordIndex != -1) {\r",
                                    "    var startRecord = ganttConfigStore.getAt(startRecordIndex);\r",
                                    "    var startDate = new Date(startRecord.get('value'));\r",
                                    "    //pad by 30 days to have extra space in view\r",
                                    "    var startDatePad = new Date(startDate);\r",
                                    "    startDatePad.setMonth(startDatePad.getMonth()-1);\r",
                                    "    var startValue = new Date(startDatePad);\r",
                                    "}\r",
                                    "switch (input){\r",
                                    "    case 'Month & Year':\r",
                                    "        ganttPanel.switchViewPreset('monthAndYear',new Date(startValue), new Date(finishValue));\r",
                                    "        break;\r",
                                    "    case 'Year & Quarter':\r",
                                    "        ganttPanel.switchViewPreset('year',new Date(startValue), new Date(finishValue));\r",
                                    "        break;\r",
                                    "    case 'Week & Month':\r",
                                    "        ganttPanel.switchViewPreset('weekAndMonth',new Date(startValue), new Date(finishValue));\r",
                                    "        break;\r",
                                    "    case 'Week & Day':\r",
                                    "        ganttPanel.switchViewPreset('weekAndDay',new Date(startValue), new Date(finishValue));\r",
                                    "        break;\r",
                                    "    case 'Day & Week':\r",
                                    "        ganttPanel.switchViewPreset('dayAndWeek',new Date(startValue), new Date(finishValue));\r",
                                    "        break;\r",
                                    "}\r",
                                    "\r",
                                    ""
                                ],
                                "name": "select",
                                "scope": "me"
                            },
                            "designerId": "0036c59d-2cda-415a-b86b-d1a661604566"
                        }
                    ]
                }
            ]
        },
        {
            "type": "Ext.panel.Panel",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "autoFitOnLoad": true,
                "autoRender": true,
                "autoShow": true,
                "baselineVisible": null,
                "cls": "x-tree-noicon",
                "designer|createAlias": "ganttpanel",
                "enableBaseline": true,
                "header": false,
                "icon": "images/ula-logo.png",
                "iconCls": "ula-header-icon",
                "id": "ganttPanel",
                "itemId": null,
                "maxWidth": null,
                "resizable": [
                    "true\r",
                    ""
                ],
                "showTodayLine": false,
                "title": "MASTER PRODUCTION SCHEDULE (MPS)",
                "titleAlign": "center",
                "width": null
            },
            "configAlternates": {
                "enableBaseline": "boolean",
                "baselineVisible": "boolean",
                "showTodayLine": "boolean",
                "autoFitOnLoad": "boolean",
                "Gantt-cfg-autoFitOnLoad": "boolean"
            },
            "designerId": "df021976-4583-460f-bdc7-7f601d9913c4",
            "customConfigs": [
                {
                    "group": "(Custom Properties)",
                    "name": "enableBaseline",
                    "type": "string"
                },
                {
                    "group": "(Custom Properties)",
                    "name": "baselineVisible",
                    "type": "string"
                },
                {
                    "group": "(Custom Properties)",
                    "name": "showTodayLine",
                    "type": "string"
                },
                {
                    "group": "(Custom Properties)",
                    "name": "autoFitOnLoad",
                    "type": "string"
                }
            ],
            "cn": [
                {
                    "type": "Ext.tree.Panel",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "collapseDirection": "left",
                        "collapsed": false,
                        "collapsible": true,
                        "displayField": "number",
                        "hidden": true,
                        "rootVisible": false,
                        "store": "SelectedObjectStoreXml",
                        "title": "Selected Objects",
                        "useArrows": true,
                        "width": 150
                    },
                    "designerId": "8c9fae5e-aa52-4327-b539-9770539cc632"
                },
                {
                    "type": "processcfgfunction",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "designer|params": [
                            "config"
                        ],
                        "fn": "processGanttPanel",
                        "implHandler": [
                            "var me = this;\r",
                            "var selectedObject;\r",
                            "var columnVariantStore = Ext.getStore('ColumnVariantStoreXml');\r",
                            "var selectedRecord;\r",
                            "selectedRecord = columnVariantStore.findExact('selected', 't');\r",
                            "\r",
                            "if (!me.eventTrigger){\r",
                            "    // lazy instantiation of event trigger object\r",
                            "    me.eventTrigger = Ext.create('widget.eventtrigger');\r",
                            "}\r",
                            "me.eventTrigger.fireEvent('ganttConfig', me, config);\r",
                            "return me.returnValue;"
                        ]
                    },
                    "designerId": "5812d5b3-412e-4767-92f5-50f7d50e3378"
                }
            ]
        }
    ]
}